<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objets\Truma_EBL_Bios_V100.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objets\Truma_EBL_Bios_V100.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Mon Jul 29 13:24:28 2024
<BR><P>
<H3>Maximum Stack Usage =       1044 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Arvi_Setup &rArr; initTopics() &rArr; LeisureBattery1::LeisureBattery1(short) &rArr; LinClients::setIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[141]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[62]">ADC_DMAConvCplt</a> from stm32g4xx_hal_adc.o(.text.ADC_DMAConvCplt) referenced 2 times from stm32g4xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
 <LI><a href="#[64]">ADC_DMAError</a> from stm32g4xx_hal_adc.o(.text.ADC_DMAError) referenced 2 times from stm32g4xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
 <LI><a href="#[63]">ADC_DMAHalfConvCplt</a> from stm32g4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt) referenced 2 times from stm32g4xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32g4xx_it.o(.text.BusFault_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[46]">COMP1_2_3_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[47]">COMP4_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[5b]">CORDIC_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[48]">CRS_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from stm32g4xx_it.o(.text.DMA1_Channel1_IRQHandler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from stm32g4xx_it.o(.text.DMA1_Channel2_IRQHandler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[57]">DMA1_Channel8_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[40]">DMA2_Channel1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[41]">DMA2_Channel2_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[42]">DMA2_Channel3_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[43]">DMA2_Channel4_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[44]">DMA2_Channel5_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[58]">DMA2_Channel6_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[59]">DMA2_Channel7_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[5a]">DMA2_Channel8_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[55]">DMAMUX_OVR_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32g4xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[1f]">FDCAN1_IT0_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[20]">FDCAN1_IT1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[4f]">FDCAN2_IT0_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[50]">FDCAN2_IT1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[5c]">FMAC_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[4e]">FPU_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32g4xx_it.o(.text.HardFault_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[54]">I2C3_ER_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[53]">I2C3_EV_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[3a]">LPTIM1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[52]">LPUART1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32g4xx_it.o(.text.MemManage_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32g4xx_it.o(.text.NMI_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[b]">PVD_PVM_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32g4xx_it.o(.text.PendSV_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[56]">QUADSPI_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[51]">RNG_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[c]">RTC_TAMP_LSECSS_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[49]">SAI1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[3b]">SPI3_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32g4xx_it.o(.text.SVC_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32g4xx_it.o(.text.SysTick_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32g4xx.o(.text.SystemInit) referenced from startup_stm32g491xx.o(.text)
 <LI><a href="#[22]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[4a]">TIM20_BRK_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[4d]">TIM20_CC_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[4c]">TIM20_TRG_COM_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[4b]">TIM20_UP_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[3e]">TIM6_DAC_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[3f]">TIM7_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[3c]">UART4_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[3d]">UART5_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[65]">UART_DMAAbortOnError</a> from stm32g4xx_hal_uart.o(.text.UART_DMAAbortOnError) referenced 2 times from stm32g4xx_hal_uart.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[66]">UART_RxISR_16BIT</a> from stm32g4xx_hal_uart.o(.text.UART_RxISR_16BIT) referenced 2 times from stm32g4xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN)
 <LI><a href="#[66]">UART_RxISR_16BIT</a> from stm32g4xx_hal_uart.o(.text.UART_RxISR_16BIT) referenced 2 times from stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[68]">UART_RxISR_16BIT_FIFOEN</a> from stm32g4xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN) referenced 2 times from stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[67]">UART_RxISR_8BIT</a> from stm32g4xx_hal_uart.o(.text.UART_RxISR_8BIT) referenced 2 times from stm32g4xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN)
 <LI><a href="#[67]">UART_RxISR_8BIT</a> from stm32g4xx_hal_uart.o(.text.UART_RxISR_8BIT) referenced 2 times from stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[69]">UART_RxISR_8BIT_FIFOEN</a> from stm32g4xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN) referenced 2 times from stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
 <LI><a href="#[45]">UCPD1_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from stm32g4xx_it.o(.text.USART1_IRQHandler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from stm32g4xx_it.o(.text.USART3_IRQHandler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[1d]">USB_HP_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[1e]">USB_LP_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32g4xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32g491xx.o(.text) referenced from startup_stm32g491xx.o(RESET)
 <LI><a href="#[cb]">_GLOBAL__sub_I_Arvi_Main.cpp</a> from arvi-main.o(.text._GLOBAL__sub_I_Arvi_Main.cpp) referenced from arvi-main.o(.init_array)
 <LI><a href="#[cc]">_GLOBAL__sub_I_CanAttender.cpp</a> from canattender.o(.text._GLOBAL__sub_I_CanAttender.cpp) referenced from canattender.o(.init_array)
 <LI><a href="#[cd]">_GLOBAL__sub_I_ErrorManager.cpp</a> from errormanager.o(.text._GLOBAL__sub_I_ErrorManager.cpp) referenced from errormanager.o(.init_array)
 <LI><a href="#[71]">GrayWater1::updateState()</a> from graywater_1.o(.text._ZN10GrayWater111updateStateEv) referenced from graywater_1.o(.rodata._ZTV10GrayWater1)
 <LI><a href="#[70]">GrayWater1::getTopicState()</a> from graywater_1.o(.text._ZN10GrayWater113getTopicStateEv) referenced from graywater_1.o(.rodata._ZTV10GrayWater1)
 <LI><a href="#[6f]">GrayWater1::topicReceived(unsigned char*)</a> from graywater_1.o(.text._ZN10GrayWater113topicReceivedEPh) referenced from graywater_1.o(.rodata._ZTV10GrayWater1)
 <LI><a href="#[6d]">GrayWater1::setOn()</a> from graywater_1.o(.text._ZN10GrayWater15setOnEv) referenced from graywater_1.o(.rodata._ZTV10GrayWater1)
 <LI><a href="#[6e]">GrayWater1::setOff()</a> from graywater_1.o(.text._ZN10GrayWater16setOffEv) referenced from graywater_1.o(.rodata._ZTV10GrayWater1)
 <LI><a href="#[73]">LinClients::processInfoFrame(unsigned char*)</a> from linclients.o(.text._ZN10LinClients16processInfoFrameEPh) referenced from linclients.o(.rodata._ZTV10LinClients)
 <LI><a href="#[78]">Multimedia::updateState()</a> from multimedia.o(.text._ZN10Multimedia11updateStateEv) referenced from multimedia.o(.rodata._ZTV10Multimedia)
 <LI><a href="#[77]">Multimedia::getTopicState()</a> from multimedia.o(.text._ZN10Multimedia13getTopicStateEv) referenced from multimedia.o(.rodata._ZTV10Multimedia)
 <LI><a href="#[76]">Multimedia::topicReceived(unsigned char*)</a> from multimedia.o(.text._ZN10Multimedia13topicReceivedEPh) referenced from multimedia.o(.rodata._ZTV10Multimedia)
 <LI><a href="#[74]">Multimedia::setOn()</a> from multimedia.o(.text._ZN10Multimedia5setOnEv) referenced from multimedia.o(.rodata._ZTV10Multimedia)
 <LI><a href="#[75]">Multimedia::setOff()</a> from multimedia.o(.text._ZN10Multimedia6setOffEv) referenced from multimedia.o(.rodata._ZTV10Multimedia)
 <LI><a href="#[7e]">FreshWater1::updateState()</a> from freshwater_1.o(.text._ZN11FreshWater111updateStateEv) referenced from freshwater_1.o(.rodata._ZTV11FreshWater1)
 <LI><a href="#[7d]">FreshWater1::getTopicState()</a> from freshwater_1.o(.text._ZN11FreshWater113getTopicStateEv) referenced from freshwater_1.o(.rodata._ZTV11FreshWater1)
 <LI><a href="#[7c]">FreshWater1::topicReceived(unsigned char*)</a> from freshwater_1.o(.text._ZN11FreshWater113topicReceivedEPh) referenced from freshwater_1.o(.rodata._ZTV11FreshWater1)
 <LI><a href="#[7a]">FreshWater1::setOn()</a> from freshwater_1.o(.text._ZN11FreshWater15setOnEv) referenced from freshwater_1.o(.rodata._ZTV11FreshWater1)
 <LI><a href="#[7b]">FreshWater1::setOff()</a> from freshwater_1.o(.text._ZN11FreshWater16setOffEv) referenced from freshwater_1.o(.rodata._ZTV11FreshWater1)
 <LI><a href="#[84]">FloorHeating::updateState()</a> from floorheating.o(.text._ZN12FloorHeating11updateStateEv) referenced from floorheating.o(.rodata._ZTV12FloorHeating)
 <LI><a href="#[83]">FloorHeating::getTopicState()</a> from floorheating.o(.text._ZN12FloorHeating13getTopicStateEv) referenced from floorheating.o(.rodata._ZTV12FloorHeating)
 <LI><a href="#[82]">FloorHeating::topicReceived(unsigned char*)</a> from floorheating.o(.text._ZN12FloorHeating13topicReceivedEPh) referenced from floorheating.o(.rodata._ZTV12FloorHeating)
 <LI><a href="#[80]">FloorHeating::setOn()</a> from floorheating.o(.text._ZN12FloorHeating5setOnEv) referenced from floorheating.o(.rodata._ZTV12FloorHeating)
 <LI><a href="#[81]">FloorHeating::setOff()</a> from floorheating.o(.text._ZN12FloorHeating6setOffEv) referenced from floorheating.o(.rodata._ZTV12FloorHeating)
 <LI><a href="#[8a]">EmptyingValve::updateState()</a> from emptyingvalve.o(.text._ZN13EmptyingValve11updateStateEv) referenced from emptyingvalve.o(.rodata._ZTV13EmptyingValve)
 <LI><a href="#[89]">EmptyingValve::getTopicState()</a> from emptyingvalve.o(.text._ZN13EmptyingValve13getTopicStateEv) referenced from emptyingvalve.o(.rodata._ZTV13EmptyingValve)
 <LI><a href="#[88]">EmptyingValve::topicReceived(unsigned char*)</a> from emptyingvalve.o(.text._ZN13EmptyingValve13topicReceivedEPh) referenced from emptyingvalve.o(.rodata._ZTV13EmptyingValve)
 <LI><a href="#[86]">EmptyingValve::setOn()</a> from emptyingvalve.o(.text._ZN13EmptyingValve5setOnEv) referenced from emptyingvalve.o(.rodata._ZTV13EmptyingValve)
 <LI><a href="#[87]">EmptyingValve::setOff()</a> from emptyingvalve.o(.text._ZN13EmptyingValve6setOffEv) referenced from emptyingvalve.o(.rodata._ZTV13EmptyingValve)
 <LI><a href="#[91]">EngineBattery1::updateState()</a> from enginebattery1.o(.text._ZN14EngineBattery111updateStateEv) referenced from enginebattery1.o(.rodata._ZTV14EngineBattery1)
 <LI><a href="#[90]">EngineBattery1::getTopicState()</a> from enginebattery1.o(.text._ZN14EngineBattery113getTopicStateEv) referenced from enginebattery1.o(.rodata._ZTV14EngineBattery1)
 <LI><a href="#[8f]">EngineBattery1::topicReceived(unsigned char*)</a> from enginebattery1.o(.text._ZN14EngineBattery113topicReceivedEPh) referenced from enginebattery1.o(.rodata._ZTV14EngineBattery1)
 <LI><a href="#[8d]">EngineBattery1::setOn()</a> from enginebattery1.o(.text._ZN14EngineBattery15setOnEv) referenced from enginebattery1.o(.rodata._ZTV14EngineBattery1)
 <LI><a href="#[8e]">EngineBattery1::setOff()</a> from enginebattery1.o(.text._ZN14EngineBattery16setOffEv) referenced from enginebattery1.o(.rodata._ZTV14EngineBattery1)
 <LI><a href="#[97]">ExternalLigths::updateState()</a> from externalligths.o(.text._ZN14ExternalLigths11updateStateEv) referenced from externalligths.o(.rodata._ZTV14ExternalLigths)
 <LI><a href="#[96]">ExternalLigths::getTopicState()</a> from externalligths.o(.text._ZN14ExternalLigths13getTopicStateEv) referenced from externalligths.o(.rodata._ZTV14ExternalLigths)
 <LI><a href="#[95]">ExternalLigths::topicReceived(unsigned char*)</a> from externalligths.o(.text._ZN14ExternalLigths13topicReceivedEPh) referenced from externalligths.o(.rodata._ZTV14ExternalLigths)
 <LI><a href="#[93]">ExternalLigths::setOn()</a> from externalligths.o(.text._ZN14ExternalLigths5setOnEv) referenced from externalligths.o(.rodata._ZTV14ExternalLigths)
 <LI><a href="#[94]">ExternalLigths::setOff()</a> from externalligths.o(.text._ZN14ExternalLigths6setOffEv) referenced from externalligths.o(.rodata._ZTV14ExternalLigths)
 <LI><a href="#[9d]">InternalLigths::updateState()</a> from internalligths.o(.text._ZN14InternalLigths11updateStateEv) referenced from internalligths.o(.rodata._ZTV14InternalLigths)
 <LI><a href="#[9c]">InternalLigths::getTopicState()</a> from internalligths.o(.text._ZN14InternalLigths13getTopicStateEv) referenced from internalligths.o(.rodata._ZTV14InternalLigths)
 <LI><a href="#[9b]">InternalLigths::topicReceived(unsigned char*)</a> from internalligths.o(.text._ZN14InternalLigths13topicReceivedEPh) referenced from internalligths.o(.rodata._ZTV14InternalLigths)
 <LI><a href="#[99]">InternalLigths::setOn()</a> from internalligths.o(.text._ZN14InternalLigths5setOnEv) referenced from internalligths.o(.rodata._ZTV14InternalLigths)
 <LI><a href="#[9a]">InternalLigths::setOff()</a> from internalligths.o(.text._ZN14InternalLigths6setOffEv) referenced from internalligths.o(.rodata._ZTV14InternalLigths)
 <LI><a href="#[a3]">LeisureBattery1::updateState()</a> from leisurebattery1.o(.text._ZN15LeisureBattery111updateStateEv) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[a2]">LeisureBattery1::getTopicState()</a> from leisurebattery1.o(.text._ZN15LeisureBattery113getTopicStateEv) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[a1]">LeisureBattery1::topicReceived(unsigned char*)</a> from leisurebattery1.o(.text._ZN15LeisureBattery113topicReceivedEPh) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[a4]">LeisureBattery1::processInfoFrame(unsigned char*)</a> from leisurebattery1.o(.text._ZN15LeisureBattery116processInfoFrameEPh) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[9f]">LeisureBattery1::setOn()</a> from leisurebattery1.o(.text._ZN15LeisureBattery15setOnEv) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[a0]">LeisureBattery1::setOff()</a> from leisurebattery1.o(.text._ZN15LeisureBattery16setOffEv) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[ab]">SolarRegulator1::updateState()</a> from solarregulator1.o(.text._ZN15SolarRegulator111updateStateEv) referenced from solarregulator1.o(.rodata._ZTV15SolarRegulator1)
 <LI><a href="#[aa]">SolarRegulator1::getTopicState()</a> from solarregulator1.o(.text._ZN15SolarRegulator113getTopicStateEv) referenced from solarregulator1.o(.rodata._ZTV15SolarRegulator1)
 <LI><a href="#[a9]">SolarRegulator1::topicReceived(unsigned char*)</a> from solarregulator1.o(.text._ZN15SolarRegulator113topicReceivedEPh) referenced from solarregulator1.o(.rodata._ZTV15SolarRegulator1)
 <LI><a href="#[a7]">SolarRegulator1::setOn()</a> from solarregulator1.o(.text._ZN15SolarRegulator15setOnEv) referenced from solarregulator1.o(.rodata._ZTV15SolarRegulator1)
 <LI><a href="#[a8]">SolarRegulator1::setOff()</a> from solarregulator1.o(.text._ZN15SolarRegulator16setOffEv) referenced from solarregulator1.o(.rodata._ZTV15SolarRegulator1)
 <LI><a href="#[b1]">Fuses::updateState()</a> from fuses.o(.text._ZN5Fuses11updateStateEv) referenced from fuses.o(.rodata._ZTV5Fuses)
 <LI><a href="#[b0]">Fuses::getTopicState()</a> from fuses.o(.text._ZN5Fuses13getTopicStateEv) referenced from fuses.o(.rodata._ZTV5Fuses)
 <LI><a href="#[af]">Fuses::topicReceived(unsigned char*)</a> from fuses.o(.text._ZN5Fuses13topicReceivedEPh) referenced from fuses.o(.rodata._ZTV5Fuses)
 <LI><a href="#[ad]">Fuses::setOn()</a> from fuses.o(.text._ZN5Fuses5setOnEv) referenced from fuses.o(.rodata._ZTV5Fuses)
 <LI><a href="#[ae]">Fuses::setOff()</a> from fuses.o(.text._ZN5Fuses6setOffEv) referenced from fuses.o(.rodata._ZTV5Fuses)
 <LI><a href="#[b7]">Fridge::updateState()</a> from fridge.o(.text._ZN6Fridge11updateStateEv) referenced from fridge.o(.rodata._ZTV6Fridge)
 <LI><a href="#[b6]">Fridge::getTopicState()</a> from fridge.o(.text._ZN6Fridge13getTopicStateEv) referenced from fridge.o(.rodata._ZTV6Fridge)
 <LI><a href="#[b5]">Fridge::topicReceived(unsigned char*)</a> from fridge.o(.text._ZN6Fridge13topicReceivedEPh) referenced from fridge.o(.rodata._ZTV6Fridge)
 <LI><a href="#[b3]">Fridge::setOn()</a> from fridge.o(.text._ZN6Fridge5setOnEv) referenced from fridge.o(.rodata._ZTV6Fridge)
 <LI><a href="#[b4]">Fridge::setOff()</a> from fridge.o(.text._ZN6Fridge6setOffEv) referenced from fridge.o(.rodata._ZTV6Fridge)
 <LI><a href="#[bd]">Ligths1::updateState()</a> from ligths_1.o(.text._ZN7Ligths111updateStateEv) referenced from ligths_1.o(.rodata._ZTV7Ligths1)
 <LI><a href="#[bc]">Ligths1::getTopicState()</a> from ligths_1.o(.text._ZN7Ligths113getTopicStateEv) referenced from ligths_1.o(.rodata._ZTV7Ligths1)
 <LI><a href="#[bb]">Ligths1::topicReceived(unsigned char*)</a> from ligths_1.o(.text._ZN7Ligths113topicReceivedEPh) referenced from ligths_1.o(.rodata._ZTV7Ligths1)
 <LI><a href="#[b9]">Ligths1::setOn()</a> from ligths_1.o(.text._ZN7Ligths15setOnEv) referenced from ligths_1.o(.rodata._ZTV7Ligths1)
 <LI><a href="#[ba]">Ligths1::setOff()</a> from ligths_1.o(.text._ZN7Ligths16setOffEv) referenced from ligths_1.o(.rodata._ZTV7Ligths1)
 <LI><a href="#[c3]">Inverter::updateState()</a> from inverter.o(.text._ZN8Inverter11updateStateEv) referenced from inverter.o(.rodata._ZTV8Inverter)
 <LI><a href="#[c2]">Inverter::getTopicState()</a> from inverter.o(.text._ZN8Inverter13getTopicStateEv) referenced from inverter.o(.rodata._ZTV8Inverter)
 <LI><a href="#[c1]">Inverter::topicReceived(unsigned char*)</a> from inverter.o(.text._ZN8Inverter13topicReceivedEPh) referenced from inverter.o(.rodata._ZTV8Inverter)
 <LI><a href="#[bf]">Inverter::setOn()</a> from inverter.o(.text._ZN8Inverter5setOnEv) referenced from inverter.o(.rodata._ZTV8Inverter)
 <LI><a href="#[c0]">Inverter::setOff()</a> from inverter.o(.text._ZN8Inverter6setOffEv) referenced from inverter.o(.rodata._ZTV8Inverter)
 <LI><a href="#[c9]">WaterPump::updateState()</a> from waterpump.o(.text._ZN9WaterPump11updateStateEv) referenced from waterpump.o(.rodata._ZTV9WaterPump)
 <LI><a href="#[c8]">WaterPump::getTopicState()</a> from waterpump.o(.text._ZN9WaterPump13getTopicStateEv) referenced from waterpump.o(.rodata._ZTV9WaterPump)
 <LI><a href="#[c7]">WaterPump::topicReceived(unsigned char*)</a> from waterpump.o(.text._ZN9WaterPump13topicReceivedEPh) referenced from waterpump.o(.rodata._ZTV9WaterPump)
 <LI><a href="#[c5]">WaterPump::setOn()</a> from waterpump.o(.text._ZN9WaterPump5setOnEv) referenced from waterpump.o(.rodata._ZTV9WaterPump)
 <LI><a href="#[c6]">WaterPump::setOff()</a> from waterpump.o(.text._ZN9WaterPump6setOffEv) referenced from waterpump.o(.rodata._ZTV9WaterPump)
 <LI><a href="#[6c]">std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()</a> from errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEED2B6v16000Ev) referenced 2 times from errormanager.o(.text.__cxx_global_var_init)
 <LI><a href="#[6a]">std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()</a> from arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEED2B6v16000Ev) referenced 2 times from arvi-main.o(.text.__cxx_global_var_init)
 <LI><a href="#[6b]">std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()</a> from canattender.o(.text._ZNSt3__26vectorIPhNS_9allocatorIS1_EEED2B6v16000Ev) referenced 2 times from canattender.o(.text.__cxx_global_var_init)
 <LI><a href="#[a6]">non-virtual thunk to LeisureBattery1::processInfoFrame(unsigned char*)</a> from leisurebattery1.o(.text._ZThn12_N15LeisureBattery116processInfoFrameEPh) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[72]">non-virtual thunk to GrayWater1::updateState()</a> from graywater_1.o(.text._ZThn8_N10GrayWater111updateStateEv) referenced from graywater_1.o(.rodata._ZTV10GrayWater1)
 <LI><a href="#[79]">non-virtual thunk to Multimedia::updateState()</a> from multimedia.o(.text._ZThn8_N10Multimedia11updateStateEv) referenced from multimedia.o(.rodata._ZTV10Multimedia)
 <LI><a href="#[7f]">non-virtual thunk to FreshWater1::updateState()</a> from freshwater_1.o(.text._ZThn8_N11FreshWater111updateStateEv) referenced from freshwater_1.o(.rodata._ZTV11FreshWater1)
 <LI><a href="#[85]">non-virtual thunk to FloorHeating::updateState()</a> from floorheating.o(.text._ZThn8_N12FloorHeating11updateStateEv) referenced from floorheating.o(.rodata._ZTV12FloorHeating)
 <LI><a href="#[8b]">non-virtual thunk to EmptyingValve::updateState()</a> from emptyingvalve.o(.text._ZThn8_N13EmptyingValve11updateStateEv) referenced from emptyingvalve.o(.rodata._ZTV13EmptyingValve)
 <LI><a href="#[92]">non-virtual thunk to EngineBattery1::updateState()</a> from enginebattery1.o(.text._ZThn8_N14EngineBattery111updateStateEv) referenced from enginebattery1.o(.rodata._ZTV14EngineBattery1)
 <LI><a href="#[98]">non-virtual thunk to ExternalLigths::updateState()</a> from externalligths.o(.text._ZThn8_N14ExternalLigths11updateStateEv) referenced from externalligths.o(.rodata._ZTV14ExternalLigths)
 <LI><a href="#[9e]">non-virtual thunk to InternalLigths::updateState()</a> from internalligths.o(.text._ZThn8_N14InternalLigths11updateStateEv) referenced from internalligths.o(.rodata._ZTV14InternalLigths)
 <LI><a href="#[a5]">non-virtual thunk to LeisureBattery1::updateState()</a> from leisurebattery1.o(.text._ZThn8_N15LeisureBattery111updateStateEv) referenced from leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
 <LI><a href="#[ac]">non-virtual thunk to SolarRegulator1::updateState()</a> from solarregulator1.o(.text._ZThn8_N15SolarRegulator111updateStateEv) referenced from solarregulator1.o(.rodata._ZTV15SolarRegulator1)
 <LI><a href="#[b2]">non-virtual thunk to Fuses::updateState()</a> from fuses.o(.text._ZThn8_N5Fuses11updateStateEv) referenced from fuses.o(.rodata._ZTV5Fuses)
 <LI><a href="#[b8]">non-virtual thunk to Fridge::updateState()</a> from fridge.o(.text._ZThn8_N6Fridge11updateStateEv) referenced from fridge.o(.rodata._ZTV6Fridge)
 <LI><a href="#[be]">non-virtual thunk to Ligths1::updateState()</a> from ligths_1.o(.text._ZThn8_N7Ligths111updateStateEv) referenced from ligths_1.o(.rodata._ZTV7Ligths1)
 <LI><a href="#[c4]">non-virtual thunk to Inverter::updateState()</a> from inverter.o(.text._ZThn8_N8Inverter11updateStateEv) referenced from inverter.o(.rodata._ZTV8Inverter)
 <LI><a href="#[ca]">non-virtual thunk to WaterPump::updateState()</a> from waterpump.o(.text._ZThn8_N9WaterPump11updateStateEv) referenced from waterpump.o(.rodata._ZTV9WaterPump)
 <LI><a href="#[8c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from airconditioner1.o(.rodata._ZTV13SystemDevices)
 <LI><a href="#[8c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from devices.o(.rodata._ZTV7Devices)
 <LI><a href="#[5e]">__main</a> from __main.o(!!!main) referenced from startup_stm32g491xx.o(.text)
 <LI><a href="#[61]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[60]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[5f]">_sputc</a> from _sputc.o(.text) referenced from vsprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[d1]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[430]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[431]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[d2]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[432]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[d3]"></a>_printf_n</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[129]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[d5]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[d7]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[d9]"></a>_printf_e</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[da]"></a>_printf_g</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[db]"></a>_printf_a</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_a &rArr; _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[433]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[dd]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[df]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[e0]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[e1]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[e3]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[e5]"></a>_printf_lli</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[e7]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[e8]"></a>_printf_llu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[e9]"></a>_printf_llo</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[eb]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[434]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[ed]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[ef]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[f1]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[f3]"></a>_printf_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[435]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[104]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[f5]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[f7]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000007))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[436]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[437]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[438]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[439]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[43a]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[43b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[43c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[43d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000018))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[43e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[43f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[440]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[441]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[442]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[443]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[444]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[445]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[446]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[447]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[448]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[449]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[44a]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[109]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[ff]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[44b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[44c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[44d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[44e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[44f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[450]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[451]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[d0]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[452]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[101]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[103]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[453]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[105]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1044 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Arvi_Setup &rArr; initTopics() &rArr; LeisureBattery1::LeisureBattery1(short) &rArr; LinClients::setIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[454]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[142]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[108]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[455]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[10a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>COMP4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>CORDIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMAMUX_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>FMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_TAMP_LSECSS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM20_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM20_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM20_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM20_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UCPD1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g491xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[141]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32g491xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1df]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[456]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[10c]"></a>vsprintf</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, vsprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_printf
</UL>

<P><STRONG><a name="[151]"></a>abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet
</UL>

<P><STRONG><a name="[10e]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v16000]()
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v16000](char const*)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>

<P><STRONG><a name="[110]"></a>__cxa_atexit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[2a7]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*)
</UL>

<P><STRONG><a name="[112]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
</UL>

<P><STRONG><a name="[457]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**)
</UL>

<P><STRONG><a name="[458]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[114]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[459]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC1_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[45a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[45b]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[45c]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[45d]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[45e]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[45f]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[10b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[117]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[11a]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, std::align_val_t)
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[11b]"></a>posix_memalign</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, h1_memalign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[11d]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[11e]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[11f]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[120]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[11c]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[de]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[d4]"></a>_printf_charcount</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[10d]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[5f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vsprintf.o(.text)
</UL>
<P><STRONG><a name="[123]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[e6]"></a>_printf_longlong_dec</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[126]"></a>_printf_longlong_oct</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[e2]"></a>_printf_int_oct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[ea]"></a>_printf_ll_oct</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[127]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[e4]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[ec]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[d6]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[122]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>

<P><STRONG><a name="[10f]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[113]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[12d]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[460]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL>

<P><STRONG><a name="[461]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[462]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[463]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[464]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[465]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[466]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[467]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[468]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[469]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[46a]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[12f]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[f8]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[131]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[46b]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[121]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[137]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[13a]"></a>_printf_fp_hex_real</STRONG> (Thumb, 756 bytes, Stack size 72 bytes, _printf_fp_hex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex
</UL>

<P><STRONG><a name="[13b]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[ee]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[f0]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[13c]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[f2]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[f4]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[13d]"></a>_c16rtomb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, _c16rtomb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[124]"></a>_wcrtomb</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, _c16rtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[100]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[12c]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[12b]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[46c]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[46d]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[13e]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_c16rtomb
</UL>

<P><STRONG><a name="[fa]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[12e]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[46e]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[133]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[107]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[13f]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[130]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[143]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[144]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[41e]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7em.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[62]"></a>ADC_DMAConvCplt</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.ADC_DMAConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_DMAConvCplt &rArr; HAL_ADC_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ErrorCallback
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvCpltCallback
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsTriggerSourceSWStart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32g4xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[64]"></a>ADC_DMAError</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.ADC_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_DMAError &rArr; HAL_ADC_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32g4xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[63]"></a>ADC_DMAHalfConvCplt</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.ADC_DMAHalfConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_DMAHalfConvCplt &rArr; HAL_ADC_ConvHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32g4xx_hal_adc.o(.text.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[149]"></a>ADC_Enable</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, stm32g4xx_hal_adc.o(.text.ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ADC_Enable &rArr; LL_ADC_GetCommonPathInternalCh
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_GetCommonPathInternalCh
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_Enable
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[14e]"></a>ArviGet</STRONG> (Thumb, 1704 bytes, Stack size 16 bytes, digital.o(.text.ArviGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ArviGet &rArr; Read_IO_Expander &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_IO_Expander
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::updateState()
</UL>

<P><STRONG><a name="[1f6]"></a>ArviGet_AD</STRONG> (Thumb, 596 bytes, Stack size 8 bytes, analog.o(.text.ArviGet_AD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ArviGet_AD
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkVariant()
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::updateState()
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalRead(IOParameters const&)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::updateState()
</UL>

<P><STRONG><a name="[152]"></a>ArviGet_mA</STRONG> (Thumb, 612 bytes, Stack size 24 bytes, analog.o(.text.ArviGet_mA))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ArviGet_mA &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolarRegulator1::updateState()
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
</UL>

<P><STRONG><a name="[156]"></a>ArviGet_mV</STRONG> (Thumb, 480 bytes, Stack size 24 bytes, analog.o(.text.ArviGet_mV))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ArviGet_mV &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineBattery1::updateState()
</UL>

<P><STRONG><a name="[157]"></a>ArviSet</STRONG> (Thumb, 1136 bytes, Stack size 16 bytes, digital.o(.text.ArviSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IO_Expander
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_IO_Expander
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::LinMaster()
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::Lin()
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>

<P><STRONG><a name="[15a]"></a>Arvi_Main</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, arvi-main.o(.text.Arvi_Main))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = Arvi_Main &rArr; Lin::updateInfoFrames() &rArr; CommunicationManager::getTopicState(unsigned char) &rArr; bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::updateInfoFrames()
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devicesState()
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkVariant()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15f]"></a>Arvi_Setup</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, arvi-main.o(.text.Arvi_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 1028 + Unknown Stack Size
<LI>Call Chain = Arvi_Setup &rArr; initTopics() &rArr; LeisureBattery1::LeisureBattery1(short) &rArr; LinClients::setIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkVariant()
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCommunications()
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[162]"></a>Arvi_printf</STRONG> (Thumb, 78 bytes, Stack size 544 bytes, comm.o(.text.Arvi_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = Arvi_printf &rArr; vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxChar_UD
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[164]"></a>Bios_Init</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, main.o(.text.Bios_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = Bios_Init &rArr; Arvi_printf &rArr; vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FDCAN1_Init
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC1_Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Extender_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_printf
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32g4xx_it.o(.text.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Channel1_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32g4xx_it.o(.text.DMA1_Channel2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA1_Channel2_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[18b]"></a>Error_Handler</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, init.o(.text.Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FDCAN1_Init
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC1_Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Extender_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IO_Expander
</UL>

<P><STRONG><a name="[15c]"></a>GetMilliSec</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text.GetMilliSec))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Main
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolarRegulator1::updateState()
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::topicReceived(unsigned char*)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::updateState()
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::updateState()
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::topicReceived(unsigned char*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::updateState()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineBattery1::updateState()
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::topicReceived(unsigned char*)
</UL>

<P><STRONG><a name="[175]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 2252 bytes, Stack size 280 bytes, stm32g4xx_hal_adc.o(.text.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = HAL_ADC_ConfigChannel &rArr; LL_ADC_SetOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetCommonPathInternalCh
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetChannelSingleDiff
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetOffsetState
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_GetOffsetChannel
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetOffsetSaturation
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetOffsetSign
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetOffset
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetSamplingTimeCommonConfig
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetChannelSamplingTime
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_SetSequencerRanks
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_GetCommonPathInternalCh
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[146]"></a>HAL_ADC_ConvCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.HAL_ADC_ConvCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_ADC_ConvCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[148]"></a>HAL_ADC_ConvHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.HAL_ADC_ConvHalfCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_ADC_ConvHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAHalfConvCplt
</UL>

<P><STRONG><a name="[147]"></a>HAL_ADC_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.HAL_ADC_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_ADC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAError
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[182]"></a>HAL_ADC_Init</STRONG> (Thumb, 950 bytes, Stack size 56 bytes, stm32g4xx_hal_adc.o(.text.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_INJ_IsConversionOngoing
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetCommonClock
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_EnableInternalRegulator
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsInternalRegulatorEnabled
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_DisableDeepPowerDown
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsDeepPowerDownEnabled
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC2_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[183]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 632 bytes, Stack size 160 bytes, stm32g4xx_hal_msp.o(.text.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[173]"></a>HAL_ADC_Start_DMA</STRONG> (Thumb, 486 bytes, Stack size 40 bytes, stm32g4xx_hal_adc.o(.text.HAL_ADC_Start_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_ADC_Start_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_StartConversion
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_GetMultimode
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_REG_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[191]"></a>HAL_DAC_ConfigChannel</STRONG> (Thumb, 906 bytes, Stack size 48 bytes, stm32g4xx_hal_dac.o(.text.HAL_DAC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_DAC_ConfigChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC1_Init
</UL>

<P><STRONG><a name="[193]"></a>HAL_DAC_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32g4xx_hal_dac.o(.text.HAL_DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_DAC_Init &rArr; HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DAC1_Init
</UL>

<P><STRONG><a name="[194]"></a>HAL_DAC_MspInit</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32g4xx_hal_msp.o(.text.HAL_DAC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Init
</UL>

<P><STRONG><a name="[1c4]"></a>HAL_DMA_Abort</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, stm32g4xx_hal_dma.o(.text.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1c2]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, stm32g4xx_hal_dma.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[174]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, stm32g4xx_hal_dma.o(.text.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[18d]"></a>HAL_DMA_Init</STRONG> (Thumb, 342 bytes, Stack size 24 bytes, stm32g4xx_hal_dma.o(.text.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CalcDMAMUXChannelBaseAndMask
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXRequestGenBaseAndMask
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXChannelBaseAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[18f]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, stm32g4xx_hal_dma.o(.text.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[198]"></a>HAL_FDCAN_Init</STRONG> (Thumb, 716 bytes, Stack size 24 bytes, stm32g4xx_hal_fdcan.o(.text.HAL_FDCAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = HAL_FDCAN_Init &rArr; HAL_FDCAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FDCAN_CalcultateRamBlockAddresses
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FDCAN1_Init
</UL>

<P><STRONG><a name="[199]"></a>HAL_FDCAN_MspInit</STRONG> (Thumb, 168 bytes, Stack size 120 bytes, stm32g4xx_hal_msp.o(.text.HAL_FDCAN_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = HAL_FDCAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
</UL>

<P><STRONG><a name="[18c]"></a>HAL_GPIO_Init</STRONG> (Thumb, 872 bytes, Stack size 44 bytes, stm32g4xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_MspInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[14f]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32g4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet
</UL>

<P><STRONG><a name="[158]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32g4xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviSet
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Ctrl_Mux
</UL>

<P><STRONG><a name="[14d]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32g4xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[1d4]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, stm32g4xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_I2CEx_ConfigAnalogFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[1d5]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, stm32g4xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2CEx_ConfigDigitalFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[19b]"></a>HAL_I2C_Init</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, stm32g4xx_hal_i2c.o(.text.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C3_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C2_Init
</UL>

<P><STRONG><a name="[19d]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 650 bytes, Stack size 40 bytes, stm32g4xx_hal_i2c.o(.text.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_IO_Expander
</UL>

<P><STRONG><a name="[1a2]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 628 bytes, Stack size 40 bytes, stm32g4xx_hal_i2c.o(.text.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Extender_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IO_Expander
</UL>

<P><STRONG><a name="[19c]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 378 bytes, Stack size 152 bytes, stm32g4xx_hal_msp.o(.text.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[1da]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32g4xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[165]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32g4xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[1a6]"></a>HAL_InitTick</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, stm32g4xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[1aa]"></a>HAL_LIN_Init</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, stm32g4xx_hal_uart.o(.text.HAL_LIN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = HAL_LIN_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[22e]"></a>HAL_LIN_SendBreak</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32g4xx_hal_uart.o(.text.HAL_LIN_SendBreak))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LIN_SendBreak
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::sendInfoFrame(unsigned char)
</UL>

<P><STRONG><a name="[1a7]"></a>HAL_MspInit</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32g4xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableUCPDDeadBattery
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1b0]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32g4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_NVIC_EnableIRQ &rArr; __NVIC_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
</UL>

<P><STRONG><a name="[1a9]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, stm32g4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
</UL>

<P><STRONG><a name="[1a5]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32g4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_NVIC_SetPriorityGrouping &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1db]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 436 bytes, Stack size 20 bytes, stm32g4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_PWREx_ControlVoltageScaling
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1af]"></a>HAL_PWREx_DisableUCPDDeadBattery</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32g4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUCPDDeadBattery))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[18a]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 1280 bytes, Stack size 32 bytes, stm32g4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_MspInit
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[1b6]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 806 bytes, Stack size 32 bytes, stm32g4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreqFromPLLSource
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[192]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32g4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[1b9]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32g4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[1ba]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32g4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[1b8]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, stm32g4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[1bb]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1974 bytes, Stack size 48 bytes, stm32g4xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1a8]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32g4xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[1d6]"></a>HAL_UARTEx_DisableFifoMode</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, stm32g4xx_hal_uart_ex.o(.text.HAL_UARTEx_DisableFifoMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_UARTEx_DisableFifoMode
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[1c5]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32g4xx_hal_uart.o(.text.HAL_UARTEx_RxEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_UARTEx_RxEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
</UL>

<P><STRONG><a name="[1c9]"></a>HAL_UARTEx_RxFifoFullCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_uart_ex.o(.text.HAL_UARTEx_RxFifoFullCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UARTEx_RxFifoFullCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1bd]"></a>HAL_UARTEx_SetRxFifoThreshold</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, stm32g4xx_hal_uart_ex.o(.text.HAL_UARTEx_SetRxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UARTEx_SetRxFifoThreshold &rArr; UARTEx_SetNbDataToProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[1bf]"></a>HAL_UARTEx_SetTxFifoThreshold</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, stm32g4xx_hal_uart_ex.o(.text.HAL_UARTEx_SetTxFifoThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UARTEx_SetTxFifoThreshold &rArr; UARTEx_SetNbDataToProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART3_UART_Init
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[1c8]"></a>HAL_UARTEx_TxFifoEmptyCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_uart_ex.o(.text.HAL_UARTEx_TxFifoEmptyCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UARTEx_TxFifoEmptyCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1c6]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_uart_ex.o(.text.HAL_UARTEx_WakeupCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UARTEx_WakeupCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1c3]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_uart.o(.text.HAL_UART_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
</UL>

<P><STRONG><a name="[1c0]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 1374 bytes, Stack size 72 bytes, stm32g4xx_hal_uart.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxFifoFullCallback
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_TxFifoEmptyCallback
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1ca]"></a>HAL_UART_Init</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, stm32g4xx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[1ab]"></a>HAL_UART_MspInit</STRONG> (Thumb, 478 bytes, Stack size 152 bytes, stm32g4xx_hal_msp.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
</UL>

<P><STRONG><a name="[1cb]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, stm32g4xx_hal_uart.o(.text.HAL_UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Receive_IT &rArr; UART_Start_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::LinMaster()
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::Lin()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[1cd]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, linmaster.o(.text.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 788 + Unknown Stack Size
<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; Lin::composeMsgLin(unsigned char) &rArr; Lin::verifyInfoFrame(unsigned char) &rArr; Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::composeMsgLin(unsigned char)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::composeMsgLin(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
</UL>

<P><STRONG><a name="[1d0]"></a>HAL_UART_Transmit</STRONG> (Thumb, 312 bytes, Stack size 48 bytes, stm32g4xx_hal_uart.o(.text.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx_UART3
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx_UART1
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxChar_UD
</UL>

<P><STRONG><a name="[1de]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g4xx_hal_uart.o(.text.HAL_UART_TxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[172]"></a>IO_Extender_Init</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, init.o(.text.IO_Extender_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = IO_Extender_Init &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IO_Expander
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[16d]"></a>MX_ADC1_Init</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, init.o(.text.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_ConfigChannel &rArr; LL_ADC_SetOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[16e]"></a>MX_ADC2_Init</STRONG> (Thumb, 466 bytes, Stack size 48 bytes, init.o(.text.MX_ADC2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = MX_ADC2_Init &rArr; HAL_ADC_ConfigChannel &rArr; LL_ADC_SetOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[171]"></a>MX_DAC1_Init</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, init.o(.text.MX_DAC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = MX_DAC1_Init &rArr; HAL_DAC_Init &rArr; HAL_DAC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_ConfigChannel
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DAC_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[168]"></a>MX_DMA_Init</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, init.o(.text.MX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_DMA_Init &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[169]"></a>MX_FDCAN1_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, init.o(.text.MX_FDCAN1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = MX_FDCAN1_Init &rArr; HAL_FDCAN_Init &rArr; HAL_FDCAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[167]"></a>MX_GPIO_Init</STRONG> (Thumb, 376 bytes, Stack size 96 bytes, init.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[16f]"></a>MX_I2C2_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, init.o(.text.MX_I2C2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = MX_I2C2_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[170]"></a>MX_I2C3_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, init.o(.text.MX_I2C3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = MX_I2C3_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[16a]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, init.o(.text.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_LIN_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_DisableFifoMode
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[16b]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, init.o(.text.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_DisableFifoMode
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[16c]"></a>MX_USART3_UART_Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, init.o(.text.MX_USART3_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = MX_USART3_UART_Init &rArr; HAL_LIN_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_DisableFifoMode
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[150]"></a>Read_IO_Expander</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, comm.o(.text.Read_IO_Expander))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Read_IO_Expander &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviSet
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[1d7]"></a>ScanMultiplexores</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, analog.o(.text.ScanMultiplexores))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ScanMultiplexores &rArr; Set_Ctrl_Mux &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Ctrl_Mux
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scan_AD_Mux
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d8]"></a>Scan_AD_Mux</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, analog.o(.text.Scan_AD_Mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Scan_AD_Mux
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanMultiplexores
</UL>

<P><STRONG><a name="[1d9]"></a>Set_Ctrl_Mux</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, analog.o(.text.Set_Ctrl_Mux))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Set_Ctrl_Mux &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanMultiplexores
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32g4xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[166]"></a>SystemClock_Config</STRONG> (Thumb, 116 bytes, Stack size 88 bytes, init.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
</UL>

<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_stm32g4xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(.text)
</UL>
<P><STRONG><a name="[163]"></a>TxChar_UD</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, comm.o(.text.TxChar_UD))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TxChar_UD &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_printf
</UL>

<P><STRONG><a name="[1dc]"></a>Tx_UART1</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, comm.o(.text.Tx_UART1))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Tx_UART1 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::sendFrame(unsigned char*, short)
</UL>

<P><STRONG><a name="[1dd]"></a>Tx_UART3</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, comm.o(.text.Tx_UART3))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Tx_UART3 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::sendInfoFrame(unsigned char)
</UL>

<P><STRONG><a name="[1ac]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 328 bytes, Stack size 4 bytes, stm32g4xx_hal_uart.o(.text.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
</UL>

<P><STRONG><a name="[1ae]"></a>UART_CheckIdleState</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, stm32g4xx_hal_uart.o(.text.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
</UL>

<P><STRONG><a name="[1ad]"></a>UART_SetConfig</STRONG> (Thumb, 1506 bytes, Stack size 80 bytes, stm32g4xx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
</UL>

<P><STRONG><a name="[1cc]"></a>UART_Start_Receive_IT</STRONG> (Thumb, 546 bytes, Stack size 32 bytes, stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Start_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>

<P><STRONG><a name="[1d1]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, stm32g4xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32g4xx_it.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32g4xx_it.o(.text.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART3_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32g4xx_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g491xx.o(RESET)
</UL>
<P><STRONG><a name="[159]"></a>Write_IO_Expander</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, comm.o(.text.Write_IO_Expander))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Extender_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviSet
</UL>

<P><STRONG><a name="[161]"></a>initTopics()</STRONG> (Thumb, 1272 bytes, Stack size 320 bytes, arvi-main.o(.text._Z10initTopicsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1020 + Unknown Stack Size
<LI>Call Chain = initTopics() &rArr; LeisureBattery1::LeisureBattery1(short) &rArr; LinClients::setIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump::WaterPump(short)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolarRegulator1::SolarRegulator1(short)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::EmptyingValve(short)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fridge::Fridge(short)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FloorHeating::FloorHeating(short)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::addClient(LinClients*)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::LeisureBattery1(short)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multimedia::Multimedia(short)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inverter::Inverter(short)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ligths1::Ligths1(short)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalLigths::ExternalLigths(short)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalLigths::InternalLigths(short)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::GrayWater1(short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::Fuses(short)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::FreshWater1(short)
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::addClients(Devices*)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::push_back[abi:v16000](SystemDevices*&&)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineBattery1::EngineBattery1(short)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Setup
</UL>

<P><STRONG><a name="[15e]"></a>checkVariant()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, arvi-main.o(.text._Z12checkVariantv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = checkVariant() &rArr; ArviGet_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_AD
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Main
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Setup
</UL>

<P><STRONG><a name="[15b]"></a>devicesState()</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, arvi-main.o(.text._Z12devicesStatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = devicesState() &rArr; bool std::__2::operator!=[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;SystemDevices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;SystemDevices**&rang;::operator++[abi:v16000]()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;SystemDevices**&rang;::operator*[abi:v16000]() const
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::end[abi:v16000]()
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::begin[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Main
</UL>

<P><STRONG><a name="[160]"></a>initCommunications()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, arvi-main.o(.text._Z18initCommunicationsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = initCommunications() &rArr; LinMaster::LinMaster() &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::LinMaster()
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::Lin()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Setup
</UL>

<P><STRONG><a name="[71]"></a>GrayWater1::updateState()</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, graywater_1.o(.text._ZN10GrayWater111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GrayWater1::updateState() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_AD
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to GrayWater1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graywater_1.o(.rodata._ZTV10GrayWater1)
</UL>
<P><STRONG><a name="[70]"></a>GrayWater1::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, graywater_1.o(.text._ZN10GrayWater113getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GrayWater1::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graywater_1.o(.rodata._ZTV10GrayWater1)
</UL>
<P><STRONG><a name="[6f]"></a>GrayWater1::topicReceived(unsigned char*)</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, graywater_1.o(.text._ZN10GrayWater113topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GrayWater1::topicReceived(unsigned char*) &rArr; Utils::ioDigitalRead(IOParameters const&) &rArr; ArviGet_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalRead(IOParameters const&)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graywater_1.o(.rodata._ZTV10GrayWater1)
</UL>
<P><STRONG><a name="[6d]"></a>GrayWater1::setOn()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, graywater_1.o(.text._ZN10GrayWater15setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = GrayWater1::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graywater_1.o(.rodata._ZTV10GrayWater1)
</UL>
<P><STRONG><a name="[6e]"></a>GrayWater1::setOff()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, graywater_1.o(.text._ZN10GrayWater16setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = GrayWater1::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graywater_1.o(.rodata._ZTV10GrayWater1)
</UL>
<P><STRONG><a name="[1e9]"></a>GrayWater1::GrayWater1(short)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, graywater_1.o(.text._ZN10GrayWater1C2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GrayWater1::GrayWater1(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[46f]"></a>GrayWater1::GrayWater1__sub_object(short)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, graywater_1.o(.text._ZN10GrayWater1C2Es), UNUSED)

<P><STRONG><a name="[204]"></a>LinClients::verifyIdInfo(unsigned char)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, linclients.o(.text._ZN10LinClients12verifyIdInfoEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LinClients::verifyIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::operator[][abi:v16000](unsigned int)
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::processInfoFrame(unsigned char*)
</UL>

<P><STRONG><a name="[73]"></a>LinClients::processInfoFrame(unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, linclients.o(.text._ZN10LinClients16processInfoFrameEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LinClients::processInfoFrame(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> linclients.o(.rodata._ZTV10LinClients)
</UL>
<P><STRONG><a name="[207]"></a>LinClients::setIdInfo(unsigned char)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, linclients.o(.text._ZN10LinClients9setIdInfoEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = LinClients::setIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::LeisureBattery1(short)
</UL>

<P><STRONG><a name="[209]"></a>LinClients::LinClients()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, linclients.o(.text._ZN10LinClientsC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char&&)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[211]"></a>LinClients::LinClients__sub_object()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, linclients.o(.text._ZN10LinClientsC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LinClients::LinClients__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::LeisureBattery1(short)
</UL>

<P><STRONG><a name="[78]"></a>Multimedia::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, multimedia.o(.text._ZN10Multimedia11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Multimedia::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Multimedia::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multimedia.o(.rodata._ZTV10Multimedia)
</UL>
<P><STRONG><a name="[77]"></a>Multimedia::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, multimedia.o(.text._ZN10Multimedia13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Multimedia::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multimedia.o(.rodata._ZTV10Multimedia)
</UL>
<P><STRONG><a name="[76]"></a>Multimedia::topicReceived(unsigned char*)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, multimedia.o(.text._ZN10Multimedia13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Multimedia::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multimedia.o(.rodata._ZTV10Multimedia)
</UL>
<P><STRONG><a name="[74]"></a>Multimedia::setOn()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, multimedia.o(.text._ZN10Multimedia5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Multimedia::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multimedia.o(.rodata._ZTV10Multimedia)
</UL>
<P><STRONG><a name="[75]"></a>Multimedia::setOff()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, multimedia.o(.text._ZN10Multimedia6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Multimedia::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multimedia.o(.rodata._ZTV10Multimedia)
</UL>
<P><STRONG><a name="[1ee]"></a>Multimedia::Multimedia(short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, multimedia.o(.text._ZN10MultimediaC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Multimedia::Multimedia(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[470]"></a>Multimedia::Multimedia__sub_object(short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, multimedia.o(.text._ZN10MultimediaC2Es), UNUSED)

<P><STRONG><a name="[7e]"></a>FreshWater1::updateState()</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, freshwater_1.o(.text._ZN11FreshWater111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FreshWater1::updateState() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_AD
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to FreshWater1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freshwater_1.o(.rodata._ZTV11FreshWater1)
</UL>
<P><STRONG><a name="[7d]"></a>FreshWater1::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, freshwater_1.o(.text._ZN11FreshWater113getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FreshWater1::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freshwater_1.o(.rodata._ZTV11FreshWater1)
</UL>
<P><STRONG><a name="[7c]"></a>FreshWater1::topicReceived(unsigned char*)</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, freshwater_1.o(.text._ZN11FreshWater113topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FreshWater1::topicReceived(unsigned char*) &rArr; Utils::ioDigitalRead(IOParameters const&) &rArr; ArviGet_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalRead(IOParameters const&)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freshwater_1.o(.rodata._ZTV11FreshWater1)
</UL>
<P><STRONG><a name="[7a]"></a>FreshWater1::setOn()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, freshwater_1.o(.text._ZN11FreshWater15setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = FreshWater1::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freshwater_1.o(.rodata._ZTV11FreshWater1)
</UL>
<P><STRONG><a name="[7b]"></a>FreshWater1::setOff()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, freshwater_1.o(.text._ZN11FreshWater16setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = FreshWater1::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freshwater_1.o(.rodata._ZTV11FreshWater1)
</UL>
<P><STRONG><a name="[1e7]"></a>FreshWater1::FreshWater1(short)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, freshwater_1.o(.text._ZN11FreshWater1C2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FreshWater1::FreshWater1(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[471]"></a>FreshWater1::FreshWater1__sub_object(short)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, freshwater_1.o(.text._ZN11FreshWater1C2Es), UNUSED)

<P><STRONG><a name="[84]"></a>FloorHeating::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, floorheating.o(.text._ZN12FloorHeating11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FloorHeating::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to FloorHeating::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> floorheating.o(.rodata._ZTV12FloorHeating)
</UL>
<P><STRONG><a name="[83]"></a>FloorHeating::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, floorheating.o(.text._ZN12FloorHeating13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FloorHeating::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> floorheating.o(.rodata._ZTV12FloorHeating)
</UL>
<P><STRONG><a name="[82]"></a>FloorHeating::topicReceived(unsigned char*)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, floorheating.o(.text._ZN12FloorHeating13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FloorHeating::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> floorheating.o(.rodata._ZTV12FloorHeating)
</UL>
<P><STRONG><a name="[80]"></a>FloorHeating::setOn()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, floorheating.o(.text._ZN12FloorHeating5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FloorHeating::setOn()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> floorheating.o(.rodata._ZTV12FloorHeating)
</UL>
<P><STRONG><a name="[81]"></a>FloorHeating::setOff()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, floorheating.o(.text._ZN12FloorHeating6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FloorHeating::setOff()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> floorheating.o(.rodata._ZTV12FloorHeating)
</UL>
<P><STRONG><a name="[1f1]"></a>FloorHeating::FloorHeating(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, floorheating.o(.text._ZN12FloorHeatingC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FloorHeating::FloorHeating(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[472]"></a>FloorHeating::FloorHeating__sub_object(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, floorheating.o(.text._ZN12FloorHeatingC2Es), UNUSED)

<P><STRONG><a name="[8a]"></a>EmptyingValve::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, emptyingvalve.o(.text._ZN13EmptyingValve11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EmptyingValve::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to EmptyingValve::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emptyingvalve.o(.rodata._ZTV13EmptyingValve)
</UL>
<P><STRONG><a name="[89]"></a>EmptyingValve::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, emptyingvalve.o(.text._ZN13EmptyingValve13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EmptyingValve::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emptyingvalve.o(.rodata._ZTV13EmptyingValve)
</UL>
<P><STRONG><a name="[88]"></a>EmptyingValve::topicReceived(unsigned char*)</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, emptyingvalve.o(.text._ZN13EmptyingValve13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = EmptyingValve::topicReceived(unsigned char*) &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emptyingvalve.o(.rodata._ZTV13EmptyingValve)
</UL>
<P><STRONG><a name="[86]"></a>EmptyingValve::setOn()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, emptyingvalve.o(.text._ZN13EmptyingValve5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = EmptyingValve::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emptyingvalve.o(.rodata._ZTV13EmptyingValve)
</UL>
<P><STRONG><a name="[87]"></a>EmptyingValve::setOff()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, emptyingvalve.o(.text._ZN13EmptyingValve6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = EmptyingValve::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emptyingvalve.o(.rodata._ZTV13EmptyingValve)
</UL>
<P><STRONG><a name="[1f3]"></a>EmptyingValve::EmptyingValve(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, emptyingvalve.o(.text._ZN13EmptyingValveC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EmptyingValve::EmptyingValve(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[473]"></a>EmptyingValve::EmptyingValve__sub_object(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, emptyingvalve.o(.text._ZN13EmptyingValveC2Es), UNUSED)

<P><STRONG><a name="[203]"></a>SystemDevices::SystemDevices__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, airconditioner1.o(.text._ZN13SystemDevicesC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SystemDevices::SystemDevices__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump::WaterPump(short)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolarRegulator1::SolarRegulator1(short)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::EmptyingValve(short)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fridge::Fridge(short)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FloorHeating::FloorHeating(short)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::LeisureBattery1(short)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multimedia::Multimedia(short)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inverter::Inverter(short)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ligths1::Ligths1(short)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalLigths::ExternalLigths(short)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalLigths::InternalLigths(short)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::GrayWater1(short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::Fuses(short)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::FreshWater1(short)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineBattery1::EngineBattery1(short)
</UL>

<P><STRONG><a name="[91]"></a>EngineBattery1::updateState()</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, enginebattery1.o(.text._ZN14EngineBattery111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = EngineBattery1::updateState() &rArr; ArviGet_mV &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mV
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to EngineBattery1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> enginebattery1.o(.rodata._ZTV14EngineBattery1)
</UL>
<P><STRONG><a name="[90]"></a>EngineBattery1::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, enginebattery1.o(.text._ZN14EngineBattery113getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EngineBattery1::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> enginebattery1.o(.rodata._ZTV14EngineBattery1)
</UL>
<P><STRONG><a name="[8f]"></a>EngineBattery1::topicReceived(unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, enginebattery1.o(.text._ZN14EngineBattery113topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EngineBattery1::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> enginebattery1.o(.rodata._ZTV14EngineBattery1)
</UL>
<P><STRONG><a name="[8d]"></a>EngineBattery1::setOn()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, enginebattery1.o(.text._ZN14EngineBattery15setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EngineBattery1::setOn()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> enginebattery1.o(.rodata._ZTV14EngineBattery1)
</UL>
<P><STRONG><a name="[8e]"></a>EngineBattery1::setOff()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, enginebattery1.o(.text._ZN14EngineBattery16setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EngineBattery1::setOff()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> enginebattery1.o(.rodata._ZTV14EngineBattery1)
</UL>
<P><STRONG><a name="[1e4]"></a>EngineBattery1::EngineBattery1(short)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, enginebattery1.o(.text._ZN14EngineBattery1C2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EngineBattery1::EngineBattery1(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[474]"></a>EngineBattery1::EngineBattery1__sub_object(short)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, enginebattery1.o(.text._ZN14EngineBattery1C2Es), UNUSED)

<P><STRONG><a name="[97]"></a>ExternalLigths::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, externalligths.o(.text._ZN14ExternalLigths11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ExternalLigths::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to ExternalLigths::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> externalligths.o(.rodata._ZTV14ExternalLigths)
</UL>
<P><STRONG><a name="[96]"></a>ExternalLigths::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, externalligths.o(.text._ZN14ExternalLigths13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ExternalLigths::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> externalligths.o(.rodata._ZTV14ExternalLigths)
</UL>
<P><STRONG><a name="[95]"></a>ExternalLigths::topicReceived(unsigned char*)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, externalligths.o(.text._ZN14ExternalLigths13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ExternalLigths::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> externalligths.o(.rodata._ZTV14ExternalLigths)
</UL>
<P><STRONG><a name="[93]"></a>ExternalLigths::setOn()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, externalligths.o(.text._ZN14ExternalLigths5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = ExternalLigths::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> externalligths.o(.rodata._ZTV14ExternalLigths)
</UL>
<P><STRONG><a name="[94]"></a>ExternalLigths::setOff()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, externalligths.o(.text._ZN14ExternalLigths6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = ExternalLigths::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> externalligths.o(.rodata._ZTV14ExternalLigths)
</UL>
<P><STRONG><a name="[1eb]"></a>ExternalLigths::ExternalLigths(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, externalligths.o(.text._ZN14ExternalLigthsC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ExternalLigths::ExternalLigths(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[475]"></a>ExternalLigths::ExternalLigths__sub_object(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, externalligths.o(.text._ZN14ExternalLigthsC2Es), UNUSED)

<P><STRONG><a name="[9d]"></a>InternalLigths::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, internalligths.o(.text._ZN14InternalLigths11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InternalLigths::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to InternalLigths::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> internalligths.o(.rodata._ZTV14InternalLigths)
</UL>
<P><STRONG><a name="[9c]"></a>InternalLigths::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, internalligths.o(.text._ZN14InternalLigths13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InternalLigths::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> internalligths.o(.rodata._ZTV14InternalLigths)
</UL>
<P><STRONG><a name="[9b]"></a>InternalLigths::topicReceived(unsigned char*)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, internalligths.o(.text._ZN14InternalLigths13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InternalLigths::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> internalligths.o(.rodata._ZTV14InternalLigths)
</UL>
<P><STRONG><a name="[99]"></a>InternalLigths::setOn()</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, internalligths.o(.text._ZN14InternalLigths5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = InternalLigths::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> internalligths.o(.rodata._ZTV14InternalLigths)
</UL>
<P><STRONG><a name="[9a]"></a>InternalLigths::setOff()</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, internalligths.o(.text._ZN14InternalLigths6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = InternalLigths::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> internalligths.o(.rodata._ZTV14InternalLigths)
</UL>
<P><STRONG><a name="[1ea]"></a>InternalLigths::InternalLigths(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, internalligths.o(.text._ZN14InternalLigthsC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InternalLigths::InternalLigths(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[476]"></a>InternalLigths::InternalLigths__sub_object(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, internalligths.o(.text._ZN14InternalLigthsC2Es), UNUSED)

<P><STRONG><a name="[a3]"></a>LeisureBattery1::updateState()</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, leisurebattery1.o(.text._ZN15LeisureBattery111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 708 + Unknown Stack Size
<LI>Call Chain = LeisureBattery1::updateState() &rArr; Errors::addError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mA
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mV
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::sendInfoFrame(unsigned char)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::idCalc(unsigned char)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::errorExists(short, short)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::addError(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to LeisureBattery1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[a2]"></a>LeisureBattery1::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, leisurebattery1.o(.text._ZN15LeisureBattery113getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LeisureBattery1::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[a1]"></a>LeisureBattery1::topicReceived(unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, leisurebattery1.o(.text._ZN15LeisureBattery113topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeisureBattery1::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[a4]"></a>LeisureBattery1::processInfoFrame(unsigned char*)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, leisurebattery1.o(.text._ZN15LeisureBattery116processInfoFrameEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = LeisureBattery1::processInfoFrame(unsigned char*) &rArr; Errors::addError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::errorExists(short, short)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::addError(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to LeisureBattery1::processInfoFrame(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[9f]"></a>LeisureBattery1::setOn()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, leisurebattery1.o(.text._ZN15LeisureBattery15setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LeisureBattery1::setOn()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[a0]"></a>LeisureBattery1::setOff()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, leisurebattery1.o(.text._ZN15LeisureBattery16setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LeisureBattery1::setOff()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[1ef]"></a>LeisureBattery1::LeisureBattery1(short)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, leisurebattery1.o(.text._ZN15LeisureBattery1C2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = LeisureBattery1::LeisureBattery1(short) &rArr; LinClients::setIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::setIdInfo(unsigned char)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::LinClients__sub_object()
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::idCalc(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[477]"></a>LeisureBattery1::LeisureBattery1__sub_object(short)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, leisurebattery1.o(.text._ZN15LeisureBattery1C2Es), UNUSED)

<P><STRONG><a name="[ab]"></a>SolarRegulator1::updateState()</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, solarregulator1.o(.text._ZN15SolarRegulator111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SolarRegulator1::updateState() &rArr; ArviGet_mA &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mA
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to SolarRegulator1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solarregulator1.o(.rodata._ZTV15SolarRegulator1)
</UL>
<P><STRONG><a name="[aa]"></a>SolarRegulator1::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, solarregulator1.o(.text._ZN15SolarRegulator113getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SolarRegulator1::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solarregulator1.o(.rodata._ZTV15SolarRegulator1)
</UL>
<P><STRONG><a name="[a9]"></a>SolarRegulator1::topicReceived(unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, solarregulator1.o(.text._ZN15SolarRegulator113topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SolarRegulator1::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solarregulator1.o(.rodata._ZTV15SolarRegulator1)
</UL>
<P><STRONG><a name="[a7]"></a>SolarRegulator1::setOn()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, solarregulator1.o(.text._ZN15SolarRegulator15setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SolarRegulator1::setOn()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solarregulator1.o(.rodata._ZTV15SolarRegulator1)
</UL>
<P><STRONG><a name="[a8]"></a>SolarRegulator1::setOff()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, solarregulator1.o(.text._ZN15SolarRegulator16setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SolarRegulator1::setOff()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solarregulator1.o(.rodata._ZTV15SolarRegulator1)
</UL>
<P><STRONG><a name="[1f4]"></a>SolarRegulator1::SolarRegulator1(short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, solarregulator1.o(.text._ZN15SolarRegulator1C2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SolarRegulator1::SolarRegulator1(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[478]"></a>SolarRegulator1::SolarRegulator1__sub_object(short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, solarregulator1.o(.text._ZN15SolarRegulator1C2Es), UNUSED)

<P><STRONG><a name="[1e6]"></a>CommunicationManager::addClients(Devices*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZN20CommunicationManager10addClientsEP7Devices))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = CommunicationManager::addClients(Devices*) &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::push_back[abi:v16000](Devices* const&) &rArr; void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&) &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::push_back[abi:v16000](Devices* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[213]"></a>CommunicationManager::processTopic(unsigned char*)</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, comunicationmanager.o(.text._ZN20CommunicationManager12processTopicEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CommunicationManager::processTopic(unsigned char*) &rArr; bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;Devices**&rang;::operator++[abi:v16000]()
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::getIdTopic()
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;Devices**&rang;::operator*[abi:v16000]() const
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::end[abi:v16000]()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::begin[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::traslate2Topic(unsigned char*)
</UL>

<P><STRONG><a name="[21a]"></a>CommunicationManager::getTopicState(unsigned char)</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, comunicationmanager.o(.text._ZN20CommunicationManager13getTopicStateEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CommunicationManager::getTopicState(unsigned char) &rArr; bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;Devices**&rang;::operator++[abi:v16000]()
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::getIdTopic()
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;Devices**&rang;::operator*[abi:v16000]() const
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::end[abi:v16000]()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::begin[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::updateInfoFrames()
</UL>

<P><STRONG><a name="[21b]"></a>CommunicationManager::CommunicationManager()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZN20CommunicationManagerC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[224]"></a>CommunicationManager::CommunicationManager__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZN20CommunicationManagerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CommunicationManager::CommunicationManager__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::Lin()
</UL>

<P><STRONG><a name="[1cf]"></a>Lin::composeMsgLin(unsigned char)</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lin.o(.text._ZN3Lin13composeMsgLinEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = Lin::composeMsgLin(unsigned char) &rArr; Lin::verifyInfoFrame(unsigned char) &rArr; Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::traslate2Topic(unsigned char*)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::verifyInfoFrame(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[21e]"></a>Lin::traslate2Topic(unsigned char*)</STRONG> (Thumb, 884 bytes, Stack size 64 bytes, lin.o(.text._ZN3Lin14traslate2TopicEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Lin::traslate2Topic(unsigned char*) &rArr; CommunicationManager::processTopic(unsigned char*) &rArr; bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getNumErrors()
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::processTopic(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::composeMsgLin(unsigned char)
</UL>

<P><STRONG><a name="[21d]"></a>Lin::verifyInfoFrame(unsigned char)</STRONG> (Thumb, 516 bytes, Stack size 48 bytes, lin.o(.text._ZN3Lin15verifyInfoFrameEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 740 + Unknown Stack Size
<LI>Call Chain = Lin::verifyInfoFrame(unsigned char) &rArr; Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::sendFrame(unsigned char*, short)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::calculateCheckSum(unsigned char*, short, bool)
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getError()
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getNumErrors()
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::composeMsgLin(unsigned char)
</UL>

<P><STRONG><a name="[15d]"></a>Lin::updateInfoFrames()</STRONG> (Thumb, 1384 bytes, Stack size 136 bytes, lin.o(.text._ZN3Lin16updateInfoFramesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Lin::updateInfoFrames() &rArr; CommunicationManager::getTopicState(unsigned char) &rArr; bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::setBits(unsigned short, unsigned short, short)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::calculateCheckSum(unsigned char*, short, bool)
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::getTopicState(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Main
</UL>

<P><STRONG><a name="[221]"></a>Lin::calculateCheckSum(unsigned char*, short, bool)</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, lin.o(.text._ZN3Lin17calculateCheckSumEPhsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Lin::calculateCheckSum(unsigned char*, short, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::updateInfoFrames()
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::verifyInfoFrame(unsigned char)
</UL>

<P><STRONG><a name="[222]"></a>Lin::sendFrame(unsigned char*, short)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lin.o(.text._ZN3Lin9sendFrameEPhs))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Lin::sendFrame(unsigned char*, short) &rArr; Tx_UART1 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx_UART1
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::verifyInfoFrame(unsigned char)
</UL>

<P><STRONG><a name="[1fc]"></a>Lin::Lin()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lin.o(.text._ZN3LinC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Lin::Lin() &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviSet
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::CommunicationManager__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCommunications()
</UL>

<P><STRONG><a name="[479]"></a>Lin::Lin__sub_object()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lin.o(.text._ZN3LinC2Ev), UNUSED)

<P><STRONG><a name="[b1]"></a>Fuses::updateState()</STRONG> (Thumb, 828 bytes, Stack size 40 bytes, fuses.o(.text._ZN5Fuses11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = Fuses::updateState() &rArr; Errors::addError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMilliSec
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::errorExists(short, short)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::addError(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Fuses::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fuses.o(.rodata._ZTV5Fuses)
</UL>
<P><STRONG><a name="[b0]"></a>Fuses::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, fuses.o(.text._ZN5Fuses13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Fuses::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fuses.o(.rodata._ZTV5Fuses)
</UL>
<P><STRONG><a name="[af]"></a>Fuses::topicReceived(unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fuses.o(.text._ZN5Fuses13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Fuses::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fuses.o(.rodata._ZTV5Fuses)
</UL>
<P><STRONG><a name="[ad]"></a>Fuses::setOn()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fuses.o(.text._ZN5Fuses5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Fuses::setOn()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fuses.o(.rodata._ZTV5Fuses)
</UL>
<P><STRONG><a name="[ae]"></a>Fuses::setOff()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fuses.o(.text._ZN5Fuses6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Fuses::setOff()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fuses.o(.rodata._ZTV5Fuses)
</UL>
<P><STRONG><a name="[1e8]"></a>Fuses::Fuses(short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, fuses.o(.text._ZN5FusesC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Fuses::Fuses(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[47a]"></a>Fuses::Fuses__sub_object(short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, fuses.o(.text._ZN5FusesC2Es), UNUSED)

<P><STRONG><a name="[1fe]"></a>Utils::ioDigitalRead(IOParameters const&)</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, utils.o(.text._ZN5Utils13ioDigitalReadERK12IOParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Utils::ioDigitalRead(IOParameters const&) &rArr; ArviGet_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_AD
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::topicReceived(unsigned char*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::topicReceived(unsigned char*)
</UL>

<P><STRONG><a name="[201]"></a>Utils::ioDigitalWrite(IOParameters const&, short)</STRONG> (Thumb, 662 bytes, Stack size 24 bytes, utils.o(.text._ZN5Utils14ioDigitalWriteERK12IOParameterss))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviSet
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump::setOff()
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump::setOn()
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multimedia::setOff()
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multimedia::setOn()
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ligths1::setOff()
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ligths1::setOn()
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inverter::setOff()
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inverter::setOn()
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalLigths::setOff()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalLigths::setOn()
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::setOff()
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::setOn()
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fridge::setOff()
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fridge::setOn()
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::setOff()
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::setOn()
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalLigths::setOff()
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalLigths::setOn()
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::topicReceived(unsigned char*)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::setOff()
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::setOn()
</UL>

<P><STRONG><a name="[223]"></a>Utils::setBits(unsigned short, unsigned short, short)</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, utils.o(.text._ZN5Utils7setBitsEtts))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Utils::setBits(unsigned short, unsigned short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::updateInfoFrames()
</UL>

<P><STRONG><a name="[210]"></a>Errors::cleanError(short, short)</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, errormanager.o(.text._ZN6Errors10cleanErrorEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Errors::cleanError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;) &rArr; errors* std::__2::move[abi:v16000]&lang;errors*, errors*&rang;(errors*, errors*, errors*) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000]&lang;errors*&rang;(std::__2::__wrap_iter&lang;errors*&rang; const&, std::__2::enable_if&lang;is_convertible&lang;errors*, errors const*&rang;::value, void&rang;::type*)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors*&rang;::operator+[abi:v16000](int) const
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]()
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::operator[][abi:v16000](unsigned int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::processInfoFrame(unsigned char*)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::updateState()
</UL>

<P><STRONG><a name="[20f]"></a>Errors::errorExists(short, short)</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, errormanager.o(.text._ZN6Errors11errorExistsEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Errors::errorExists(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::operator[][abi:v16000](unsigned int)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::processInfoFrame(unsigned char*)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::addError(short, short)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::updateState()
</UL>

<P><STRONG><a name="[21f]"></a>Errors::getNumErrors()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, errormanager.o(.text._ZN6Errors12getNumErrorsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Errors::getNumErrors() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::traslate2Topic(unsigned char*)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::verifyInfoFrame(unsigned char)
</UL>

<P><STRONG><a name="[20e]"></a>Errors::addError(short, short)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, errormanager.o(.text._ZN6Errors8addErrorEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = Errors::addError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::errorExists(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::processInfoFrame(unsigned char*)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::updateState()
</UL>

<P><STRONG><a name="[220]"></a>Errors::getError()</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, errormanager.o(.text._ZN6Errors8getErrorEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 692 + Unknown Stack Size
<LI>Call Chain = Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::empty[abi:v16000]() const
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000]&lang;errors*&rang;(std::__2::__wrap_iter&lang;errors*&rang; const&, std::__2::enable_if&lang;is_convertible&lang;errors*, errors const*&rang;::value, void&rang;::type*)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]()
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lin::verifyInfoFrame(unsigned char)
</UL>

<P><STRONG><a name="[b7]"></a>Fridge::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fridge.o(.text._ZN6Fridge11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Fridge::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Fridge::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fridge.o(.rodata._ZTV6Fridge)
</UL>
<P><STRONG><a name="[b6]"></a>Fridge::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, fridge.o(.text._ZN6Fridge13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Fridge::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fridge.o(.rodata._ZTV6Fridge)
</UL>
<P><STRONG><a name="[b5]"></a>Fridge::topicReceived(unsigned char*)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, fridge.o(.text._ZN6Fridge13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Fridge::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fridge.o(.rodata._ZTV6Fridge)
</UL>
<P><STRONG><a name="[b3]"></a>Fridge::setOn()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fridge.o(.text._ZN6Fridge5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Fridge::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fridge.o(.rodata._ZTV6Fridge)
</UL>
<P><STRONG><a name="[b4]"></a>Fridge::setOff()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fridge.o(.text._ZN6Fridge6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Fridge::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fridge.o(.rodata._ZTV6Fridge)
</UL>
<P><STRONG><a name="[1f2]"></a>Fridge::Fridge(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, fridge.o(.text._ZN6FridgeC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Fridge::Fridge(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[47b]"></a>Fridge::Fridge__sub_object(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, fridge.o(.text._ZN6FridgeC2Es), UNUSED)

<P><STRONG><a name="[218]"></a>Devices::getIdTopic()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, devices.o(.text._ZN7Devices10getIdTopicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Devices::getIdTopic()
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::getTopicState(unsigned char)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::processTopic(unsigned char*)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump::topicReceived(unsigned char*)
</UL>

<P><STRONG><a name="[202]"></a>Devices::Devices__sub_object(short)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, devices.o(.text._ZN7DevicesC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump::WaterPump(short)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolarRegulator1::SolarRegulator1(short)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::EmptyingValve(short)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fridge::Fridge(short)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FloorHeating::FloorHeating(short)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::LeisureBattery1(short)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multimedia::Multimedia(short)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inverter::Inverter(short)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ligths1::Ligths1(short)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalLigths::ExternalLigths(short)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalLigths::InternalLigths(short)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::GrayWater1(short)
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::Fuses(short)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::FreshWater1(short)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineBattery1::EngineBattery1(short)
</UL>

<P><STRONG><a name="[bd]"></a>Ligths1::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, ligths_1.o(.text._ZN7Ligths111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Ligths1::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Ligths1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ligths_1.o(.rodata._ZTV7Ligths1)
</UL>
<P><STRONG><a name="[bc]"></a>Ligths1::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, ligths_1.o(.text._ZN7Ligths113getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Ligths1::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ligths_1.o(.rodata._ZTV7Ligths1)
</UL>
<P><STRONG><a name="[bb]"></a>Ligths1::topicReceived(unsigned char*)</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ligths_1.o(.text._ZN7Ligths113topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Ligths1::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ligths_1.o(.rodata._ZTV7Ligths1)
</UL>
<P><STRONG><a name="[b9]"></a>Ligths1::setOn()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ligths_1.o(.text._ZN7Ligths15setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Ligths1::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ligths_1.o(.rodata._ZTV7Ligths1)
</UL>
<P><STRONG><a name="[ba]"></a>Ligths1::setOff()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ligths_1.o(.text._ZN7Ligths16setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Ligths1::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ligths_1.o(.rodata._ZTV7Ligths1)
</UL>
<P><STRONG><a name="[1ec]"></a>Ligths1::Ligths1(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ligths_1.o(.text._ZN7Ligths1C2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Ligths1::Ligths1(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[47c]"></a>Ligths1::Ligths1__sub_object(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ligths_1.o(.text._ZN7Ligths1C2Es), UNUSED)

<P><STRONG><a name="[c3]"></a>Inverter::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, inverter.o(.text._ZN8Inverter11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Inverter::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Inverter::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> inverter.o(.rodata._ZTV8Inverter)
</UL>
<P><STRONG><a name="[c2]"></a>Inverter::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, inverter.o(.text._ZN8Inverter13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Inverter::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> inverter.o(.rodata._ZTV8Inverter)
</UL>
<P><STRONG><a name="[c1]"></a>Inverter::topicReceived(unsigned char*)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, inverter.o(.text._ZN8Inverter13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Inverter::topicReceived(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> inverter.o(.rodata._ZTV8Inverter)
</UL>
<P><STRONG><a name="[bf]"></a>Inverter::setOn()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, inverter.o(.text._ZN8Inverter5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Inverter::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> inverter.o(.rodata._ZTV8Inverter)
</UL>
<P><STRONG><a name="[c0]"></a>Inverter::setOff()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, inverter.o(.text._ZN8Inverter6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = Inverter::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> inverter.o(.rodata._ZTV8Inverter)
</UL>
<P><STRONG><a name="[1ed]"></a>Inverter::Inverter(short)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, inverter.o(.text._ZN8InverterC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Inverter::Inverter(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[47d]"></a>Inverter::Inverter__sub_object(short)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, inverter.o(.text._ZN8InverterC2Es), UNUSED)

<P><STRONG><a name="[1ce]"></a>LinMaster::composeMsgLin(unsigned char)</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, linmaster.o(.text._ZN9LinMaster13composeMsgLinEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LinMaster::composeMsgLin(unsigned char) &rArr; LinMaster::processInfoFrame(unsigned char*) &rArr; LinClients::verifyIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::processInfoFrame(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[20d]"></a>LinMaster::sendInfoFrame(unsigned char)</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, linmaster.o(.text._ZN9LinMaster13sendInfoFrameEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = LinMaster::sendInfoFrame(unsigned char) &rArr; Tx_UART3 &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout &rArr; UART_EndRxTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx_UART3
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_SendBreak
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
</UL>

<P><STRONG><a name="[22d]"></a>LinMaster::processInfoFrame(unsigned char*)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, linmaster.o(.text._ZN9LinMaster16processInfoFrameEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LinMaster::processInfoFrame(unsigned char*) &rArr; LinClients::verifyIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::verifyIdInfo(unsigned char)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::operator[][abi:v16000](unsigned int)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::composeMsgLin(unsigned char)
</UL>

<P><STRONG><a name="[20c]"></a>LinMaster::idCalc(unsigned char)</STRONG> (Thumb, 142 bytes, Stack size 12 bytes, linmaster.o(.text._ZN9LinMaster6idCalcEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LinMaster::idCalc(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::LeisureBattery1(short)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
</UL>

<P><STRONG><a name="[1f0]"></a>LinMaster::addClient(LinClients*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linmaster.o(.text._ZN9LinMaster9addClientEP10LinClients))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = LinMaster::addClient(LinClients*) &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::push_back[abi:v16000](LinClients* const&) &rArr; void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&) &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::push_back[abi:v16000](LinClients* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[1fd]"></a>LinMaster::LinMaster()</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, linmaster.o(.text._ZN9LinMasterC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = LinMaster::LinMaster() &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviSet
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCommunications()
</UL>

<P><STRONG><a name="[47e]"></a>LinMaster::LinMaster__sub_object()</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, linmaster.o(.text._ZN9LinMasterC2Ev), UNUSED)

<P><STRONG><a name="[c9]"></a>WaterPump::updateState()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, waterpump.o(.text._ZN9WaterPump11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WaterPump::updateState()
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to WaterPump::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waterpump.o(.rodata._ZTV9WaterPump)
</UL>
<P><STRONG><a name="[c8]"></a>WaterPump::getTopicState()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, waterpump.o(.text._ZN9WaterPump13getTopicStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WaterPump::getTopicState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waterpump.o(.rodata._ZTV9WaterPump)
</UL>
<P><STRONG><a name="[c7]"></a>WaterPump::topicReceived(unsigned char*)</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, waterpump.o(.text._ZN9WaterPump13topicReceivedEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WaterPump::topicReceived(unsigned char*) &rArr; Devices::getIdTopic()
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::getIdTopic()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waterpump.o(.rodata._ZTV9WaterPump)
</UL>
<P><STRONG><a name="[c5]"></a>WaterPump::setOn()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, waterpump.o(.text._ZN9WaterPump5setOnEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = WaterPump::setOn() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waterpump.o(.rodata._ZTV9WaterPump)
</UL>
<P><STRONG><a name="[c6]"></a>WaterPump::setOff()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, waterpump.o(.text._ZN9WaterPump6setOffEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = WaterPump::setOff() &rArr; Utils::ioDigitalWrite(IOParameters const&, short) &rArr; ArviSet &rArr; Write_IO_Expander &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utils::ioDigitalWrite(IOParameters const&, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waterpump.o(.rodata._ZTV9WaterPump)
</UL>
<P><STRONG><a name="[1f5]"></a>WaterPump::WaterPump(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, waterpump.o(.text._ZN9WaterPumpC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WaterPump::WaterPump(short) &rArr; Devices::Devices__sub_object(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices::SystemDevices__sub_object()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices::Devices__sub_object(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[47f]"></a>WaterPump::WaterPump__sub_object(short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, waterpump.o(.text._ZN9WaterPumpC2Es), UNUSED)

<P><STRONG><a name="[2d0]"></a>std::__2::__wrap_iter&lang;errors*&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__211__wrap_iterIP6errorsE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;errors*&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000]&lang;errors*&rang;(std::__2::__wrap_iter&lang;errors*&rang; const&, std::__2::enable_if&lang;is_convertible&lang;errors*, errors const*&rang;::value, void&rang;::type*)
</UL>

<P><STRONG><a name="[228]"></a>std::__2::__wrap_iter&lang;errors*&rang;::operator+[abi:v16000](int) const</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, errormanager.o(.text._ZNKSt3__211__wrap_iterIP6errorsEplB6v16000Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__wrap_iter&lang;errors*&rang;::operator+[abi:v16000](int) const &rArr; std::__2::__wrap_iter&lang;errors*&rang;::operator+=[abi:v16000](int)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors*&rang;::operator+=[abi:v16000](int)
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
</UL>

<P><STRONG><a name="[414]"></a>std::__2::__wrap_iter&lang;errors const*&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__211__wrap_iterIPK6errorsE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;errors const*&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(fp.base() - fp0.base()) std::__2::operator-[abi:v16000]&lang;errors const*, errors const*&rang;(std::__2::__wrap_iter&lang;errors const*&rang; const&, std::__2::__wrap_iter&lang;errors const*&rang; const&)
</UL>

<P><STRONG><a name="[411]"></a>std::__2::__wrap_iter&lang;SystemDevices**&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNKSt3__211__wrap_iterIPP13SystemDevicesE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;SystemDevices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator==[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&)
</UL>

<P><STRONG><a name="[1fa]"></a>std::__2::__wrap_iter&lang;SystemDevices**&rang;::operator*[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNKSt3__211__wrap_iterIPP13SystemDevicesEdeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;SystemDevices**&rang;::operator*[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devicesState()
</UL>

<P><STRONG><a name="[413]"></a>std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNKSt3__211__wrap_iterIPP7DevicesE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&)
</UL>

<P><STRONG><a name="[217]"></a>std::__2::__wrap_iter&lang;Devices**&rang;::operator*[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNKSt3__211__wrap_iterIPP7DevicesEdeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;Devices**&rang;::operator*[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::getTopicState(unsigned char)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::processTopic(unsigned char*)
</UL>

<P><STRONG><a name="[234]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::capacity[abi:v16000]() const &rArr; std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[235]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[237]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::capacity[abi:v16000]() const &rArr; std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[238]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[23a]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::capacity[abi:v16000]() const &rArr; std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[23b]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[23d]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::capacity[abi:v16000]() const &rArr; std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[23e]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[240]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__214__split_bufferIhRNS_9allocatorIhEEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::capacity[abi:v16000]() const &rArr; std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[241]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__214__split_bufferIhRNS_9allocatorIhEEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[2af]"></a>std::__2::reverse_iterator&lang;errors*&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__216reverse_iteratorIP6errorsE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;errors*&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2b7]"></a>std::__2::reverse_iterator&lang;LinClients**&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, linmaster.o(.text._ZNKSt3__216reverse_iteratorIPP10LinClientsE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;LinClients**&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2bd]"></a>std::__2::reverse_iterator&lang;SystemDevices**&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNKSt3__216reverse_iteratorIPP13SystemDevicesE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;SystemDevices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2c3]"></a>std::__2::reverse_iterator&lang;Devices**&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNKSt3__216reverse_iteratorIPP7DevicesE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2c9]"></a>std::__2::reverse_iterator&lang;unsigned char*&rang;::base[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, linclients.o(.text._ZNKSt3__216reverse_iteratorIPhE4baseB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::reverse_iterator&lang;unsigned char*&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
</UL>

<P><STRONG><a name="[243]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__217__compressed_pairIP6errorsNS_9allocatorIS1_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[245]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__217__compressed_pairIP6errorsNS_9allocatorIS1_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]() const
</UL>

<P><STRONG><a name="[236]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__217__compressed_pairIP6errorsRNS_9allocatorIS1_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[247]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__217__compressed_pairIPP10LinClientsNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[249]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__217__compressed_pairIPP10LinClientsNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]() const
</UL>

<P><STRONG><a name="[239]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__217__compressed_pairIPP10LinClientsRNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[24b]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__217__compressed_pairIPP13SystemDevicesNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[24d]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__217__compressed_pairIPP13SystemDevicesNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]() const
</UL>

<P><STRONG><a name="[23c]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__217__compressed_pairIPP13SystemDevicesRNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[24f]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__217__compressed_pairIPP7DevicesNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[251]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__217__compressed_pairIPP7DevicesNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]() const
</UL>

<P><STRONG><a name="[23f]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__217__compressed_pairIPP7DevicesRNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[253]"></a>std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, canattender.o(.text._ZNKSt3__217__compressed_pairIPPhNS_9allocatorIS1_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[255]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__217__compressed_pairIPhNS_9allocatorIhEEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[257]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__217__compressed_pairIPhNS_9allocatorIhEEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]() const
</UL>

<P><STRONG><a name="[242]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__217__compressed_pairIPhRNS_9allocatorIhEEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]() const
</UL>

<P><STRONG><a name="[246]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__222__compressed_pair_elemINS_9allocatorI6errorsEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() const
</UL>

<P><STRONG><a name="[24a]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linmaster.o(.text._ZNKSt3__222__compressed_pair_elemINS_9allocatorIP10LinClientsEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]() const
</UL>

<P><STRONG><a name="[24e]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNKSt3__222__compressed_pair_elemINS_9allocatorIP13SystemDevicesEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() const
</UL>

<P><STRONG><a name="[252]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNKSt3__222__compressed_pair_elemINS_9allocatorIP7DevicesEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]() const
</UL>

<P><STRONG><a name="[258]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linclients.o(.text._ZNKSt3__222__compressed_pair_elemINS_9allocatorIhEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]() const
</UL>

<P><STRONG><a name="[244]"></a>std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__222__compressed_pair_elemIP6errorsLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() const
</UL>

<P><STRONG><a name="[248]"></a>std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linmaster.o(.text._ZNKSt3__222__compressed_pair_elemIPP10LinClientsLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() const
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const
</UL>

<P><STRONG><a name="[24c]"></a>std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNKSt3__222__compressed_pair_elemIPP13SystemDevicesLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const
</UL>

<P><STRONG><a name="[250]"></a>std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNKSt3__222__compressed_pair_elemIPP7DevicesLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() const
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const
</UL>

<P><STRONG><a name="[254]"></a>std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, canattender.o(.text._ZNKSt3__222__compressed_pair_elemIPPhLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::first[abi:v16000]() const
</UL>

<P><STRONG><a name="[256]"></a>std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linclients.o(.text._ZNKSt3__222__compressed_pair_elemIPhLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() const
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const
</UL>

<P><STRONG><a name="[39a]"></a>std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNKSt3__26__lessIjjEclB6v16000ERKjS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;)
</UL>

<P><STRONG><a name="[259]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__recommend[abi:v16000](unsigned int) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE11__recommendB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__recommend[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
</UL>

<P><STRONG><a name="[25e]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE14__annotate_newB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
</UL>

<P><STRONG><a name="[261]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE17__annotate_deleteB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[262]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE17__annotate_shrinkB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__destruct_at_end[abi:v16000](errors*)
</UL>

<P><STRONG><a name="[25b]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__throw_length_error[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE20__throw_length_errorB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__throw_length_error[abi:v16000]() const &rArr; std::__2::__throw_length_error[abi:v16000](char const*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v16000](char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[260]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE31__annotate_contiguous_containerB6v16000EPKvS6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[25f]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::data[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE4dataB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::data[abi:v16000]() const &rArr; errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[225]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE4sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getNumErrors()
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__destruct_at_end[abi:v16000](errors*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::errorExists(short, short)
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[265]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]() const</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE5beginB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]() const &rArr; std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::cbegin[abi:v16000]() const
</UL>

<P><STRONG><a name="[22c]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::empty[abi:v16000]() const</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE5emptyB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::empty[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getError()
</UL>

<P><STRONG><a name="[267]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::cbegin[abi:v16000]() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE6cbeginB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::cbegin[abi:v16000]() const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]() const &rArr; std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
</UL>

<P><STRONG><a name="[268]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[25c]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[25a]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE8max_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, void&rang;(std::__2::allocator&lang;errors&rang; const&)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[269]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNKSt3__26vectorI6errorsNS_9allocatorIS1_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[26d]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__recommend[abi:v16000](unsigned int) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE11__recommendB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__recommend[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[271]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE14__annotate_newB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[274]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_delete[abi:v16000]() const</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE17__annotate_deleteB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_delete[abi:v16000]() const &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[26f]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__throw_length_error[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE20__throw_length_errorB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__throw_length_error[abi:v16000]() const &rArr; std::__2::__throw_length_error[abi:v16000](char const*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v16000](char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[273]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE31__annotate_contiguous_containerB6v16000EPKvS7_S7_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[272]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::data[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE4dataB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::data[abi:v16000]() const &rArr; LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[22f]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::size[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE4sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::processInfoFrame(unsigned char*)
</UL>

<P><STRONG><a name="[276]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[270]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[26e]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE8max_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, void&rang;(std::__2::allocator&lang;LinClients*&rang; const&)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[277]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNKSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[279]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE11__recommendB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[27d]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE14__annotate_newB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[280]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE17__annotate_deleteB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[27b]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__throw_length_error[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE20__throw_length_errorB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__throw_length_error[abi:v16000]() const &rArr; std::__2::__throw_length_error[abi:v16000](char const*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v16000](char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[27f]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE31__annotate_contiguous_containerB6v16000EPKvS7_S7_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[27e]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::data[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE4dataB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::data[abi:v16000]() const &rArr; SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[281]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::size[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE4sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[283]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[27c]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[27a]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE8max_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, void&rang;(std::__2::allocator&lang;SystemDevices*&rang; const&)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[284]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNKSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[286]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE11__recommendB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[28a]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE14__annotate_newB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[28d]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_delete[abi:v16000]() const</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE17__annotate_deleteB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_delete[abi:v16000]() const &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[288]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__throw_length_error[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE20__throw_length_errorB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__throw_length_error[abi:v16000]() const &rArr; std::__2::__throw_length_error[abi:v16000](char const*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v16000](char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[28c]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE31__annotate_contiguous_containerB6v16000EPKvS7_S7_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[28b]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::data[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE4dataB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::data[abi:v16000]() const &rArr; Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[28e]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::size[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE4sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[290]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[289]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[287]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE8max_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, void&rang;(std::__2::allocator&lang;Devices*&rang; const&)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[291]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNKSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[293]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_delete[abi:v16000]() const</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, canattender.o(.text._ZNKSt3__26vectorIPhNS_9allocatorIS1_EEE17__annotate_deleteB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_delete[abi:v16000]() const &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[297]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, canattender.o(.text._ZNKSt3__26vectorIPhNS_9allocatorIS1_EEE31__annotate_contiguous_containerB6v16000EPKvS6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[294]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::data[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, canattender.o(.text._ZNKSt3__26vectorIPhNS_9allocatorIS1_EEE4dataB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::data[abi:v16000]() const &rArr; unsigned char** std::__2::__to_address[abi:v16000]&lang;unsigned char*&rang;(unsigned char**)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char** std::__2::__to_address[abi:v16000]&lang;unsigned char*&rang;(unsigned char**)
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[296]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::size[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, canattender.o(.text._ZNKSt3__26vectorIPhNS_9allocatorIS1_EEE4sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[295]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, canattender.o(.text._ZNKSt3__26vectorIPhNS_9allocatorIS1_EEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[299]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, canattender.o(.text._ZNKSt3__26vectorIPhNS_9allocatorIS1_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[29a]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE11__recommendB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[29e]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE14__annotate_newB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2a1]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_delete[abi:v16000]() const</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE17__annotate_deleteB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_delete[abi:v16000]() const &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
</UL>

<P><STRONG><a name="[29c]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__throw_length_error[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE20__throw_length_errorB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__throw_length_error[abi:v16000]() const &rArr; std::__2::__throw_length_error[abi:v16000](char const*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__throw_length_error[abi:v16000](char const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[2a0]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE31__annotate_contiguous_containerB6v16000EPKvS5_S5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_contiguous_container[abi:v16000](void const*, void const*, void const*, void const*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[29f]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::data[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE4dataB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::data[abi:v16000]() const &rArr; unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>

<P><STRONG><a name="[205]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::size[abi:v16000]() const</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE4sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::verifyIdInfo(unsigned char)
</UL>

<P><STRONG><a name="[2a3]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[29d]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE8capacityB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[29b]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, void&rang;(std::__2::allocator&lang;unsigned char&rang; const&)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[2a4]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() const</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNKSt3__26vectorIhNS_9allocatorIhEEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::capacity[abi:v16000]() const
</UL>

<P><STRONG><a name="[333]"></a>std::__2::allocator&lang;errors&rang;::max_size[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, errormanager.o(.text._ZNKSt3__29allocatorI6errorsE8max_sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::allocator&lang;errors&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, void&rang;(std::__2::allocator&lang;errors&rang; const&)
</UL>

<P><STRONG><a name="[338]"></a>std::__2::allocator&lang;LinClients*&rang;::max_size[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, linmaster.o(.text._ZNKSt3__29allocatorIP10LinClientsE8max_sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::allocator&lang;LinClients*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, void&rang;(std::__2::allocator&lang;LinClients*&rang; const&)
</UL>

<P><STRONG><a name="[33d]"></a>std::__2::allocator&lang;SystemDevices*&rang;::max_size[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNKSt3__29allocatorIP13SystemDevicesE8max_sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::allocator&lang;SystemDevices*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, void&rang;(std::__2::allocator&lang;SystemDevices*&rang; const&)
</UL>

<P><STRONG><a name="[342]"></a>std::__2::allocator&lang;Devices*&rang;::max_size[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNKSt3__29allocatorIP7DevicesE8max_sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::allocator&lang;Devices*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, void&rang;(std::__2::allocator&lang;Devices*&rang; const&)
</UL>

<P><STRONG><a name="[34b]"></a>std::__2::allocator&lang;unsigned char&rang;::max_size[abi:v16000]() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, linclients.o(.text._ZNKSt3__29allocatorIhE8max_sizeB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::allocator&lang;unsigned char&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, void&rang;(std::__2::allocator&lang;unsigned char&rang; const&)
</UL>

<P><STRONG><a name="[2a6]"></a>std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*)</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, errormanager.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyE6errorsS2_vEENS_4pairIPT0_PT1_EES5_S5_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*)
</UL>

<P><STRONG><a name="[2a9]"></a>std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**)</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, linmaster.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEP10LinClientsS3_vEENS_4pairIPT0_PT1_EES6_S6_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2ac]"></a>std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**)</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, arvi-main.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEP13SystemDevicesS3_vEENS_4pairIPT0_PT1_EES6_S6_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2ae]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, errormanager.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEP6errorsS3_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS5_IT1_EEEES7_S7_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang;::base[abi:v16000]() const
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang;::reverse_iterator__sub_object[abi:v16000](errors*)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__rewrap_iter[abi:v16000]&lang;errors*, errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;&rang;(errors*, errors*)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap(std::declval&lang;errors*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;, 0&rang;(errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[2b4]"></a>std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**)</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, comunicationmanager.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEP7DevicesS3_vEENS_4pairIPT0_PT1_EES6_S6_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2b6]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, linmaster.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEPP10LinClientsS4_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS6_IT1_EEEES8_S8_SA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__rewrap_iter[abi:v16000]&lang;LinClients**, LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;&rang;(LinClients**, LinClients**)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap(std::declval&lang;LinClients**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;, 0&rang;(LinClients**)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang;::base[abi:v16000]() const
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang;::reverse_iterator__sub_object[abi:v16000](LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2bc]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, arvi-main.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEPP13SystemDevicesS4_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS6_IT1_EEEES8_S8_SA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__rewrap_iter[abi:v16000]&lang;SystemDevices**, SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;&rang;(SystemDevices**, SystemDevices**)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap(std::declval&lang;SystemDevices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;, 0&rang;(SystemDevices**)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang;::base[abi:v16000]() const
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang;::reverse_iterator__sub_object[abi:v16000](SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2c2]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, comunicationmanager.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEPP7DevicesS4_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS6_IT1_EEEES8_S8_SA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__rewrap_iter[abi:v16000]&lang;Devices**, Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;&rang;(Devices**, Devices**)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap(std::declval&lang;Devices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;, 0&rang;(Devices**)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang;::base[abi:v16000]() const
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang;::reverse_iterator__sub_object[abi:v16000](Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2c8]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, linclients.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEPhS2_Li0EEENS_4pairINS_16reverse_iteratorIT0_EENS4_IT1_EEEES6_S6_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__rewrap_iter[abi:v16000]&lang;unsigned char*, unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;&rang;(unsigned char*, unsigned char*)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap(std::declval&lang;unsigned char*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;, 0&rang;(unsigned char*)
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang;::base[abi:v16000]() const
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang;::reverse_iterator__sub_object[abi:v16000](unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2cb]"></a>std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*)</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, linclients.o(.text._ZNSt3__211__move_implB6v16000INS_17_ClassicAlgPolicyEhhvEENS_4pairIPT0_PT1_EES4_S4_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[3be]"></a>std::__2::__wrap_iter&lang;errors*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors*)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__211__wrap_iterIP6errorsEC2B6v16000EPKvS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__wrap_iter&lang;errors*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]()
</UL>

<P><STRONG><a name="[233]"></a>std::__2::__wrap_iter&lang;errors*&rang;::operator+=[abi:v16000](int)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, errormanager.o(.text._ZNSt3__211__wrap_iterIP6errorsEpLB6v16000Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__wrap_iter&lang;errors*&rang;::operator+=[abi:v16000](int)
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors*&rang;::operator+[abi:v16000](int) const
</UL>

<P><STRONG><a name="[266]"></a>std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors const*)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__211__wrap_iterIPK6errorsEC2B6v16000EPKvS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]() const
</UL>

<P><STRONG><a name="[229]"></a>std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000]&lang;errors*&rang;(std::__2::__wrap_iter&lang;errors*&rang; const&, std::__2::enable_if&lang;is_convertible&lang;errors*, errors const*&rang;::value, void&rang;::type*)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__211__wrap_iterIPK6errorsEC2B6v16000IPS1_EERKNS0_IT_EEPNS_9enable_ifIXsr14is_convertibleIS7_S3_EE5valueEvE4typeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::__wrap_iter&lang;errors const*&rang;::__wrap_iter__sub_object[abi:v16000]&lang;errors*&rang;(std::__2::__wrap_iter&lang;errors*&rang; const&, std::__2::enable_if&lang;is_convertible&lang;errors*, errors const*&rang;::value, void&rang;::type*) &rArr; std::__2::__wrap_iter&lang;errors*&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors*&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getError()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
</UL>

<P><STRONG><a name="[3d8]"></a>std::__2::__wrap_iter&lang;SystemDevices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, SystemDevices**)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__211__wrap_iterIPP13SystemDevicesEC2B6v16000EPKvS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__wrap_iter&lang;SystemDevices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::end[abi:v16000]()
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::begin[abi:v16000]()
</UL>

<P><STRONG><a name="[1fb]"></a>std::__2::__wrap_iter&lang;SystemDevices**&rang;::operator++[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__211__wrap_iterIPP13SystemDevicesEppB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;SystemDevices**&rang;::operator++[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devicesState()
</UL>

<P><STRONG><a name="[3e6]"></a>std::__2::__wrap_iter&lang;Devices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, Devices**)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__211__wrap_iterIPP7DevicesEC2B6v16000EPKvS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__wrap_iter&lang;Devices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::end[abi:v16000]()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::begin[abi:v16000]()
</UL>

<P><STRONG><a name="[219]"></a>std::__2::__wrap_iter&lang;Devices**&rang;::operator++[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__211__wrap_iterIPP7DevicesEppB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__wrap_iter&lang;Devices**&rang;::operator++[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::getTopicState(unsigned char)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::processTopic(unsigned char*)
</UL>

<P><STRONG><a name="[264]"></a>errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__212__to_addressB6v16000I6errorsEEPT_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__rewrap[abi:v16000](errors*, errors*)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap[abi:v16000](errors*)
</UL>

<P><STRONG><a name="[275]"></a>LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__212__to_addressB6v16000IP10LinClientsEEPT_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__rewrap[abi:v16000](LinClients**, LinClients**)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap[abi:v16000](LinClients**)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[282]"></a>SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__212__to_addressB6v16000IP13SystemDevicesEEPT_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__rewrap[abi:v16000](SystemDevices**, SystemDevices**)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap[abi:v16000](SystemDevices**)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__base_destruct_at_end[abi:v16000](SystemDevices**)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[28f]"></a>Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__212__to_addressB6v16000IP7DevicesEEPT_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__rewrap[abi:v16000](Devices**, Devices**)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap[abi:v16000](Devices**)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[298]"></a>unsigned char** std::__2::__to_address[abi:v16000]&lang;unsigned char*&rang;(unsigned char**)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, canattender.o(.text._ZNSt3__212__to_addressB6v16000IPhEEPT_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = unsigned char** std::__2::__to_address[abi:v16000]&lang;unsigned char*&rang;(unsigned char**)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__base_destruct_at_end[abi:v16000](unsigned char**)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::data[abi:v16000]() const
</UL>

<P><STRONG><a name="[2a2]"></a>unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__212__to_addressB6v16000IhEEPT_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__rewrap[abi:v16000](unsigned char*, unsigned char*)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap[abi:v16000](unsigned char*)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::data[abi:v16000]() const
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[2d1]"></a>std::__2::reverse_iterator&lang;errors*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, errormanager.o(.text._ZNSt3__213__rewrap_iterB6v16000INS_16reverse_iteratorIP6errorsEES4_NS_18__unwrap_iter_implIS4_Lb0EEEEET_S7_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::reverse_iterator&lang;errors*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[2d3]"></a>std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, linmaster.o(.text._ZNSt3__213__rewrap_iterB6v16000INS_16reverse_iteratorIPP10LinClientsEES5_NS_18__unwrap_iter_implIS5_Lb0EEEEET_S8_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2d5]"></a>std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, arvi-main.o(.text._ZNSt3__213__rewrap_iterB6v16000INS_16reverse_iteratorIPP13SystemDevicesEES5_NS_18__unwrap_iter_implIS5_Lb0EEEEET_S8_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2d7]"></a>std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, comunicationmanager.o(.text._ZNSt3__213__rewrap_iterB6v16000INS_16reverse_iteratorIPP7DevicesEES5_NS_18__unwrap_iter_implIS5_Lb0EEEEET_S8_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2d9]"></a>std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, linclients.o(.text._ZNSt3__213__rewrap_iterB6v16000INS_16reverse_iteratorIPhEES3_NS_18__unwrap_iter_implIS3_Lb0EEEEET_S6_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2b1]"></a>errors* std::__2::__rewrap_iter[abi:v16000]&lang;errors*, errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;&rang;(errors*, errors*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__213__rewrap_iterB6v16000IP6errorsS2_NS_18__unwrap_iter_implIS2_Lb1EEEEET_S5_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = errors* std::__2::__rewrap_iter[abi:v16000]&lang;errors*, errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;&rang;(errors*, errors*) &rArr; std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__rewrap[abi:v16000](errors*, errors*) &rArr; errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__rewrap[abi:v16000](errors*, errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*)
</UL>

<P><STRONG><a name="[2b9]"></a>LinClients** std::__2::__rewrap_iter[abi:v16000]&lang;LinClients**, LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;&rang;(LinClients**, LinClients**)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__213__rewrap_iterB6v16000IPP10LinClientsS3_NS_18__unwrap_iter_implIS3_Lb1EEEEET_S6_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LinClients** std::__2::__rewrap_iter[abi:v16000]&lang;LinClients**, LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;&rang;(LinClients**, LinClients**) &rArr; std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__rewrap[abi:v16000](LinClients**, LinClients**) &rArr; LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__rewrap[abi:v16000](LinClients**, LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2bf]"></a>SystemDevices** std::__2::__rewrap_iter[abi:v16000]&lang;SystemDevices**, SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;&rang;(SystemDevices**, SystemDevices**)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__213__rewrap_iterB6v16000IPP13SystemDevicesS3_NS_18__unwrap_iter_implIS3_Lb1EEEEET_S6_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SystemDevices** std::__2::__rewrap_iter[abi:v16000]&lang;SystemDevices**, SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;&rang;(SystemDevices**, SystemDevices**) &rArr; std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__rewrap[abi:v16000](SystemDevices**, SystemDevices**) &rArr; SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__rewrap[abi:v16000](SystemDevices**, SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2c5]"></a>Devices** std::__2::__rewrap_iter[abi:v16000]&lang;Devices**, Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;&rang;(Devices**, Devices**)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__213__rewrap_iterB6v16000IPP7DevicesS3_NS_18__unwrap_iter_implIS3_Lb1EEEEET_S6_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Devices** std::__2::__rewrap_iter[abi:v16000]&lang;Devices**, Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;&rang;(Devices**, Devices**) &rArr; std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__rewrap[abi:v16000](Devices**, Devices**) &rArr; Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__rewrap[abi:v16000](Devices**, Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2cc]"></a>unsigned char* std::__2::__rewrap_iter[abi:v16000]&lang;unsigned char*, unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;&rang;(unsigned char*, unsigned char*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__213__rewrap_iterB6v16000IPhS1_NS_18__unwrap_iter_implIS1_Lb1EEEEET_S4_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = unsigned char* std::__2::__rewrap_iter[abi:v16000]&lang;unsigned char*, unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;&rang;(unsigned char*, unsigned char*) &rArr; std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__rewrap[abi:v16000](unsigned char*, unsigned char*) &rArr; unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__rewrap[abi:v16000](unsigned char*, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2e0]"></a>decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__213__unwrap_iterB6v16000INS_16reverse_iteratorIP6errorsEENS_18__unwrap_iter_implIS4_Lb0EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[2e2]"></a>decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__213__unwrap_iterB6v16000INS_16reverse_iteratorIPP10LinClientsEENS_18__unwrap_iter_implIS5_Lb0EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2e4]"></a>decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__213__unwrap_iterB6v16000INS_16reverse_iteratorIPP13SystemDevicesEENS_18__unwrap_iter_implIS5_Lb0EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2e6]"></a>decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__213__unwrap_iterB6v16000INS_16reverse_iteratorIPP7DevicesEENS_18__unwrap_iter_implIS5_Lb0EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2e8]"></a>decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__213__unwrap_iterB6v16000INS_16reverse_iteratorIPhEENS_18__unwrap_iter_implIS3_Lb0EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2b0]"></a>decltype(std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap(std::declval&lang;errors*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;, 0&rang;(errors*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__213__unwrap_iterB6v16000IP6errorsNS_18__unwrap_iter_implIS2_Lb1EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap(std::declval&lang;errors*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;, 0&rang;(errors*) &rArr; std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap[abi:v16000](errors*) &rArr; errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap[abi:v16000](errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*)
</UL>

<P><STRONG><a name="[2b8]"></a>decltype(std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap(std::declval&lang;LinClients**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;, 0&rang;(LinClients**)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__213__unwrap_iterB6v16000IPP10LinClientsNS_18__unwrap_iter_implIS3_Lb1EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap(std::declval&lang;LinClients**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;, 0&rang;(LinClients**) &rArr; std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap[abi:v16000](LinClients**) &rArr; LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap[abi:v16000](LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2be]"></a>decltype(std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap(std::declval&lang;SystemDevices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;, 0&rang;(SystemDevices**)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__213__unwrap_iterB6v16000IPP13SystemDevicesNS_18__unwrap_iter_implIS3_Lb1EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap(std::declval&lang;SystemDevices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;, 0&rang;(SystemDevices**) &rArr; std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap[abi:v16000](SystemDevices**) &rArr; SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap[abi:v16000](SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2c4]"></a>decltype(std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap(std::declval&lang;Devices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;, 0&rang;(Devices**)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__213__unwrap_iterB6v16000IPP7DevicesNS_18__unwrap_iter_implIS3_Lb1EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap(std::declval&lang;Devices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;, 0&rang;(Devices**) &rArr; std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap[abi:v16000](Devices**) &rArr; Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap[abi:v16000](Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2ca]"></a>decltype(std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap(std::declval&lang;unsigned char*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;, 0&rang;(unsigned char*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__213__unwrap_iterB6v16000IPhNS_18__unwrap_iter_implIS1_Lb1EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = decltype(std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap(std::declval&lang;unsigned char*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;, 0&rang;(unsigned char*) &rArr; std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap[abi:v16000](unsigned char*) &rArr; unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap[abi:v16000](unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2ef]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEE17__destruct_at_endB6v16000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*) &rArr; std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::clear[abi:v16000]()
</UL>

<P><STRONG><a name="[2f0]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, errormanager.o(.text._ZNSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEE17__destruct_at_endB6v16000EPS1_NS_17integral_constantIbLb0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::destroy[abi:v16000]&lang;errors, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*)
</UL>

<P><STRONG><a name="[2f3]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEE5clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::clear[abi:v16000]() &rArr; std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*) &rArr; std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[2f1]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;errors&rang;&)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;)
</UL>

<P><STRONG><a name="[2f5]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;errors&rang;&)
</UL>

<P><STRONG><a name="[2f7]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;errors&rang;&)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, errormanager.o(.text._ZNSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEEC2EjjS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;errors&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&rang;(std::__2::allocator&lang;errors&rang;&, unsigned int) &rArr; std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&rang;(std::__2::allocator&lang;errors&rang;&, unsigned int)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;errors&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;errors&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
</UL>

<P><STRONG><a name="[2fa]"></a>std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::~__split_buffer__sub_object()</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, errormanager.o(.text._ZNSt3__214__split_bufferI6errorsRNS_9allocatorIS1_EEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::~__split_buffer__sub_object() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;errors&rang;&, errors*, unsigned int) &rArr; std::__2::allocator&lang;errors&rang;::deallocate[abi:v16000](errors*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::capacity[abi:v16000]() const
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::clear[abi:v16000]()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;errors&rang;&, errors*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
</UL>

<P><STRONG><a name="[2fc]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEE17__destruct_at_endB6v16000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**) &rArr; std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::clear[abi:v16000]()
</UL>

<P><STRONG><a name="[2fd]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, linmaster.o(.text._ZNSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEE17__destruct_at_endB6v16000EPS2_NS_17integral_constantIbLb0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::destroy[abi:v16000]&lang;LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**)
</UL>

<P><STRONG><a name="[300]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEE5clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::clear[abi:v16000]() &rArr; std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**) &rArr; std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[2fe]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;LinClients*&rang;&)
</UL>

<P><STRONG><a name="[302]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;LinClients*&rang;&)
</UL>

<P><STRONG><a name="[304]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;LinClients*&rang;&)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, linmaster.o(.text._ZNSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEEC2EjjS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;LinClients*&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&rang;(std::__2::allocator&lang;LinClients*&rang;&, unsigned int) &rArr; std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&rang;(std::__2::allocator&lang;LinClients*&rang;&, unsigned int)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;LinClients*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;LinClients*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[307]"></a>std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::~__split_buffer__sub_object()</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, linmaster.o(.text._ZNSt3__214__split_bufferIP10LinClientsRNS_9allocatorIS2_EEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::~__split_buffer__sub_object() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;LinClients*&rang;&, LinClients**, unsigned int) &rArr; std::__2::allocator&lang;LinClients*&rang;::deallocate[abi:v16000](LinClients**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;LinClients*&rang;&, LinClients**, unsigned int)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::capacity[abi:v16000]() const
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::clear[abi:v16000]()
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[309]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEE17__destruct_at_endB6v16000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**) &rArr; std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::clear[abi:v16000]()
</UL>

<P><STRONG><a name="[30a]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, arvi-main.o(.text._ZNSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEE17__destruct_at_endB6v16000EPS2_NS_17integral_constantIbLb0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::destroy[abi:v16000]&lang;SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**)
</UL>

<P><STRONG><a name="[30d]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEE5clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::clear[abi:v16000]() &rArr; std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**) &rArr; std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[30b]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>

<P><STRONG><a name="[30f]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>

<P><STRONG><a name="[311]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;SystemDevices*&rang;&)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, arvi-main.o(.text._ZNSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEEC2EjjS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;SystemDevices*&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, unsigned int) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, unsigned int)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;SystemDevices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[314]"></a>std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::~__split_buffer__sub_object()</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, arvi-main.o(.text._ZNSt3__214__split_bufferIP13SystemDevicesRNS_9allocatorIS2_EEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::~__split_buffer__sub_object() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, unsigned int) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::deallocate[abi:v16000](SystemDevices**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::capacity[abi:v16000]() const
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::clear[abi:v16000]()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[316]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEE17__destruct_at_endB6v16000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**) &rArr; std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::clear[abi:v16000]()
</UL>

<P><STRONG><a name="[317]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, comunicationmanager.o(.text._ZNSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEE17__destruct_at_endB6v16000EPS2_NS_17integral_constantIbLb0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::destroy[abi:v16000]&lang;Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**)
</UL>

<P><STRONG><a name="[31a]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEE5clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::clear[abi:v16000]() &rArr; std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**) &rArr; std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[318]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;Devices*&rang;&)
</UL>

<P><STRONG><a name="[31c]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;Devices*&rang;&)
</UL>

<P><STRONG><a name="[31e]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;Devices*&rang;&)</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, comunicationmanager.o(.text._ZNSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEEC2EjjS5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;Devices*&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&rang;(std::__2::allocator&lang;Devices*&rang;&, unsigned int) &rArr; std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&rang;(std::__2::allocator&lang;Devices*&rang;&, unsigned int)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;Devices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;Devices*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[321]"></a>std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::~__split_buffer__sub_object()</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, comunicationmanager.o(.text._ZNSt3__214__split_bufferIP7DevicesRNS_9allocatorIS2_EEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::~__split_buffer__sub_object() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;Devices*&rang;&, Devices**, unsigned int) &rArr; std::__2::allocator&lang;Devices*&rang;::deallocate[abi:v16000](Devices**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;Devices*&rang;&, Devices**, unsigned int)
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::capacity[abi:v16000]() const
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::clear[abi:v16000]()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[323]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE17__destruct_at_endB6v16000EPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*) &rArr; std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::clear[abi:v16000]()
</UL>

<P><STRONG><a name="[324]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, linclients.o(.text._ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE17__destruct_at_endB6v16000EPhNS_17integral_constantIbLb0EEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::destroy[abi:v16000]&lang;unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*)
</UL>

<P><STRONG><a name="[327]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE5clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::clear[abi:v16000]() &rArr; std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*) &rArr; std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;) &rArr; std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[325]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&)
</UL>

<P><STRONG><a name="[329]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&)
</UL>

<P><STRONG><a name="[32b]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&)</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, linclients.o(.text._ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EjjS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&) &rArr; std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned int) &rArr; std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned int)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;unsigned char&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;unsigned char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[32e]"></a>std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object()</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, linclients.o(.text._ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned int) &rArr; std::__2::allocator&lang;unsigned char&rang;::deallocate[abi:v16000](unsigned char*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned int)
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::capacity[abi:v16000]() const
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::clear[abi:v16000]()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[26b]"></a>std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, arvi-main.o(.text._ZNSt3__214numeric_limitsIiE3maxB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_numeric_limits&lang;int, true&rang;::max[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[3fb]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorI6errorsEEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3fc]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;LinClients*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorIP10LinClientsEEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;LinClients*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::allocator__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3fd]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorIP13SystemDevicesEEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3fe]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;Devices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorIP7DevicesEEEC2B6v16000Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::allocator__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3ff]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, canattender.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorIPhEEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[400]"></a>std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__216__non_trivial_ifILb1ENS_9allocatorIhEEEC2B6v16000Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::allocator__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[2fb]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;errors&rang;&, errors*, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorI6errorsEEE10deallocateB6v16000ERS3_PS2_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;errors&rang;&, errors*, unsigned int) &rArr; std::__2::allocator&lang;errors&rang;::deallocate[abi:v16000](errors*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::deallocate[abi:v16000](errors*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[2f2]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::destroy[abi:v16000]&lang;errors, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorI6errorsEEE7destroyB6v16000IS2_vEEvRS3_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::destroy[abi:v16000]&lang;errors, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*) &rArr; std::__2::allocator&lang;errors&rang;::destroy[abi:v16000](errors*)
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::destroy[abi:v16000](errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__destruct_at_end[abi:v16000](errors*, std::__2::integral_constant&lang;bool, false&rang;)
</UL>

<P><STRONG><a name="[26a]"></a>unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, void&rang;(std::__2::allocator&lang;errors&rang; const&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorI6errorsEEE8max_sizeB6v16000IS3_vEEjRKS3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, void&rang;(std::__2::allocator&lang;errors&rang; const&) &rArr; std::__2::allocator&lang;errors&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[334]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::construct[abi:v16000]&lang;errors, errors const&, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*, errors const&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorI6errorsEEE9constructB6v16000IS2_JRKS2_EvEEvRS3_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::construct[abi:v16000]&lang;errors, errors const&, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*, errors const&) &rArr; void std::__2::allocator&lang;errors&rang;::construct[abi:v16000]&lang;errors, errors const&&rang;(errors*, errors const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;errors&rang;::construct[abi:v16000]&lang;errors, errors const&&rang;(errors*, errors const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&)
</UL>

<P><STRONG><a name="[308]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;LinClients*&rang;&, LinClients**, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP10LinClientsEEE10deallocateB6v16000ERS4_PS3_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;LinClients*&rang;&, LinClients**, unsigned int) &rArr; std::__2::allocator&lang;LinClients*&rang;::deallocate[abi:v16000](LinClients**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::deallocate[abi:v16000](LinClients**, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[2ff]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::destroy[abi:v16000]&lang;LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP10LinClientsEEE7destroyB6v16000IS3_vEEvRS4_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::destroy[abi:v16000]&lang;LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**) &rArr; std::__2::allocator&lang;LinClients*&rang;::destroy[abi:v16000](LinClients**)
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::destroy[abi:v16000](LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__destruct_at_end[abi:v16000](LinClients**, std::__2::integral_constant&lang;bool, false&rang;)
</UL>

<P><STRONG><a name="[278]"></a>unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, void&rang;(std::__2::allocator&lang;LinClients*&rang; const&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP10LinClientsEEE8max_sizeB6v16000IS4_vEEjRKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, void&rang;(std::__2::allocator&lang;LinClients*&rang; const&) &rArr; std::__2::allocator&lang;LinClients*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[339]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**, LinClients* const&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP10LinClientsEEE9constructB6v16000IS3_JRKS3_EvEEvRS4_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**, LinClients* const&) &rArr; void std::__2::allocator&lang;LinClients*&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&&rang;(LinClients**, LinClients* const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;LinClients*&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&&rang;(LinClients**, LinClients* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[315]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP13SystemDevicesEEE10deallocateB6v16000ERS4_PS3_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, unsigned int) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::deallocate[abi:v16000](SystemDevices**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::deallocate[abi:v16000](SystemDevices**, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[30c]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::destroy[abi:v16000]&lang;SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP13SystemDevicesEEE7destroyB6v16000IS3_vEEvRS4_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::destroy[abi:v16000]&lang;SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::destroy[abi:v16000](SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::destroy[abi:v16000](SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__destruct_at_end[abi:v16000](SystemDevices**, std::__2::integral_constant&lang;bool, false&rang;)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__base_destruct_at_end[abi:v16000](SystemDevices**)
</UL>

<P><STRONG><a name="[285]"></a>unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, void&rang;(std::__2::allocator&lang;SystemDevices*&rang; const&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP13SystemDevicesEEE8max_sizeB6v16000IS4_vEEjRKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, void&rang;(std::__2::allocator&lang;SystemDevices*&rang; const&) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[33e]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, SystemDevices*&&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP13SystemDevicesEEE9constructB6v16000IS3_JS3_EvEEvRS4_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, SystemDevices*&&) &rArr; void std::__2::allocator&lang;SystemDevices*&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*&rang;(SystemDevices**, SystemDevices*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;SystemDevices*&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*&rang;(SystemDevices**, SystemDevices*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[322]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;Devices*&rang;&, Devices**, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP7DevicesEEE10deallocateB6v16000ERS4_PS3_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;Devices*&rang;&, Devices**, unsigned int) &rArr; std::__2::allocator&lang;Devices*&rang;::deallocate[abi:v16000](Devices**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::deallocate[abi:v16000](Devices**, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[319]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::destroy[abi:v16000]&lang;Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP7DevicesEEE7destroyB6v16000IS3_vEEvRS4_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::destroy[abi:v16000]&lang;Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**) &rArr; std::__2::allocator&lang;Devices*&rang;::destroy[abi:v16000](Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::destroy[abi:v16000](Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__destruct_at_end[abi:v16000](Devices**, std::__2::integral_constant&lang;bool, false&rang;)
</UL>

<P><STRONG><a name="[292]"></a>unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, void&rang;(std::__2::allocator&lang;Devices*&rang; const&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP7DevicesEEE8max_sizeB6v16000IS4_vEEjRKS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, void&rang;(std::__2::allocator&lang;Devices*&rang; const&) &rArr; std::__2::allocator&lang;Devices*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[343]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**, Devices* const&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIP7DevicesEEE9constructB6v16000IS3_JRKS3_EvEEvRS4_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**, Devices* const&) &rArr; void std::__2::allocator&lang;Devices*&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&&rang;(Devices**, Devices* const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;Devices*&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&&rang;(Devices**, Devices* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[345]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, canattender.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIPhEEE10deallocateB6v16000ERS3_PS2_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**, unsigned int) &rArr; std::__2::allocator&lang;unsigned char*&rang;::deallocate[abi:v16000](unsigned char**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char*&rang;::deallocate[abi:v16000](unsigned char**, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[347]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::destroy[abi:v16000]&lang;unsigned char*, void&rang;(std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, canattender.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIPhEEE7destroyB6v16000IS2_vEEvRS3_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::destroy[abi:v16000]&lang;unsigned char*, void&rang;(std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**) &rArr; std::__2::allocator&lang;unsigned char*&rang;::destroy[abi:v16000](unsigned char**)
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char*&rang;::destroy[abi:v16000](unsigned char**)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__base_destruct_at_end[abi:v16000](unsigned char**)
</UL>

<P><STRONG><a name="[32f]"></a>std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIhEEE10deallocateB6v16000ERS2_Phj))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned int) &rArr; std::__2::allocator&lang;unsigned char&rang;::deallocate[abi:v16000](unsigned char*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::deallocate[abi:v16000](unsigned char*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object()
</UL>

<P><STRONG><a name="[326]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::destroy[abi:v16000]&lang;unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIhEEE7destroyB6v16000IhvEEvRS2_PT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::destroy[abi:v16000]&lang;unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*) &rArr; std::__2::allocator&lang;unsigned char&rang;::destroy[abi:v16000](unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::destroy[abi:v16000](unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__destruct_at_end[abi:v16000](unsigned char*, std::__2::integral_constant&lang;bool, false&rang;)
</UL>

<P><STRONG><a name="[2a5]"></a>unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, void&rang;(std::__2::allocator&lang;unsigned char&rang; const&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIhEEE8max_sizeB6v16000IS2_vEEjRKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, void&rang;(std::__2::allocator&lang;unsigned char&rang; const&) &rArr; std::__2::allocator&lang;unsigned char&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::max_size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[34c]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char const&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIhEEE9constructB6v16000IhJRKhEvEEvRS2_PT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char const&) &rArr; void std::__2::allocator&lang;unsigned char&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&&rang;(unsigned char*, unsigned char const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;unsigned char&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&&rang;(unsigned char*, unsigned char const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&)
</UL>

<P><STRONG><a name="[34e]"></a>void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char&&)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__216allocator_traitsINS_9allocatorIhEEE9constructB6v16000IhJhEvEEvRS2_PT_DpOT0_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator&lang;unsigned char&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char&rang;(unsigned char*, unsigned char&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[2b2]"></a>std::__2::reverse_iterator&lang;errors*&rang;::reverse_iterator__sub_object[abi:v16000](errors*)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, errormanager.o(.text._ZNSt3__216reverse_iteratorIP6errorsEC2B6v16000ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;errors*&rang;::reverse_iterator__sub_object[abi:v16000](errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2ba]"></a>std::__2::reverse_iterator&lang;LinClients**&rang;::reverse_iterator__sub_object[abi:v16000](LinClients**)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, linmaster.o(.text._ZNSt3__216reverse_iteratorIPP10LinClientsEC2B6v16000ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;LinClients**&rang;::reverse_iterator__sub_object[abi:v16000](LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2c0]"></a>std::__2::reverse_iterator&lang;SystemDevices**&rang;::reverse_iterator__sub_object[abi:v16000](SystemDevices**)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, arvi-main.o(.text._ZNSt3__216reverse_iteratorIPP13SystemDevicesEC2B6v16000ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;SystemDevices**&rang;::reverse_iterator__sub_object[abi:v16000](SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2c6]"></a>std::__2::reverse_iterator&lang;Devices**&rang;::reverse_iterator__sub_object[abi:v16000](Devices**)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, comunicationmanager.o(.text._ZNSt3__216reverse_iteratorIPP7DevicesEC2B6v16000ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;Devices**&rang;::reverse_iterator__sub_object[abi:v16000](Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[2cd]"></a>std::__2::reverse_iterator&lang;unsigned char*&rang;::reverse_iterator__sub_object[abi:v16000](unsigned char*)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, linclients.o(.text._ZNSt3__216reverse_iteratorIPhEC2B6v16000ES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::reverse_iterator&lang;unsigned char*&rang;::reverse_iterator__sub_object[abi:v16000](unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
</UL>

<P><STRONG><a name="[350]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__217__compressed_pairIP6errorsNS_9allocatorIS1_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[352]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__217__compressed_pairIP6errorsNS_9allocatorIS1_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[354]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, errormanager.o(.text._ZNSt3__217__compressed_pairIP6errorsNS_9allocatorIS1_EEEC2B6v16000IDnNS_18__default_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[2f6]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__217__compressed_pairIP6errorsRNS_9allocatorIS1_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[2f4]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__217__compressed_pairIP6errorsRNS_9allocatorIS1_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[2f8]"></a>std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;errors&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;errors&rang;&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__217__compressed_pairIP6errorsRNS_9allocatorIS1_EEEC2B6v16000IDnS5_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;errors&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;errors&rang;&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&, void&rang;(std::__2::allocator&lang;errors&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&, void&rang;(std::__2::allocator&lang;errors&rang;&)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;errors&rang;&)
</UL>

<P><STRONG><a name="[359]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__217__compressed_pairIPP10LinClientsNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[35b]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__217__compressed_pairIPP10LinClientsNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[35d]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, linmaster.o(.text._ZNSt3__217__compressed_pairIPP10LinClientsNS_9allocatorIS2_EEEC2B6v16000IDnNS_18__default_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;LinClients*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;LinClients*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[303]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__217__compressed_pairIPP10LinClientsRNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[301]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__217__compressed_pairIPP10LinClientsRNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[305]"></a>std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;LinClients*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;LinClients*&rang;&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__217__compressed_pairIPP10LinClientsRNS_9allocatorIS2_EEEC2B6v16000IDnS6_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;LinClients*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;LinClients*&rang;&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;LinClients*&rang;&)
</UL>

<P><STRONG><a name="[362]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__217__compressed_pairIPP13SystemDevicesNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[364]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__217__compressed_pairIPP13SystemDevicesNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[366]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, arvi-main.o(.text._ZNSt3__217__compressed_pairIPP13SystemDevicesNS_9allocatorIS2_EEEC2B6v16000IDnNS_18__default_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[310]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__217__compressed_pairIPP13SystemDevicesRNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[30e]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__217__compressed_pairIPP13SystemDevicesRNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[312]"></a>std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;SystemDevices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;SystemDevices*&rang;&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__217__compressed_pairIPP13SystemDevicesRNS_9allocatorIS2_EEEC2B6v16000IDnS6_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;SystemDevices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;SystemDevices*&rang;&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>

<P><STRONG><a name="[36b]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__217__compressed_pairIPP7DevicesNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[36d]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__217__compressed_pairIPP7DevicesNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[36f]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, comunicationmanager.o(.text._ZNSt3__217__compressed_pairIPP7DevicesNS_9allocatorIS2_EEEC2B6v16000IDnNS_18__default_init_tagEEEOT_OT0_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[31d]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__217__compressed_pairIPP7DevicesRNS_9allocatorIS2_EEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[31b]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__217__compressed_pairIPP7DevicesRNS_9allocatorIS2_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[31f]"></a>std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;Devices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;Devices*&rang;&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__217__compressed_pairIPP7DevicesRNS_9allocatorIS2_EEEC2B6v16000IDnS6_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;Devices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;Devices*&rang;&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&, void&rang;(std::__2::allocator&lang;Devices*&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&, void&rang;(std::__2::allocator&lang;Devices*&rang;&)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;Devices*&rang;&)
</UL>

<P><STRONG><a name="[374]"></a>std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::second[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, canattender.o(.text._ZNSt3__217__compressed_pairIPPhNS_9allocatorIS1_EEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[376]"></a>std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, canattender.o(.text._ZNSt3__217__compressed_pairIPPhNS_9allocatorIS1_EEEC2B6v16000IDnNS_18__default_init_tagEEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[379]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__217__compressed_pairIPhNS_9allocatorIhEEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[37b]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__217__compressed_pairIPhNS_9allocatorIhEEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[37d]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, linclients.o(.text._ZNSt3__217__compressed_pairIPhNS_9allocatorIhEEEC2B6v16000IDnNS_18__default_init_tagEEEOT_OT0_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[32a]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__217__compressed_pairIPhRNS_9allocatorIhEEE5firstB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]()
</UL>

<P><STRONG><a name="[328]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__217__compressed_pairIPhRNS_9allocatorIhEEE6secondB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__alloc[abi:v16000]()
</UL>

<P><STRONG><a name="[32c]"></a>std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;unsigned char&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;unsigned char&rang;&)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__217__compressed_pairIPhRNS_9allocatorIhEEEC2B6v16000IDnS4_EEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;unsigned char&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;unsigned char&rang;&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&)
</UL>

<P><STRONG><a name="[382]"></a>std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__217__libcpp_allocateB6v16000Ejj))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int&rang;(unsigned int)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__is_overaligned_for_new[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int)
</UL>

<P><STRONG><a name="[3c3]"></a>void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__218__debug_db_erase_cB6v16000INS_6vectorI6errorsNS_9allocatorIS2_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3dc]"></a>void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__218__debug_db_erase_cB6v16000INS_6vectorIP13SystemDevicesNS_9allocatorIS3_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3ed]"></a>void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;&rang;(std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, canattender.o(.text._ZNSt3__218__debug_db_erase_cB6v16000INS_6vectorIPhNS_9allocatorIS2_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;&rang;(std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[2d2]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIP6errorsEELb0EE8__rewrapB6v16000ES4_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[2e1]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIP6errorsEELb0EE8__unwrapB6v16000ES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[2d4]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPP10LinClientsEELb0EE8__rewrapB6v16000ES5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2e3]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, linmaster.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPP10LinClientsEELb0EE8__unwrapB6v16000ES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2d6]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPP13SystemDevicesEELb0EE8__rewrapB6v16000ES5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2e5]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPP13SystemDevicesEELb0EE8__unwrapB6v16000ES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2d8]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPP7DevicesEELb0EE8__rewrapB6v16000ES5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2e7]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPP7DevicesEELb0EE8__unwrapB6v16000ES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2da]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPhEELb0EE8__rewrapB6v16000ES3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__rewrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2e9]"></a>std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__218__unwrap_iter_implINS_16reverse_iteratorIPhEELb0EE8__unwrapB6v16000ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap[abi:v16000](std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2db]"></a>std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__rewrap[abi:v16000](errors*, errors*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__218__unwrap_iter_implIP6errorsLb1EE8__rewrapB6v16000ES2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__rewrap[abi:v16000](errors*, errors*) &rArr; errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__rewrap_iter[abi:v16000]&lang;errors*, errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;&rang;(errors*, errors*)
</UL>

<P><STRONG><a name="[2ea]"></a>std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap[abi:v16000](errors*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__218__unwrap_iter_implIP6errorsLb1EE8__unwrapB6v16000ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap[abi:v16000](errors*) &rArr; errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap(std::declval&lang;errors*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;, 0&rang;(errors*)
</UL>

<P><STRONG><a name="[2dc]"></a>std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__rewrap[abi:v16000](LinClients**, LinClients**)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__218__unwrap_iter_implIPP10LinClientsLb1EE8__rewrapB6v16000ES3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__rewrap[abi:v16000](LinClients**, LinClients**) &rArr; LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__rewrap_iter[abi:v16000]&lang;LinClients**, LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;&rang;(LinClients**, LinClients**)
</UL>

<P><STRONG><a name="[2eb]"></a>std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap[abi:v16000](LinClients**)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__218__unwrap_iter_implIPP10LinClientsLb1EE8__unwrapB6v16000ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap[abi:v16000](LinClients**) &rArr; LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;::__unwrap(std::declval&lang;LinClients**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;LinClients**, std::__2::__unwrap_iter_impl&lang;LinClients**, true&rang;, 0&rang;(LinClients**)
</UL>

<P><STRONG><a name="[2dd]"></a>std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__rewrap[abi:v16000](SystemDevices**, SystemDevices**)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__218__unwrap_iter_implIPP13SystemDevicesLb1EE8__rewrapB6v16000ES3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__rewrap[abi:v16000](SystemDevices**, SystemDevices**) &rArr; SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__rewrap_iter[abi:v16000]&lang;SystemDevices**, SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;&rang;(SystemDevices**, SystemDevices**)
</UL>

<P><STRONG><a name="[2ec]"></a>std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap[abi:v16000](SystemDevices**)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__218__unwrap_iter_implIPP13SystemDevicesLb1EE8__unwrapB6v16000ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap[abi:v16000](SystemDevices**) &rArr; SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;::__unwrap(std::declval&lang;SystemDevices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;SystemDevices**, std::__2::__unwrap_iter_impl&lang;SystemDevices**, true&rang;, 0&rang;(SystemDevices**)
</UL>

<P><STRONG><a name="[2de]"></a>std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__rewrap[abi:v16000](Devices**, Devices**)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__218__unwrap_iter_implIPP7DevicesLb1EE8__rewrapB6v16000ES3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__rewrap[abi:v16000](Devices**, Devices**) &rArr; Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__rewrap_iter[abi:v16000]&lang;Devices**, Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;&rang;(Devices**, Devices**)
</UL>

<P><STRONG><a name="[2ed]"></a>std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap[abi:v16000](Devices**)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__218__unwrap_iter_implIPP7DevicesLb1EE8__unwrapB6v16000ES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap[abi:v16000](Devices**) &rArr; Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;::__unwrap(std::declval&lang;Devices**&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;Devices**, std::__2::__unwrap_iter_impl&lang;Devices**, true&rang;, 0&rang;(Devices**)
</UL>

<P><STRONG><a name="[2df]"></a>std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__rewrap[abi:v16000](unsigned char*, unsigned char*)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__218__unwrap_iter_implIPhLb1EE8__rewrapB6v16000ES1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__rewrap[abi:v16000](unsigned char*, unsigned char*) &rArr; unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__rewrap_iter[abi:v16000]&lang;unsigned char*, unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;&rang;(unsigned char*, unsigned char*)
</UL>

<P><STRONG><a name="[2ee]"></a>std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap[abi:v16000](unsigned char*)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__218__unwrap_iter_implIPhLb1EE8__unwrapB6v16000ES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap[abi:v16000](unsigned char*) &rArr; unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;::__unwrap(std::declval&lang;unsigned char*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;unsigned char*, std::__2::__unwrap_iter_impl&lang;unsigned char*, true&rang;, 0&rang;(unsigned char*)
</UL>

<P><STRONG><a name="[2f9]"></a>std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&rang;(std::__2::allocator&lang;errors&rang;&, unsigned int)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__219__allocate_at_leastB6v16000INS_9allocatorI6errorsEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&rang;(std::__2::allocator&lang;errors&rang;&, unsigned int) &rArr; std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;errors&rang;&)
</UL>

<P><STRONG><a name="[306]"></a>std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&rang;(std::__2::allocator&lang;LinClients*&rang;&, unsigned int)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__219__allocate_at_leastB6v16000INS_9allocatorIP10LinClientsEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS7_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&rang;(std::__2::allocator&lang;LinClients*&rang;&, unsigned int) &rArr; std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;LinClients*&rang;&)
</UL>

<P><STRONG><a name="[313]"></a>std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, unsigned int)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__219__allocate_at_leastB6v16000INS_9allocatorIP13SystemDevicesEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS7_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, unsigned int) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>

<P><STRONG><a name="[320]"></a>std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&rang;(std::__2::allocator&lang;Devices*&rang;&, unsigned int)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__219__allocate_at_leastB6v16000INS_9allocatorIP7DevicesEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS7_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&rang;(std::__2::allocator&lang;Devices*&rang;&, unsigned int) &rArr; std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;Devices*&rang;&)
</UL>

<P><STRONG><a name="[32d]"></a>std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned int)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__219__allocate_at_leastB6v16000INS_9allocatorIhEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS5_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned int) &rArr; std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&)
</UL>

<P><STRONG><a name="[3c2]"></a>void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__219__debug_db_insert_cB6v16000INS_6vectorI6errorsNS_9allocatorIS2_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3cd]"></a>void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&rang;(std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__219__debug_db_insert_cB6v16000INS_6vectorIP10LinClientsNS_9allocatorIS3_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&rang;(std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3db]"></a>void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__219__debug_db_insert_cB6v16000INS_6vectorIP13SystemDevicesNS_9allocatorIS3_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3e7]"></a>void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&rang;(std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__219__debug_db_insert_cB6v16000INS_6vectorIP7DevicesNS_9allocatorIS3_EEEEEEvPT_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3ec]"></a>void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;&rang;(std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, canattender.o(.text._ZNSt3__219__debug_db_insert_cB6v16000INS_6vectorIPhNS_9allocatorIS2_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;&rang;(std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3f9]"></a>void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&rang;(std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__219__debug_db_insert_cB6v16000INS_6vectorIhNS_9allocatorIhEEEEEEvPT_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[38b]"></a>std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__219__libcpp_deallocateB6v16000EPvjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;&rang;(void*, unsigned int)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__is_overaligned_for_new[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::deallocate[abi:v16000](SystemDevices**, unsigned int)
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::deallocate[abi:v16000](unsigned char*, unsigned int)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::deallocate[abi:v16000](LinClients**, unsigned int)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::deallocate[abi:v16000](Devices**, unsigned int)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char*&rang;::deallocate[abi:v16000](unsigned char**, unsigned int)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::deallocate[abi:v16000](errors*, unsigned int)
</UL>

<P><STRONG><a name="[263]"></a>std::__2::__throw_length_error[abi:v16000](char const*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, arvi-main.o(.text._ZNSt3__220__throw_length_errorB6v16000EPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = std::__2::__throw_length_error[abi:v16000](char const*) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__throw_length_error[abi:v16000]() const
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__throw_length_error[abi:v16000]() const
</UL>

<P><STRONG><a name="[385]"></a>void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int&rang;(unsigned int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__221__libcpp_operator_newB6v16000IJjEEEPvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int&rang;(unsigned int) &rArr; operator new(unsigned int) &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[384]"></a>void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__221__libcpp_operator_newB6v16000IJjSt11align_val_tEEEPvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[353]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorI6errorsEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[356]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorI6errorsEELi1ELb1EEC2B6v16000ENS_18__default_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[35c]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIP10LinClientsEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[35f]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIP10LinClientsEELi1ELb1EEC2B6v16000ENS_18__default_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;LinClients*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;LinClients*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::allocator__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[365]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIP13SystemDevicesEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[368]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIP13SystemDevicesEELi1ELb1EEC2B6v16000ENS_18__default_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[36e]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIP7DevicesEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[371]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIP7DevicesEELi1ELb1EEC2B6v16000ENS_18__default_init_tagE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::allocator__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[375]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, canattender.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIPhEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[378]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, canattender.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIPhEELi1ELb1EEC2B6v16000ENS_18__default_init_tagE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[37c]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIhEELi1ELb1EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[37f]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__222__compressed_pair_elemINS_9allocatorIhEELi1ELb1EEC2B6v16000ENS_18__default_init_tagE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::allocator__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[351]"></a>std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__222__compressed_pair_elemIP6errorsLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::first[abi:v16000]()
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]()
</UL>

<P><STRONG><a name="[355]"></a>std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, errormanager.o(.text._ZNSt3__222__compressed_pair_elemIP6errorsLi0ELb0EEC2B6v16000IDnvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;errors&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;errors&rang;&)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[35a]"></a>std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__222__compressed_pair_elemIPP10LinClientsLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::first[abi:v16000]()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]()
</UL>

<P><STRONG><a name="[35e]"></a>std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linmaster.o(.text._ZNSt3__222__compressed_pair_elemIPP10LinClientsLi0ELb0EEC2B6v16000IDnvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;LinClients*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;LinClients*&rang;&)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[363]"></a>std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__222__compressed_pair_elemIPP13SystemDevicesLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::first[abi:v16000]()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]()
</UL>

<P><STRONG><a name="[367]"></a>std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, arvi-main.o(.text._ZNSt3__222__compressed_pair_elemIPP13SystemDevicesLi0ELb0EEC2B6v16000IDnvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;SystemDevices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;SystemDevices*&rang;&)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[36c]"></a>std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__222__compressed_pair_elemIPP7DevicesLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::first[abi:v16000]()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]()
</UL>

<P><STRONG><a name="[370]"></a>std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, comunicationmanager.o(.text._ZNSt3__222__compressed_pair_elemIPP7DevicesLi0ELb0EEC2B6v16000IDnvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;Devices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;Devices*&rang;&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[377]"></a>std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, canattender.o(.text._ZNSt3__222__compressed_pair_elemIPPhLi0ELb0EEC2B6v16000IDnvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned char**, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[37a]"></a>std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__222__compressed_pair_elemIPhLi0ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::first[abi:v16000]()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]()
</UL>

<P><STRONG><a name="[37e]"></a>std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linclients.o(.text._ZNSt3__222__compressed_pair_elemIPhLi0ELb0EEC2B6v16000IDnvEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::nullptr_t, void&rang;(std::nullptr_t&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;unsigned char&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;unsigned char&rang;&)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>

<P><STRONG><a name="[357]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorI6errorsEELi1ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[358]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&, void&rang;(std::__2::allocator&lang;errors&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, errormanager.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorI6errorsEELi1ELb0EEC2B6v16000IS4_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&, void&rang;(std::__2::allocator&lang;errors&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;errors&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;errors&rang;&)
</UL>

<P><STRONG><a name="[360]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIP10LinClientsEELi1ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[361]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linmaster.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIP10LinClientsEELi1ELb0EEC2B6v16000IS5_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;LinClients*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;LinClients*&rang;&)
</UL>

<P><STRONG><a name="[369]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIP13SystemDevicesEELi1ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[36a]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, arvi-main.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIP13SystemDevicesEELi1ELb0EEC2B6v16000IS5_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;SystemDevices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;SystemDevices*&rang;&)
</UL>

<P><STRONG><a name="[372]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIP7DevicesEELi1ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[373]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&, void&rang;(std::__2::allocator&lang;Devices*&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, comunicationmanager.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIP7DevicesEELi1ELb0EEC2B6v16000IS5_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&, void&rang;(std::__2::allocator&lang;Devices*&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;Devices*&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;Devices*&rang;&)
</UL>

<P><STRONG><a name="[380]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIhEELi1ELb0EE5__getB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::second[abi:v16000]()
</UL>

<P><STRONG><a name="[381]"></a>std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, linclients.o(.text._ZNSt3__222__compressed_pair_elemIRNS_9allocatorIhEELi1ELb0EEC2B6v16000IS3_vEEOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;&, 1, false&rang;::__compressed_pair_elem__sub_object[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::allocator&lang;unsigned char&rang;&&rang;(std::nullptr_t&&, std::__2::allocator&lang;unsigned char&rang;&)
</UL>

<P><STRONG><a name="[330]"></a>std::__2::__libcpp_numeric_limits&lang;int, true&rang;::max[abi:v16000]()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, arvi-main.o(.text._ZNSt3__223__libcpp_numeric_limitsIiLb1EE3maxB6v16000Ev))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::numeric_limits&lang;int&rang;::max[abi:v16000]()
</UL>

<P><STRONG><a name="[383]"></a>std::__2::__is_overaligned_for_new[abi:v16000](unsigned int)</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__224__is_overaligned_for_newB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::__is_overaligned_for_new[abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[395]"></a>void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int&rang;(void*, unsigned int)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__224__libcpp_operator_deleteB6v16000IJPvjEEEvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int&rang;(void*, unsigned int) &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;&rang;(void*, unsigned int)
</UL>

<P><STRONG><a name="[397]"></a>void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__224__libcpp_operator_deleteB6v16000IJPvjSt11align_val_tEEEvDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[3bd]"></a>void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__225__debug_db_invalidate_allB6v16000INS_6vectorI6errorsNS_9allocatorIS2_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3cc]"></a>void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&rang;(std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__225__debug_db_invalidate_allB6v16000INS_6vectorIP10LinClientsNS_9allocatorIS3_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&rang;(std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3d7]"></a>void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__225__debug_db_invalidate_allB6v16000INS_6vectorIP13SystemDevicesNS_9allocatorIS3_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3e5]"></a>void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&rang;(std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__225__debug_db_invalidate_allB6v16000INS_6vectorIP7DevicesNS_9allocatorIS3_EEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&rang;(std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3f8]"></a>void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&rang;(std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;*)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__225__debug_db_invalidate_allB6v16000INS_6vectorIhNS_9allocatorIhEEEEEEvPT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&rang;(std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
</UL>

<P><STRONG><a name="[38d]"></a>void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;&rang;(void*, unsigned int)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__227__do_deallocate_handle_sizeB6v16000IJEEEvPvjDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;&rang;(void*, unsigned int) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int&rang;(void*, unsigned int) &rArr; operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int&rang;(void*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[38c]"></a>void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__227__do_deallocate_handle_sizeB6v16000IJSt11align_val_tEEEvPvjDpT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[25d]"></a>unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__23maxB6v16000IjEERKT_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__recommend[abi:v16000](unsigned int) const
</UL>

<P><STRONG><a name="[399]"></a>unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__23maxB6v16000IjNS_6__lessIjjEEEERKT_S5_S5_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::max[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
</UL>

<P><STRONG><a name="[26c]"></a>unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__23minB6v16000IjEERKT_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&) &rArr; unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size() const
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::max_size() const
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::max_size() const
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::max_size() const
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::max_size() const
</UL>

<P><STRONG><a name="[39b]"></a>unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__23minB6v16000IjNS_6__lessIjjEEEERKT_S5_S5_T0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int, std::__2::__less&lang;unsigned int, unsigned int&rang;&rang;(unsigned int const&, unsigned int const&, std::__2::__less&lang;unsigned int, unsigned int&rang;) &rArr; std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__less&lang;unsigned int, unsigned int&rang;::operator()[abi:v16000](unsigned int const&, unsigned int const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int const& std::__2::min[abi:v16000]&lang;unsigned int&rang;(unsigned int const&, unsigned int const&)
</UL>

<P><STRONG><a name="[39c]"></a>std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 98 bytes, Stack size 80 bytes, errormanager.o(.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB6v16000INS_9allocatorI6errorsEENS_16reverse_iteratorIPS2_EES6_S2_vEET1_RT_T0_SA_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
</UL>

<P><STRONG><a name="[39e]"></a>std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 98 bytes, Stack size 80 bytes, linmaster.o(.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB6v16000INS_9allocatorIP10LinClientsEENS_16reverse_iteratorIPS3_EES7_S3_vEET1_RT_T0_SB_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3a0]"></a>std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 98 bytes, Stack size 80 bytes, arvi-main.o(.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB6v16000INS_9allocatorIP13SystemDevicesEENS_16reverse_iteratorIPS3_EES7_S3_vEET1_RT_T0_SB_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3a2]"></a>std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 98 bytes, Stack size 80 bytes, comunicationmanager.o(.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB6v16000INS_9allocatorIP7DevicesEENS_16reverse_iteratorIPS3_EES7_S3_vEET1_RT_T0_SB_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3a4]"></a>std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 98 bytes, Stack size 80 bytes, linclients.o(.text._ZNSt3__242__uninitialized_allocator_move_if_noexceptB6v16000INS_9allocatorIhEENS_16reverse_iteratorIPhEES5_hvEET1_RT_T0_S9_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
</UL>

<P><STRONG><a name="[39d]"></a>std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, errormanager.o(.text._ZNSt3__24moveB6v16000INS_16reverse_iteratorIP6errorsEES4_EET0_T_S6_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[39f]"></a>std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, linmaster.o(.text._ZNSt3__24moveB6v16000INS_16reverse_iteratorIPP10LinClientsEES5_EET0_T_S7_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[3a1]"></a>std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, arvi-main.o(.text._ZNSt3__24moveB6v16000INS_16reverse_iteratorIPP13SystemDevicesEES5_EET0_T_S7_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[3a3]"></a>std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, comunicationmanager.o(.text._ZNSt3__24moveB6v16000INS_16reverse_iteratorIPP7DevicesEES5_EET0_T_S7_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[3a5]"></a>std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, linclients.o(.text._ZNSt3__24moveB6v16000INS_16reverse_iteratorIPhEES3_EET0_T_S5_S4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[3ab]"></a>errors* std::__2::move[abi:v16000]&lang;errors*, errors*&rang;(errors*, errors*, errors*)</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, errormanager.o(.text._ZNSt3__24moveB6v16000IP6errorsS2_EET0_T_S4_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = errors* std::__2::move[abi:v16000]&lang;errors*, errors*&rang;(errors*, errors*, errors*) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
</UL>

<P><STRONG><a name="[40b]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__24pairINS_16reverse_iteratorIP6errorsEES4_EC2B6v16000IRS4_S4_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>

<P><STRONG><a name="[401]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__24pairINS_16reverse_iteratorIP6errorsEES4_EC2B6v16000IS4_S4_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>

<P><STRONG><a name="[40c]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, linmaster.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPP10LinClientsEES5_EC2B6v16000IRS5_S5_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>

<P><STRONG><a name="[402]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, linmaster.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPP10LinClientsEES5_EC2B6v16000IS5_S5_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>

<P><STRONG><a name="[40d]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPP13SystemDevicesEES5_EC2B6v16000IRS5_S5_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>

<P><STRONG><a name="[403]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPP13SystemDevicesEES5_EC2B6v16000IS5_S5_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>

<P><STRONG><a name="[40e]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPP7DevicesEES5_EC2B6v16000IRS5_S5_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>

<P><STRONG><a name="[404]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPP7DevicesEES5_EC2B6v16000IS5_S5_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>

<P><STRONG><a name="[40f]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPhEES3_EC2B6v16000IRS3_S3_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>

<P><STRONG><a name="[405]"></a>std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__24pairINS_16reverse_iteratorIPhEES3_EC2B6v16000IS3_S3_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>

<P><STRONG><a name="[406]"></a>std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__24pairIP6errorsS2_EC2B6v16000IS2_S2_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&)
</UL>

<P><STRONG><a name="[407]"></a>std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, linmaster.o(.text._ZNSt3__24pairIPP10LinClientsS3_EC2B6v16000IS3_S3_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&)
</UL>

<P><STRONG><a name="[408]"></a>std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__24pairIPP13SystemDevicesS3_EC2B6v16000IS3_S3_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>

<P><STRONG><a name="[409]"></a>std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__24pairIPP7DevicesS3_EC2B6v16000IS3_S3_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&)
</UL>

<P><STRONG><a name="[40a]"></a>std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__24pairIPhS1_EC2B6v16000IS1_S1_LPv0EEEOT_OT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&)
</UL>

<P><STRONG><a name="[3bb]"></a>std::__2::enable_if&lang;is_move_constructible&lang;errors*&rang;::value && is_move_assignable&lang;errors*&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;errors*&rang;(errors*&, errors*&)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__24swapB6v16000IP6errorsEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS4_EE5valueEvE4typeERS4_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::enable_if&lang;is_move_constructible&lang;errors*&rang;::value && is_move_assignable&lang;errors*&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;errors*&rang;(errors*&, errors*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3ca]"></a>std::__2::enable_if&lang;is_move_constructible&lang;LinClients**&rang;::value && is_move_assignable&lang;LinClients**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;LinClients**&rang;(LinClients**&, LinClients**&)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, linmaster.o(.text._ZNSt3__24swapB6v16000IPP10LinClientsEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::enable_if&lang;is_move_constructible&lang;LinClients**&rang;::value && is_move_assignable&lang;LinClients**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;LinClients**&rang;(LinClients**&, LinClients**&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3d5]"></a>std::__2::enable_if&lang;is_move_constructible&lang;SystemDevices**&rang;::value && is_move_assignable&lang;SystemDevices**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;SystemDevices**&rang;(SystemDevices**&, SystemDevices**&)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__24swapB6v16000IPP13SystemDevicesEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::enable_if&lang;is_move_constructible&lang;SystemDevices**&rang;::value && is_move_assignable&lang;SystemDevices**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;SystemDevices**&rang;(SystemDevices**&, SystemDevices**&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3e3]"></a>std::__2::enable_if&lang;is_move_constructible&lang;Devices**&rang;::value && is_move_assignable&lang;Devices**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;Devices**&rang;(Devices**&, Devices**&)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__24swapB6v16000IPP7DevicesEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS5_EE5valueEvE4typeERS5_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::enable_if&lang;is_move_constructible&lang;Devices**&rang;::value && is_move_assignable&lang;Devices**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;Devices**&rang;(Devices**&, Devices**&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3f6]"></a>std::__2::enable_if&lang;is_move_constructible&lang;unsigned char*&rang;::value && is_move_assignable&lang;unsigned char*&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;unsigned char*&rang;(unsigned char*&, unsigned char*&)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__24swapB6v16000IPhEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS3_EE5valueEvE4typeERS3_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::enable_if&lang;is_move_constructible&lang;unsigned char*&rang;::value && is_move_assignable&lang;unsigned char*&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;unsigned char*&rang;(unsigned char*&, unsigned char*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
</UL>

<P><STRONG><a name="[3a6]"></a>std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)</STRONG> (Thumb, 210 bytes, Stack size 168 bytes, errormanager.o(.text._ZNSt3__26__moveB6v16000INS_17_ClassicAlgPolicyENS_16reverse_iteratorIP6errorsEES5_S5_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS7_S9_EEE4typeES7_S8_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;errors*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[3a7]"></a>std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)</STRONG> (Thumb, 210 bytes, Stack size 168 bytes, linmaster.o(.text._ZNSt3__26__moveB6v16000INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPP10LinClientsEES6_S6_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS8_SA_EEE4typeES8_S9_SA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[3a8]"></a>std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)</STRONG> (Thumb, 210 bytes, Stack size 168 bytes, arvi-main.o(.text._ZNSt3__26__moveB6v16000INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPP13SystemDevicesEES6_S6_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS8_SA_EEE4typeES8_S9_SA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[3a9]"></a>std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)</STRONG> (Thumb, 210 bytes, Stack size 168 bytes, comunicationmanager.o(.text._ZNSt3__26__moveB6v16000INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPP7DevicesEES6_S6_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS8_SA_EEE4typeES8_S9_SA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;Devices**&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[3aa]"></a>std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)</STRONG> (Thumb, 210 bytes, Stack size 168 bytes, linclients.o(.text._ZNSt3__26__moveB6v16000INS_17_ClassicAlgPolicyENS_16reverse_iteratorIPhEES4_S4_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS6_S8_EEE4typeES6_S7_S8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__rewrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;::__unwrap(std::declval&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::__unwrap_iter_impl&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, false&rang;, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[3ac]"></a>std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*)</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, errormanager.o(.text._ZNSt3__26__moveB6v16000INS_17_ClassicAlgPolicyEP6errorsS3_S3_EENS_9enable_ifIXaaaasr21is_copy_constructibleIT0_EE5valuesr21is_copy_constructibleIT1_EE5valuesr21is_copy_constructibleIT2_EE5valueENS_4pairIS5_S7_EEE4typeES5_S6_S7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__rewrap_iter[abi:v16000]&lang;errors*, errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;&rang;(errors*, errors*)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(std::__2::__unwrap_iter_impl&lang;errors*, true&rang;::__unwrap(std::declval&lang;errors*&rang;())) std::__2::__unwrap_iter[abi:v16000]&lang;errors*, std::__2::__unwrap_iter_impl&lang;errors*, true&rang;, 0&rang;(errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::move[abi:v16000]&lang;errors*, errors*&rang;(errors*, errors*, errors*)
</UL>

<P><STRONG><a name="[3b2]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__destruct_at_end[abi:v16000](errors*)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE17__destruct_at_endB6v16000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__destruct_at_end[abi:v16000](errors*) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() const &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() const &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__invalidate_iterators_past[abi:v16000](errors*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_shrink[abi:v16000](unsigned int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
</UL>

<P><STRONG><a name="[3b9]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&, unsigned int)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE21_ConstructTransactionC2B6v16000ERS4_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&)
</UL>

<P><STRONG><a name="[3ba]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE21_ConstructTransactionD2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&)
</UL>

<P><STRONG><a name="[3b5]"></a>void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;errors&rang;&)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::construct[abi:v16000]&lang;errors, errors const&, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*, errors const&)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&)
</UL>

<P><STRONG><a name="[3b4]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE22__base_destruct_at_endB6v16000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::destroy[abi:v16000]&lang;errors, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__destruct_at_end[abi:v16000](errors*)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__clear[abi:v16000]()
</UL>

<P><STRONG><a name="[3b8]"></a>void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&)</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE22__construct_one_at_endB6v16000IJRKS1_EEEvDpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::construct[abi:v16000]&lang;errors, errors const&, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*, errors const&) &rArr; void std::__2::allocator&lang;errors&rang;::construct[abi:v16000]&lang;errors, errors const&&rang;(errors*, errors const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::construct[abi:v16000]&lang;errors, errors const&, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*, errors const&)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&, unsigned int)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::__to_address[abi:v16000]&lang;errors&rang;(errors*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&)
</UL>

<P><STRONG><a name="[3b7]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_move_constructible&lang;errors*&rang;::value && is_move_assignable&lang;errors*&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;errors*&rang;(errors*&, errors*&)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang;::base[abi:v16000]() const
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;errors*&rang;::reverse_iterator__sub_object[abi:v16000](errors*)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
</UL>

<P><STRONG><a name="[3b3]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__invalidate_iterators_past[abi:v16000](errors*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE27__invalidate_iterators_pastB6v16000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__invalidate_iterators_past[abi:v16000](errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__destruct_at_end[abi:v16000](errors*)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
</UL>

<P><STRONG><a name="[227]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE5beginB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::begin[abi:v16000]() &rArr; std::__2::__wrap_iter&lang;errors*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors*)
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getError()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
</UL>

<P><STRONG><a name="[22a]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE5eraseB6v16000ENS_11__wrap_iterIPKS1_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;) &rArr; errors* std::__2::move[abi:v16000]&lang;errors*, errors*&rang;(errors*, errors*, errors*) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors*&rang;::__wrap_iter__sub_object[abi:v16000](void const*, errors*)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__invalidate_iterators_past[abi:v16000](errors*)
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__destruct_at_end[abi:v16000](errors*)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;errors* std::__2::move[abi:v16000]&lang;errors*, errors*&rang;(errors*, errors*, errors*)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decltype(fp.base() - fp0.base()) std::__2::operator-[abi:v16000]&lang;errors const*, errors const*&rang;(std::__2::__wrap_iter&lang;errors const*&rang; const&, std::__2::__wrap_iter&lang;errors const*&rang; const&)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::cbegin[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getError()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
</UL>

<P><STRONG><a name="[3b6]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3c0]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE7__clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__clear[abi:v16000]() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__base_destruct_at_end[abi:v16000](errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3bc]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;errors*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&)
</UL>

<P><STRONG><a name="[22b]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEE9push_backB6v16000ERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;errors const&&rang;(errors const&)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getError()
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::addError(short, short)
</UL>

<P><STRONG><a name="[3c1]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::vector__sub_object[abi:v16000]()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[6c]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEED2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::~vector__sub_object[abi:v16000]() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;errors&rang;&, errors*, unsigned int) &rArr; std::__2::allocator&lang;errors&rang;::deallocate[abi:v16000](errors*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;errors&rang;&, errors*, unsigned int)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__clear[abi:v16000]()
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;&rang;(std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;*)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> errormanager.o(.text.__cxx_global_var_init)
</UL>
<P><STRONG><a name="[226]"></a>std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::operator[][abi:v16000](unsigned int)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, errormanager.o(.text._ZNSt3__26vectorI6errorsNS_9allocatorIS1_EEEixB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::getError()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::cleanError(short, short)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Errors::errorExists(short, short)
</UL>

<P><STRONG><a name="[3c8]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&, unsigned int)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE21_ConstructTransactionC2B6v16000ERS5_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[3c9]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE21_ConstructTransactionD2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[3c4]"></a>void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&) &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;LinClients*&rang;&)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**, LinClients* const&)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::push_back[abi:v16000](LinClients* const&)
</UL>

<P><STRONG><a name="[3c7]"></a>void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&)</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE22__construct_one_at_endB6v16000IJRKS2_EEEvDpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**, LinClients* const&) &rArr; void std::__2::allocator&lang;LinClients*&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&&rang;(LinClients**, LinClients* const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**, LinClients* const&)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients** std::__2::__to_address[abi:v16000]&lang;LinClients*&rang;(LinClients**)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::push_back[abi:v16000](LinClients* const&)
</UL>

<P><STRONG><a name="[3c6]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&rang;(std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;*)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_move_constructible&lang;LinClients**&rang;::value && is_move_assignable&lang;LinClients**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;LinClients**&rang;(LinClients**&, LinClients**&)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang;::base[abi:v16000]() const
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;LinClients**&rang;::reverse_iterator__sub_object[abi:v16000](LinClients**)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[3c5]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&)
</UL>

<P><STRONG><a name="[3cb]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;LinClients**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::push_back[abi:v16000](LinClients* const&)
</UL>

<P><STRONG><a name="[231]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::push_back[abi:v16000](LinClients* const&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEE9push_backB6v16000ERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::push_back[abi:v16000](LinClients* const&) &rArr; void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&) &rArr; std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::reverse_iterator&lang;LinClients**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__push_back_slow_path&lang;LinClients* const&&rang;(LinClients* const&)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;LinClients* const&&rang;(LinClients* const&)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::addClient(LinClients*)
</UL>

<P><STRONG><a name="[232]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::vector__sub_object[abi:v16000]()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;LinClients*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;LinClients*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;&rang;(std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;*)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;LinClients**, std::__2::allocator&lang;LinClients*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::LinMaster()
</UL>

<P><STRONG><a name="[230]"></a>std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::operator[][abi:v16000](unsigned int)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, linmaster.o(.text._ZNSt3__26vectorIP10LinClientsNS_9allocatorIS2_EEEixB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::vector&lang;LinClients*, std::__2::allocator&lang;LinClients*&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinMaster::processInfoFrame(unsigned char*)
</UL>

<P><STRONG><a name="[3d3]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&, unsigned int)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE21_ConstructTransactionC2B6v16000ERS5_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[3d4]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE21_ConstructTransactionD2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[3ce]"></a>void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&) &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;SystemDevices*&rang;&)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, SystemDevices*&&)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::push_back[abi:v16000](SystemDevices*&&)
</UL>

<P><STRONG><a name="[3d1]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__base_destruct_at_end[abi:v16000](SystemDevices**)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE22__base_destruct_at_endB6v16000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__base_destruct_at_end[abi:v16000](SystemDevices**) &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::destroy[abi:v16000]&lang;SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__clear[abi:v16000]()
</UL>

<P><STRONG><a name="[3d2]"></a>void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&)</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE22__construct_one_at_endB6v16000IJS2_EEEvDpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, SystemDevices*&&) &rArr; void std::__2::allocator&lang;SystemDevices*&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*&rang;(SystemDevices**, SystemDevices*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, SystemDevices*&&)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&, unsigned int)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemDevices** std::__2::__to_address[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices**)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::push_back[abi:v16000](SystemDevices*&&)
</UL>

<P><STRONG><a name="[3d0]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_move_constructible&lang;SystemDevices**&rang;::value && is_move_assignable&lang;SystemDevices**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;SystemDevices**&rang;(SystemDevices**&, SystemDevices**&)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang;::base[abi:v16000]() const
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;SystemDevices**&rang;::reverse_iterator__sub_object[abi:v16000](SystemDevices**)
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]()
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
</UL>

<P><STRONG><a name="[1f8]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::end[abi:v16000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE3endB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::end[abi:v16000]() &rArr; std::__2::__wrap_iter&lang;SystemDevices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;SystemDevices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devicesState()
</UL>

<P><STRONG><a name="[1f7]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::begin[abi:v16000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE5beginB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::begin[abi:v16000]() &rArr; std::__2::__wrap_iter&lang;SystemDevices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, SystemDevices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;SystemDevices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devicesState()
</UL>

<P><STRONG><a name="[3cf]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__base_destruct_at_end[abi:v16000](SystemDevices**)
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3d9]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE7__clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__clear[abi:v16000]() &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__base_destruct_at_end[abi:v16000](SystemDevices**) &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__base_destruct_at_end[abi:v16000](SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3d6]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;SystemDevices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::push_back[abi:v16000](SystemDevices*&&)
</UL>

<P><STRONG><a name="[1e5]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::push_back[abi:v16000](SystemDevices*&&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEE9push_backB6v16000EOS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::push_back[abi:v16000](SystemDevices*&&) &rArr; void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&) &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::reverse_iterator&lang;SystemDevices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__push_back_slow_path&lang;SystemDevices*&rang;(SystemDevices*&&)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;SystemDevices*&rang;(SystemDevices*&&)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
</UL>

<P><STRONG><a name="[3da]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::vector__sub_object[abi:v16000]()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[6a]"></a>std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, arvi-main.o(.text._ZNSt3__26vectorIP13SystemDevicesNS_9allocatorIS2_EEED2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::~vector__sub_object[abi:v16000]() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, unsigned int) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::deallocate[abi:v16000](SystemDevices**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, unsigned int)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__clear[abi:v16000]()
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;&rang;(std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;*)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arvi-main.o(.text.__cxx_global_var_init)
</UL>
<P><STRONG><a name="[3e1]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&, unsigned int)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE21_ConstructTransactionC2B6v16000ERS5_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[3e2]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE21_ConstructTransactionD2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[3dd]"></a>void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&) &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;Devices*&rang;&)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**, Devices* const&)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::push_back[abi:v16000](Devices* const&)
</UL>

<P><STRONG><a name="[3e0]"></a>void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&)</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE22__construct_one_at_endB6v16000IJRKS2_EEEvDpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**, Devices* const&) &rArr; void std::__2::allocator&lang;Devices*&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&&rang;(Devices**, Devices* const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**, Devices* const&)
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devices** std::__2::__to_address[abi:v16000]&lang;Devices*&rang;(Devices**)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::push_back[abi:v16000](Devices* const&)
</UL>

<P><STRONG><a name="[3df]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&rang;(std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;*)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_move_constructible&lang;Devices**&rang;::value && is_move_assignable&lang;Devices**&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;Devices**&rang;(Devices**&, Devices**&)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang;::base[abi:v16000]() const
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;Devices**&rang;::reverse_iterator__sub_object[abi:v16000](Devices**)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[215]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::end[abi:v16000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE3endB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::end[abi:v16000]() &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;Devices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::getTopicState(unsigned char)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::processTopic(unsigned char*)
</UL>

<P><STRONG><a name="[214]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::begin[abi:v16000]()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE5beginB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::begin[abi:v16000]() &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, Devices**)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;Devices**&rang;::__wrap_iter__sub_object[abi:v16000](void const*, Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::getTopicState(unsigned char)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::processTopic(unsigned char*)
</UL>

<P><STRONG><a name="[3de]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&)
</UL>

<P><STRONG><a name="[3e4]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;Devices**, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&)
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::push_back[abi:v16000](Devices* const&)
</UL>

<P><STRONG><a name="[212]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::push_back[abi:v16000](Devices* const&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEE9push_backB6v16000ERKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::push_back[abi:v16000](Devices* const&) &rArr; void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&) &rArr; std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::reverse_iterator&lang;Devices**&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;) &rArr; std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__push_back_slow_path&lang;Devices* const&&rang;(Devices* const&)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;Devices* const&&rang;(Devices* const&)
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::addClients(Devices*)
</UL>

<P><STRONG><a name="[21c]"></a>std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;::vector__sub_object[abi:v16000]()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__26vectorIP7DevicesNS_9allocatorIS2_EEEC2B6v16000Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;&rang;(std::__2::vector&lang;Devices*, std::__2::allocator&lang;Devices*&rang;&rang;*)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;Devices**, std::__2::allocator&lang;Devices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::CommunicationManager()
</UL>

<P><STRONG><a name="[3e8]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__base_destruct_at_end[abi:v16000](unsigned char**)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, canattender.o(.text._ZNSt3__26vectorIPhNS_9allocatorIS1_EEE22__base_destruct_at_endB6v16000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__base_destruct_at_end[abi:v16000](unsigned char**) &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::destroy[abi:v16000]&lang;unsigned char*, void&rang;(std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char** std::__2::__to_address[abi:v16000]&lang;unsigned char*&rang;(unsigned char**)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__alloc[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__clear[abi:v16000]()
</UL>

<P><STRONG><a name="[3e9]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, canattender.o(.text._ZNSt3__26vectorIPhNS_9allocatorIS1_EEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__base_destruct_at_end[abi:v16000](unsigned char**)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3ea]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__clear[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, canattender.o(.text._ZNSt3__26vectorIPhNS_9allocatorIS1_EEE7__clearB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__clear[abi:v16000]() &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__base_destruct_at_end[abi:v16000](unsigned char**) &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__base_destruct_at_end[abi:v16000](unsigned char**)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()
</UL>

<P><STRONG><a name="[3eb]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::vector__sub_object[abi:v16000]()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, canattender.o(.text._ZNSt3__26vectorIPhNS_9allocatorIS1_EEEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;&rang;(std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;*)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[6b]"></a>std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]()</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, canattender.o(.text._ZNSt3__26vectorIPhNS_9allocatorIS1_EEED2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::~vector__sub_object[abi:v16000]() &rArr; std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**, unsigned int) &rArr; std::__2::allocator&lang;unsigned char*&rang;::deallocate[abi:v16000](unsigned char**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**, unsigned int)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::capacity[abi:v16000]() const
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__clear[abi:v16000]()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_erase_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;&rang;(std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;*)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::__annotate_delete[abi:v16000]() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canattender.o(.text.__cxx_global_var_init)
</UL>
<P><STRONG><a name="[3f3]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&, unsigned int)</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE21_ConstructTransactionC2B6v16000ERS3_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[3f4]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE21_ConstructTransactionD2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[3ee]"></a>void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE21__push_back_slow_pathIRKhEEvOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char const&)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&)
</UL>

<P><STRONG><a name="[3f1]"></a>void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE21__push_back_slow_pathIhEEvOT_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::~__split_buffer__sub_object()
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__split_buffer__sub_object(unsigned int, unsigned int, std::__2::allocator&lang;unsigned char&rang;&)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__recommend[abi:v16000](unsigned int) const
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char&&)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::size[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char&&)
</UL>

<P><STRONG><a name="[3f2]"></a>void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&)</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE22__construct_one_at_endB6v16000IJRKhEEEvDpOT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&) &rArr; void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char const&) &rArr; void std::__2::allocator&lang;unsigned char&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&&rang;(unsigned char*, unsigned char const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char const&)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&)
</UL>

<P><STRONG><a name="[3f5]"></a>void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char&rang;(unsigned char&&)</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE22__construct_one_at_endB6v16000IJhEEEvDpOT_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::~_ConstructTransaction__sub_object[abi:v16000]()
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char&&)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned char* std::__2::__to_address[abi:v16000]&lang;unsigned char&rang;(unsigned char*)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::_ConstructTransaction::_ConstructTransaction__sub_object[abi:v16000](std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char&&)
</UL>

<P><STRONG><a name="[3f0]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_invalidate_all[abi:v16000]&lang;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&rang;(std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;*)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_new[abi:v16000](unsigned int) const
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_move_constructible&lang;unsigned char*&rang;::value && is_move_assignable&lang;unsigned char*&rang;::value, void&rang;::type std::__2::swap[abi:v16000]&lang;unsigned char*&rang;(unsigned char*&, unsigned char*&)
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang;::base[abi:v16000]() const
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::reverse_iterator&lang;unsigned char*&rang;::reverse_iterator__sub_object[abi:v16000](unsigned char*)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__annotate_delete[abi:v16000]() const
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;::__end_cap[abi:v16000]()
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]()
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::size[abi:v16000]() const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[3ef]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE7__allocB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__alloc[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::second[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char&rang;(unsigned char&&)
</UL>

<P><STRONG><a name="[3f7]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE9__end_capB6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]() &rArr; std::__2::__compressed_pair_elem&lang;unsigned char*, 0, false&rang;::__get[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::first[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&)
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char&&)
</UL>

<P><STRONG><a name="[20b]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char&&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE9push_backB6v16000EOh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char&rang;(unsigned char&&)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char&rang;(unsigned char&&)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::LinClients()
</UL>

<P><STRONG><a name="[208]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEE9push_backB6v16000ERKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__construct_one_at_end[abi:v16000]&lang;unsigned char const&&rang;(unsigned char const&)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__end_cap[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::setIdInfo(unsigned char)
</UL>

<P><STRONG><a name="[20a]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::vector__sub_object[abi:v16000]()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEEC2B6v16000Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__debug_db_insert_c[abi:v16000]&lang;std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;&rang;(std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;*)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair&lang;unsigned char*, std::__2::allocator&lang;unsigned char&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::LinClients()
</UL>

<P><STRONG><a name="[206]"></a>std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::operator[][abi:v16000](unsigned int)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, linclients.o(.text._ZNSt3__26vectorIhNS_9allocatorIhEEEixB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::operator[][abi:v16000](unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LinClients::verifyIdInfo(unsigned char)
</UL>

<P><STRONG><a name="[331]"></a>std::__2::allocator&lang;errors&rang;::deallocate[abi:v16000](errors*, unsigned int)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__29allocatorI6errorsE10deallocateB6v16000EPS1_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__2::allocator&lang;errors&rang;::deallocate[abi:v16000](errors*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;errors&rang;&, errors*, unsigned int)
</UL>

<P><STRONG><a name="[332]"></a>std::__2::allocator&lang;errors&rang;::destroy[abi:v16000](errors*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, errormanager.o(.text._ZNSt3__29allocatorI6errorsE7destroyB6v16000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::allocator&lang;errors&rang;::destroy[abi:v16000](errors*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::destroy[abi:v16000]&lang;errors, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*)
</UL>

<P><STRONG><a name="[386]"></a>std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__29allocatorI6errorsE8allocateB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v16000]()
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, void&rang;(std::__2::allocator&lang;errors&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;&rang;(std::__2::allocator&lang;errors&rang;&, unsigned int)
</UL>

<P><STRONG><a name="[335]"></a>void std::__2::allocator&lang;errors&rang;::construct[abi:v16000]&lang;errors, errors const&&rang;(errors*, errors const&)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, errormanager.o(.text._ZNSt3__29allocatorI6errorsE9constructB6v16000IS1_JRKS1_EEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void std::__2::allocator&lang;errors&rang;::construct[abi:v16000]&lang;errors, errors const&&rang;(errors*, errors const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;errors&rang;&rang;::construct[abi:v16000]&lang;errors, errors const&, void&rang;(std::__2::allocator&lang;errors&rang;&, errors*, errors const&)
</UL>

<P><STRONG><a name="[38f]"></a>std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__29allocatorI6errorsEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[336]"></a>std::__2::allocator&lang;LinClients*&rang;::deallocate[abi:v16000](LinClients**, unsigned int)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__29allocatorIP10LinClientsE10deallocateB6v16000EPS2_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__2::allocator&lang;LinClients*&rang;::deallocate[abi:v16000](LinClients**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;LinClients*&rang;&, LinClients**, unsigned int)
</UL>

<P><STRONG><a name="[337]"></a>std::__2::allocator&lang;LinClients*&rang;::destroy[abi:v16000](LinClients**)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, linmaster.o(.text._ZNSt3__29allocatorIP10LinClientsE7destroyB6v16000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::allocator&lang;LinClients*&rang;::destroy[abi:v16000](LinClients**)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::destroy[abi:v16000]&lang;LinClients*, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**)
</UL>

<P><STRONG><a name="[387]"></a>std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, linmaster.o(.text._ZNSt3__29allocatorIP10LinClientsE8allocateB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v16000]()
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;, void&rang;(std::__2::allocator&lang;LinClients*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;LinClients*&rang;&rang;(std::__2::allocator&lang;LinClients*&rang;&, unsigned int)
</UL>

<P><STRONG><a name="[33a]"></a>void std::__2::allocator&lang;LinClients*&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&&rang;(LinClients**, LinClients* const&)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, linmaster.o(.text._ZNSt3__29allocatorIP10LinClientsE9constructB6v16000IS2_JRKS2_EEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void std::__2::allocator&lang;LinClients*&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&&rang;(LinClients**, LinClients* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;LinClients*&rang;&rang;::construct[abi:v16000]&lang;LinClients*, LinClients* const&, void&rang;(std::__2::allocator&lang;LinClients*&rang;&, LinClients**, LinClients* const&)
</UL>

<P><STRONG><a name="[390]"></a>std::__2::allocator&lang;LinClients*&rang;::allocator__sub_object[abi:v16000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__29allocatorIP10LinClientsEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::allocator&lang;LinClients*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;LinClients*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;LinClients*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;LinClients*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[33b]"></a>std::__2::allocator&lang;SystemDevices*&rang;::deallocate[abi:v16000](SystemDevices**, unsigned int)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__29allocatorIP13SystemDevicesE10deallocateB6v16000EPS2_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__2::allocator&lang;SystemDevices*&rang;::deallocate[abi:v16000](SystemDevices**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, unsigned int)
</UL>

<P><STRONG><a name="[33c]"></a>std::__2::allocator&lang;SystemDevices*&rang;::destroy[abi:v16000](SystemDevices**)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, arvi-main.o(.text._ZNSt3__29allocatorIP13SystemDevicesE7destroyB6v16000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::allocator&lang;SystemDevices*&rang;::destroy[abi:v16000](SystemDevices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::destroy[abi:v16000]&lang;SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**)
</UL>

<P><STRONG><a name="[388]"></a>std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__29allocatorIP13SystemDevicesE8allocateB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v16000]()
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;, void&rang;(std::__2::allocator&lang;SystemDevices*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, unsigned int)
</UL>

<P><STRONG><a name="[33f]"></a>void std::__2::allocator&lang;SystemDevices*&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*&rang;(SystemDevices**, SystemDevices*&&)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, arvi-main.o(.text._ZNSt3__29allocatorIP13SystemDevicesE9constructB6v16000IS2_JS2_EEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void std::__2::allocator&lang;SystemDevices*&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*&rang;(SystemDevices**, SystemDevices*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;SystemDevices*&rang;&rang;::construct[abi:v16000]&lang;SystemDevices*, SystemDevices*, void&rang;(std::__2::allocator&lang;SystemDevices*&rang;&, SystemDevices**, SystemDevices*&&)
</UL>

<P><STRONG><a name="[391]"></a>std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__29allocatorIP13SystemDevicesEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[340]"></a>std::__2::allocator&lang;Devices*&rang;::deallocate[abi:v16000](Devices**, unsigned int)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__29allocatorIP7DevicesE10deallocateB6v16000EPS2_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__2::allocator&lang;Devices*&rang;::deallocate[abi:v16000](Devices**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;Devices*&rang;&, Devices**, unsigned int)
</UL>

<P><STRONG><a name="[341]"></a>std::__2::allocator&lang;Devices*&rang;::destroy[abi:v16000](Devices**)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, comunicationmanager.o(.text._ZNSt3__29allocatorIP7DevicesE7destroyB6v16000EPS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::allocator&lang;Devices*&rang;::destroy[abi:v16000](Devices**)
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::destroy[abi:v16000]&lang;Devices*, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**)
</UL>

<P><STRONG><a name="[389]"></a>std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int)</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__29allocatorIP7DevicesE8allocateB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v16000]()
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;, void&rang;(std::__2::allocator&lang;Devices*&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;Devices*&rang;&rang;(std::__2::allocator&lang;Devices*&rang;&, unsigned int)
</UL>

<P><STRONG><a name="[344]"></a>void std::__2::allocator&lang;Devices*&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&&rang;(Devices**, Devices* const&)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, comunicationmanager.o(.text._ZNSt3__29allocatorIP7DevicesE9constructB6v16000IS2_JRKS2_EEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void std::__2::allocator&lang;Devices*&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&&rang;(Devices**, Devices* const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;Devices*&rang;&rang;::construct[abi:v16000]&lang;Devices*, Devices* const&, void&rang;(std::__2::allocator&lang;Devices*&rang;&, Devices**, Devices* const&)
</UL>

<P><STRONG><a name="[392]"></a>std::__2::allocator&lang;Devices*&rang;::allocator__sub_object[abi:v16000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__29allocatorIP7DevicesEC2B6v16000Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;Devices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;Devices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[346]"></a>std::__2::allocator&lang;unsigned char*&rang;::deallocate[abi:v16000](unsigned char**, unsigned int)</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, canattender.o(.text._ZNSt3__29allocatorIPhE10deallocateB6v16000EPS1_j))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__2::allocator&lang;unsigned char*&rang;::deallocate[abi:v16000](unsigned char**, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**, unsigned int)
</UL>

<P><STRONG><a name="[348]"></a>std::__2::allocator&lang;unsigned char*&rang;::destroy[abi:v16000](unsigned char**)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, canattender.o(.text._ZNSt3__29allocatorIPhE7destroyB6v16000EPS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::allocator&lang;unsigned char*&rang;::destroy[abi:v16000](unsigned char**)
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char*&rang;&rang;::destroy[abi:v16000]&lang;unsigned char*, void&rang;(std::__2::allocator&lang;unsigned char*&rang;&, unsigned char**)
</UL>

<P><STRONG><a name="[393]"></a>std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, canattender.o(.text._ZNSt3__29allocatorIPhEC2B6v16000Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[349]"></a>std::__2::allocator&lang;unsigned char&rang;::deallocate[abi:v16000](unsigned char*, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__29allocatorIhE10deallocateB6v16000EPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = std::__2::allocator&lang;unsigned char&rang;::deallocate[abi:v16000](unsigned char*, unsigned int) &rArr; std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int) &rArr; void std::__2::__do_deallocate_handle_size[abi:v16000]&lang;std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_deallocate[abi:v16000](void*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::deallocate[abi:v16000](std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned int)
</UL>

<P><STRONG><a name="[34a]"></a>std::__2::allocator&lang;unsigned char&rang;::destroy[abi:v16000](unsigned char*)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, linclients.o(.text._ZNSt3__29allocatorIhE7destroyB6v16000EPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__2::allocator&lang;unsigned char&rang;::destroy[abi:v16000](unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::destroy[abi:v16000]&lang;unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*)
</UL>

<P><STRONG><a name="[38a]"></a>std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, linclients.o(.text._ZNSt3__29allocatorIhE8allocateB6v16000Ej))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int) &rArr; std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int) &rArr; void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t) &rArr; operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__libcpp_allocate[abi:v16000](unsigned int, unsigned int)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__throw_bad_array_new_length[abi:v16000]()
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unsigned int std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::max_size[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, void&rang;(std::__2::allocator&lang;unsigned char&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__allocation_result&lang;std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::pointer&rang; std::__2::__allocate_at_least[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned int)
</UL>

<P><STRONG><a name="[34d]"></a>void std::__2::allocator&lang;unsigned char&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&&rang;(unsigned char*, unsigned char const&)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__29allocatorIhE9constructB6v16000IhJRKhEEEvPT_DpOT0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = void std::__2::allocator&lang;unsigned char&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&&rang;(unsigned char*, unsigned char const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char const&, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char const&)
</UL>

<P><STRONG><a name="[34f]"></a>void std::__2::allocator&lang;unsigned char&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char&rang;(unsigned char*, unsigned char&&)</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, linclients.o(.text._ZNSt3__29allocatorIhE9constructB6v16000IhJhEEEvPT_DpOT0_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::allocator_traits&lang;std::__2::allocator&lang;unsigned char&rang;&rang;::construct[abi:v16000]&lang;unsigned char, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, unsigned char*, unsigned char&&)
</UL>

<P><STRONG><a name="[394]"></a>std::__2::allocator&lang;unsigned char&rang;::allocator__sub_object[abi:v16000]()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__29allocatorIhEC2B6v16000Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag)
</UL>

<P><STRONG><a name="[3ad]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__29make_pairB6v16000INS_16reverse_iteratorIP6errorsEES4_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[3ae]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__29make_pairB6v16000INS_16reverse_iteratorIPP10LinClientsEES5_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[3af]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__29make_pairB6v16000INS_16reverse_iteratorIPP13SystemDevicesEES5_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[3b0]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__29make_pairB6v16000INS_16reverse_iteratorIPP7DevicesEES5_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[3b1]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__29make_pairB6v16000INS_16reverse_iteratorIPhEES3_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[2a8]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__29make_pairB6v16000IP6errorsS2_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS4_IT0_E4typeEEEOS5_OS8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::enable_if&lang;is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value && is_copy_constructible&lang;errors*&rang;::value, std::__2::pair&lang;errors*, errors*&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, errors*&rang;(errors*, errors*, errors*)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*)
</UL>

<P><STRONG><a name="[2ab]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__29make_pairB6v16000IPP10LinClientsS3_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type, std::__2::__unwrap_ref_decay&lang;LinClients**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;LinClients**, LinClients**&rang;(LinClients**&&, LinClients**&&) &rArr; std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;LinClients**, LinClients**&rang;::pair__sub_object[abi:v16000]&lang;LinClients**, LinClients**, (void*)0&rang;(LinClients**&&, LinClients**&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;LinClients**, LinClients**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients*, LinClients*, void&rang;(LinClients**, LinClients**, LinClients**)
</UL>

<P><STRONG><a name="[2ad]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__29make_pairB6v16000IPP13SystemDevicesS3_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type, std::__2::__unwrap_ref_decay&lang;SystemDevices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;SystemDevices**, SystemDevices**&rang;(SystemDevices**&&, SystemDevices**&&) &rArr; std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;SystemDevices**, SystemDevices**&rang;::pair__sub_object[abi:v16000]&lang;SystemDevices**, SystemDevices**, (void*)0&rang;(SystemDevices**&&, SystemDevices**&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;SystemDevices**, SystemDevices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices*, SystemDevices*, void&rang;(SystemDevices**, SystemDevices**, SystemDevices**)
</UL>

<P><STRONG><a name="[2b5]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__29make_pairB6v16000IPP7DevicesS3_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type, std::__2::__unwrap_ref_decay&lang;Devices**&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;Devices**, Devices**&rang;(Devices**&&, Devices**&&) &rArr; std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;Devices**, Devices**&rang;::pair__sub_object[abi:v16000]&lang;Devices**, Devices**, (void*)0&rang;(Devices**&&, Devices**&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;Devices**, Devices**&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices*, Devices*, void&rang;(Devices**, Devices**, Devices**)
</UL>

<P><STRONG><a name="[2cf]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__29make_pairB6v16000IPhS1_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS3_IT0_E4typeEEEOS4_OS7_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*)
</UL>

<P><STRONG><a name="[2b3]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, errormanager.o(.text._ZNSt3__29make_pairB6v16000IRNS_16reverse_iteratorIP6errorsEES4_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;errors*&rang;&, std::__2::reverse_iterator&lang;errors*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;)
</UL>

<P><STRONG><a name="[2bb]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linmaster.o(.text._ZNSt3__29make_pairB6v16000IRNS_16reverse_iteratorIPP10LinClientsEES5_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;&, std::__2::reverse_iterator&lang;LinClients**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, LinClients**, LinClients**, 0&rang;(std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;, std::__2::reverse_iterator&lang;LinClients**&rang;)
</UL>

<P><STRONG><a name="[2c1]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__29make_pairB6v16000IRNS_16reverse_iteratorIPP13SystemDevicesEES5_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;&, std::__2::reverse_iterator&lang;SystemDevices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, SystemDevices**, SystemDevices**, 0&rang;(std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;, std::__2::reverse_iterator&lang;SystemDevices**&rang;)
</UL>

<P><STRONG><a name="[2c7]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__29make_pairB6v16000IRNS_16reverse_iteratorIPP7DevicesEES5_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;Devices**&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;&, std::__2::reverse_iterator&lang;Devices**&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, Devices**, Devices**, 0&rang;(std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;, std::__2::reverse_iterator&lang;Devices**&rang;)
</UL>

<P><STRONG><a name="[2ce]"></a>std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, linclients.o(.text._ZNSt3__29make_pairB6v16000IRNS_16reverse_iteratorIPhEES3_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&&rang;::type, std::__2::__unwrap_ref_decay&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::pair__sub_object[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, (void*)0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;&&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;)
</UL>

<P><STRONG><a name="[410]"></a>bool std::__2::operator==[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, arvi-main.o(.text._ZNSt3__2eqB6v16000IPP13SystemDevicesEEbRKNS_11__wrap_iterIT_EES8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bool std::__2::operator==[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;SystemDevices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;SystemDevices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&)
</UL>

<P><STRONG><a name="[412]"></a>bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, comunicationmanager.o(.text._ZNSt3__2eqB6v16000IPP7DevicesEEbRKNS_11__wrap_iterIT_EES8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&)
</UL>

<P><STRONG><a name="[3bf]"></a>decltype(fp.base() - fp0.base()) std::__2::operator-[abi:v16000]&lang;errors const*, errors const*&rang;(std::__2::__wrap_iter&lang;errors const*&rang; const&, std::__2::__wrap_iter&lang;errors const*&rang; const&)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, errormanager.o(.text._ZNSt3__2miB6v16000IPK6errorsS3_EEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_11__wrap_iterIT_EERKNS5_IT0_EE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = decltype(fp.base() - fp0.base()) std::__2::operator-[abi:v16000]&lang;errors const*, errors const*&rang;(std::__2::__wrap_iter&lang;errors const*&rang; const&, std::__2::__wrap_iter&lang;errors const*&rang; const&) &rArr; std::__2::__wrap_iter&lang;errors const*&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::__wrap_iter&lang;errors const*&rang;::base[abi:v16000]() const
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::erase[abi:v16000](std::__2::__wrap_iter&lang;errors const*&rang;)
</UL>

<P><STRONG><a name="[1f9]"></a>bool std::__2::operator!=[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, arvi-main.o(.text._ZNSt3__2neB6v16000IPP13SystemDevicesEEbRKNS_11__wrap_iterIT_EES8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bool std::__2::operator!=[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;SystemDevices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator==[abi:v16000]&lang;SystemDevices**&rang;(std::__2::__wrap_iter&lang;SystemDevices**&rang; const&, std::__2::__wrap_iter&lang;SystemDevices**&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;devicesState()
</UL>

<P><STRONG><a name="[216]"></a>bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, comunicationmanager.o(.text._ZNSt3__2neB6v16000IPP7DevicesEEbRKNS_11__wrap_iterIT_EES8_))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bool std::__2::operator!=[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&) &rArr; std::__2::__wrap_iter&lang;Devices**&rang;::base[abi:v16000]() const
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool std::__2::operator==[abi:v16000]&lang;Devices**&rang;(std::__2::__wrap_iter&lang;Devices**&rang; const&, std::__2::__wrap_iter&lang;Devices**&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::getTopicState(unsigned char)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommunicationManager::processTopic(unsigned char*)
</UL>

<P><STRONG><a name="[417]"></a>std::get_new_handler()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int, std::align_val_t)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned int)
</UL>

<P><STRONG><a name="[3fa]"></a>std::__throw_bad_array_new_length[abi:v16000]()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arvi-main.o(.text._ZSt28__throw_bad_array_new_lengthB6v16000v))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = std::__throw_bad_array_new_length[abi:v16000]() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;SystemDevices*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;unsigned char&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;LinClients*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;Devices*&rang;::allocate[abi:v16000](unsigned int)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::allocator&lang;errors&rang;::allocate[abi:v16000](unsigned int)
</UL>

<P><STRONG><a name="[a6]"></a>non-virtual thunk to LeisureBattery1::processInfoFrame(unsigned char*)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, leisurebattery1.o(.text._ZThn12_N15LeisureBattery116processInfoFrameEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 708 + Unknown Stack Size
<LI>Call Chain = non-virtual thunk to LeisureBattery1::processInfoFrame(unsigned char*) &rArr; LeisureBattery1::processInfoFrame(unsigned char*) &rArr; Errors::addError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::processInfoFrame(unsigned char*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[72]"></a>non-virtual thunk to GrayWater1::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, graywater_1.o(.text._ZThn8_N10GrayWater111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = non-virtual thunk to GrayWater1::updateState() &rArr; GrayWater1::updateState() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graywater_1.o(.rodata._ZTV10GrayWater1)
</UL>
<P><STRONG><a name="[79]"></a>non-virtual thunk to Multimedia::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, multimedia.o(.text._ZThn8_N10Multimedia11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to Multimedia::updateState() &rArr; Multimedia::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Multimedia::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multimedia.o(.rodata._ZTV10Multimedia)
</UL>
<P><STRONG><a name="[7f]"></a>non-virtual thunk to FreshWater1::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, freshwater_1.o(.text._ZThn8_N11FreshWater111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = non-virtual thunk to FreshWater1::updateState() &rArr; FreshWater1::updateState() &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freshwater_1.o(.rodata._ZTV11FreshWater1)
</UL>
<P><STRONG><a name="[85]"></a>non-virtual thunk to FloorHeating::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, floorheating.o(.text._ZThn8_N12FloorHeating11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to FloorHeating::updateState() &rArr; FloorHeating::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FloorHeating::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> floorheating.o(.rodata._ZTV12FloorHeating)
</UL>
<P><STRONG><a name="[8b]"></a>non-virtual thunk to EmptyingValve::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, emptyingvalve.o(.text._ZThn8_N13EmptyingValve11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to EmptyingValve::updateState() &rArr; EmptyingValve::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmptyingValve::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> emptyingvalve.o(.rodata._ZTV13EmptyingValve)
</UL>
<P><STRONG><a name="[92]"></a>non-virtual thunk to EngineBattery1::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, enginebattery1.o(.text._ZThn8_N14EngineBattery111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = non-virtual thunk to EngineBattery1::updateState() &rArr; EngineBattery1::updateState() &rArr; ArviGet_mV &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EngineBattery1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> enginebattery1.o(.rodata._ZTV14EngineBattery1)
</UL>
<P><STRONG><a name="[98]"></a>non-virtual thunk to ExternalLigths::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, externalligths.o(.text._ZThn8_N14ExternalLigths11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to ExternalLigths::updateState() &rArr; ExternalLigths::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalLigths::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> externalligths.o(.rodata._ZTV14ExternalLigths)
</UL>
<P><STRONG><a name="[9e]"></a>non-virtual thunk to InternalLigths::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, internalligths.o(.text._ZThn8_N14InternalLigths11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to InternalLigths::updateState() &rArr; InternalLigths::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalLigths::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> internalligths.o(.rodata._ZTV14InternalLigths)
</UL>
<P><STRONG><a name="[a5]"></a>non-virtual thunk to LeisureBattery1::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, leisurebattery1.o(.text._ZThn8_N15LeisureBattery111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = non-virtual thunk to LeisureBattery1::updateState() &rArr; LeisureBattery1::updateState() &rArr; Errors::addError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeisureBattery1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> leisurebattery1.o(.rodata._ZTV15LeisureBattery1)
</UL>
<P><STRONG><a name="[ac]"></a>non-virtual thunk to SolarRegulator1::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, solarregulator1.o(.text._ZThn8_N15SolarRegulator111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = non-virtual thunk to SolarRegulator1::updateState() &rArr; SolarRegulator1::updateState() &rArr; ArviGet_mA &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SolarRegulator1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solarregulator1.o(.rodata._ZTV15SolarRegulator1)
</UL>
<P><STRONG><a name="[b2]"></a>non-virtual thunk to Fuses::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, fuses.o(.text._ZThn8_N5Fuses11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = non-virtual thunk to Fuses::updateState() &rArr; Fuses::updateState() &rArr; Errors::addError(short, short) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fuses::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fuses.o(.rodata._ZTV5Fuses)
</UL>
<P><STRONG><a name="[b8]"></a>non-virtual thunk to Fridge::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, fridge.o(.text._ZThn8_N6Fridge11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to Fridge::updateState() &rArr; Fridge::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fridge::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fridge.o(.rodata._ZTV6Fridge)
</UL>
<P><STRONG><a name="[be]"></a>non-virtual thunk to Ligths1::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, ligths_1.o(.text._ZThn8_N7Ligths111updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to Ligths1::updateState() &rArr; Ligths1::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ligths1::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ligths_1.o(.rodata._ZTV7Ligths1)
</UL>
<P><STRONG><a name="[c4]"></a>non-virtual thunk to Inverter::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, inverter.o(.text._ZThn8_N8Inverter11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to Inverter::updateState() &rArr; Inverter::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inverter::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> inverter.o(.rodata._ZTV8Inverter)
</UL>
<P><STRONG><a name="[ca]"></a>non-virtual thunk to WaterPump::updateState()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, waterpump.o(.text._ZThn8_N9WaterPump11updateStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = non-virtual thunk to WaterPump::updateState() &rArr; WaterPump::updateState()
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump::updateState()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waterpump.o(.rodata._ZTV9WaterPump)
</UL>
<P><STRONG><a name="[415]"></a>operator delete(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int)
</UL>

<P><STRONG><a name="[416]"></a>operator delete(void*, std::align_val_t)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPvSt11align_val_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[396]"></a>operator delete(void*, unsigned int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*, unsigned int) &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int&rang;(void*, unsigned int)
</UL>

<P><STRONG><a name="[398]"></a>operator delete(void*, unsigned int, std::align_val_t)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPvjSt11align_val_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*, unsigned int, std::align_val_t) &rArr; operator delete(void*, std::align_val_t) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*, std::align_val_t)
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void std::__2::__libcpp_operator_delete[abi:v16000]&lang;void*, unsigned int, std::align_val_t&rang;(void*, unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[1e3]"></a>operator new(unsigned int)</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, new.cpp.o(.text._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = operator new(unsigned int) &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_new_handler()
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int&rang;(unsigned int)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTopics()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initCommunications()
</UL>

<P><STRONG><a name="[38e]"></a>operator new(unsigned int, std::align_val_t)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, new.cpp.o(.text._ZnwjSt11align_val_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = operator new(unsigned int, std::align_val_t) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_new_handler()
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void* std::__2::__libcpp_operator_new[abi:v16000]&lang;unsigned int, std::align_val_t&rang;(unsigned int, std::align_val_t)
</UL>

<P><STRONG><a name="[8c]"></a>__cxa_pure_virtual</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cxa_virtual.cpp.o(.text.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __cxa_pure_virtual &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Address Reference Count : 2]<UL><LI> devices.o(.rodata._ZTV7Devices)
<LI> airconditioner1.o(.rodata._ZTV13SystemDevices)
</UL>
<P><STRONG><a name="[418]"></a>abort_message</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abort_message.cpp.o(.text.abort_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[106]"></a>main</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1044 + Unknown Stack Size
<LI>Call Chain = main &rArr; Arvi_Setup &rArr; initTopics() &rArr; LeisureBattery1::LeisureBattery1(short) &rArr; LinClients::setIdInfo(unsigned char) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::push_back[abi:v16000](unsigned char const&) &rArr; void std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__push_back_slow_path&lang;unsigned char const&&rang;(unsigned char const&) &rArr; std::__2::vector&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;unsigned char, std::__2::allocator&lang;unsigned char&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;unsigned char&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, unsigned char, void&rang;(std::__2::allocator&lang;unsigned char&rang;&, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::reverse_iterator&lang;unsigned char*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char*, unsigned char*, 0&rang;(std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;, std::__2::reverse_iterator&lang;unsigned char*&rang;) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, unsigned char, unsigned char, void&rang;(unsigned char*, unsigned char*, unsigned char*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type, std::__2::__unwrap_ref_decay&lang;unsigned char*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;unsigned char*, unsigned char*&rang;(unsigned char*&&, unsigned char*&&) &rArr; std::__2::pair&lang;unsigned char*, unsigned char*&rang;::pair__sub_object[abi:v16000]&lang;unsigned char*, unsigned char*, (void*)0&rang;(unsigned char*&&, unsigned char*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Main
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Arvi_Setup
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bios_Init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanMultiplexores
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[134]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[41a]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[419]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[41b]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[41c]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[135]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[136]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[41d]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[138]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[128]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[fd]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_numeric &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[61]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[155]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mA
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mV
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::updateState()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::updateState()
</UL>

<P><STRONG><a name="[41f]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[423]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[480]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)

<P><STRONG><a name="[422]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dneq
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deq
</UL>

<P><STRONG><a name="[481]"></a>__aeabi_cdcmpge</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)

<P><STRONG><a name="[424]"></a>_dcmpge</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgeq
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgr
</UL>

<P><STRONG><a name="[482]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[425]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dls
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dleq
</UL>

<P><STRONG><a name="[483]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[154]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mA
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mV
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::updateState()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::updateState()
</UL>

<P><STRONG><a name="[426]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[421]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[427]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
</UL>

<P><STRONG><a name="[153]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mA
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArviGet_mV
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::topicReceived(unsigned char*)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::updateState()
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::topicReceived(unsigned char*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::updateState()
</UL>

<P><STRONG><a name="[428]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[484]"></a>__aeabi_dcmpeq</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[42a]"></a>_deq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[42b]"></a>_dneq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[200]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::topicReceived(unsigned char*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::topicReceived(unsigned char*)
</UL>

<P><STRONG><a name="[42c]"></a>_dgr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[485]"></a>__aeabi_dcmpge</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[42d]"></a>_dgeq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[1ff]"></a>__aeabi_dcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayWater1::topicReceived(unsigned char*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreshWater1::topicReceived(unsigned char*)
</UL>

<P><STRONG><a name="[42e]"></a>_dleq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[486]"></a>__aeabi_dcmplt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[42f]"></a>_dls</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[429]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[f6]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[487]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[488]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[420]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[d8]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[dc]"></a>_printf_fp_hex</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf2.o(x$fpl$printf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _printf_fp_hex &rArr; _printf_fp_hex_real &rArr; _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1e0]"></a>__cxx_global_var_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, arvi-main.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = __cxx_global_var_init &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::vector__sub_object[abi:v16000]()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_Arvi_Main.cpp
</UL>

<P><STRONG><a name="[cb]"></a>_GLOBAL__sub_I_Arvi_Main.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, arvi-main.o(.text._GLOBAL__sub_I_Arvi_Main.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _GLOBAL__sub_I_Arvi_Main.cpp &rArr; __cxx_global_var_init &rArr; std::__2::vector&lang;SystemDevices*, std::__2::allocator&lang;SystemDevices*&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;SystemDevices**, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;SystemDevices*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;SystemDevices*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;SystemDevices*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arvi-main.o(.init_array)
</UL>
<P><STRONG><a name="[184]"></a>LL_ADC_IsDeepPowerDownEnabled</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_IsDeepPowerDownEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_IsDeepPowerDownEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[185]"></a>LL_ADC_DisableDeepPowerDown</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_DisableDeepPowerDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_DisableDeepPowerDown
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[186]"></a>LL_ADC_IsInternalRegulatorEnabled</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_IsInternalRegulatorEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_IsInternalRegulatorEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[187]"></a>LL_ADC_EnableInternalRegulator</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_EnableInternalRegulator))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_EnableInternalRegulator
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[176]"></a>LL_ADC_REG_IsConversionOngoing</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_REG_IsConversionOngoing))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_REG_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[14a]"></a>LL_ADC_IsEnabled</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[188]"></a>LL_ADC_SetCommonClock</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetCommonClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetCommonClock
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[178]"></a>LL_ADC_INJ_IsConversionOngoing</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_INJ_IsConversionOngoing))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_INJ_IsConversionOngoing
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[18e]"></a>LL_ADC_GetMultimode</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_GetMultimode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_GetMultimode
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[190]"></a>LL_ADC_REG_StartConversion</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_REG_StartConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_REG_StartConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[14b]"></a>LL_ADC_Enable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
</UL>

<P><STRONG><a name="[14c]"></a>LL_ADC_GetCommonPathInternalCh</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_GetCommonPathInternalCh))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_GetCommonPathInternalCh
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[145]"></a>LL_ADC_REG_IsTriggerSourceSWStart</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_REG_IsTriggerSourceSWStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_ADC_REG_IsTriggerSourceSWStart
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[177]"></a>LL_ADC_REG_SetSequencerRanks</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_REG_SetSequencerRanks))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ADC_REG_SetSequencerRanks
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[179]"></a>LL_ADC_SetChannelSamplingTime</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetChannelSamplingTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ADC_SetChannelSamplingTime
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[17a]"></a>LL_ADC_SetSamplingTimeCommonConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetSamplingTimeCommonConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetSamplingTimeCommonConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[17b]"></a>LL_ADC_SetOffset</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_ADC_SetOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[17c]"></a>LL_ADC_SetOffsetSign</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetOffsetSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ADC_SetOffsetSign
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[17d]"></a>LL_ADC_SetOffsetSaturation</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetOffsetSaturation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ADC_SetOffsetSaturation
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[17e]"></a>LL_ADC_GetOffsetChannel</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_GetOffsetChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_ADC_GetOffsetChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[17f]"></a>LL_ADC_SetOffsetState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetOffsetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_ADC_SetOffsetState
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[180]"></a>LL_ADC_SetChannelSingleDiff</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetChannelSingleDiff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_ADC_SetChannelSingleDiff
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[181]"></a>LL_ADC_SetCommonPathInternalCh</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32g4xx_hal_adc.o(.text.LL_ADC_SetCommonPathInternalCh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_ADC_SetCommonPathInternalCh
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[1b7]"></a>RCC_GetSysClockFreqFromPLLSource</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, stm32g4xx_hal_rcc.o(.text.RCC_GetSysClockFreqFromPLLSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_GetSysClockFreqFromPLLSource
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[195]"></a>DMA_CalcDMAMUXChannelBaseAndMask</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32g4xx_hal_dma.o(.text.DMA_CalcDMAMUXChannelBaseAndMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_CalcDMAMUXChannelBaseAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[196]"></a>DMA_CalcDMAMUXRequestGenBaseAndMask</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32g4xx_hal_dma.o(.text.DMA_CalcDMAMUXRequestGenBaseAndMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CalcDMAMUXRequestGenBaseAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[197]"></a>DMA_SetConfig</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32g4xx_hal_dma.o(.text.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[1b5]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32g4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>

<P><STRONG><a name="[1b2]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32g4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[1b3]"></a>NVIC_EncodePriority</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, stm32g4xx_hal_cortex.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[1b4]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32g4xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[1b1]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, stm32g4xx_hal_cortex.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[1bc]"></a>SysTick_Config</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32g4xx_hal_cortex.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[19a]"></a>FDCAN_CalcultateRamBlockAddresses</STRONG> (Thumb, 186 bytes, Stack size 12 bytes, stm32g4xx_hal_fdcan.o(.text.FDCAN_CalcultateRamBlockAddresses))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FDCAN_CalcultateRamBlockAddresses
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FDCAN_Init
</UL>

<P><STRONG><a name="[19e]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, stm32g4xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>

<P><STRONG><a name="[1a0]"></a>I2C_TransferConfig</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32g4xx_hal_i2c.o(.text.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>

<P><STRONG><a name="[1a4]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, stm32g4xx_hal_i2c.o(.text.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>

<P><STRONG><a name="[1a1]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, stm32g4xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[1d2]"></a>I2C_IsErrorOccurred</STRONG> (Thumb, 510 bytes, Stack size 48 bytes, stm32g4xx_hal_i2c.o(.text.I2C_IsErrorOccurred))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[1d3]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, stm32g4xx_hal_i2c.o(.text.I2C_Flush_TXDR))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>

<P><STRONG><a name="[1a3]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, stm32g4xx_hal_i2c.o(.text.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[19f]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, stm32g4xx_hal_i2c.o(.text.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[1c1]"></a>UART_EndRxTransfer</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, stm32g4xx_hal_uart.o(.text.UART_EndRxTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[68]"></a>UART_RxISR_16BIT_FIFOEN</STRONG> (Thumb, 776 bytes, Stack size 64 bytes, stm32g4xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 852 + Unknown Stack Size
<LI>Call Chain = UART_RxISR_16BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback &rArr; Lin::composeMsgLin(unsigned char) &rArr; Lin::verifyInfoFrame(unsigned char) &rArr; Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[69]"></a>UART_RxISR_8BIT_FIFOEN</STRONG> (Thumb, 772 bytes, Stack size 64 bytes, stm32g4xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 852 + Unknown Stack Size
<LI>Call Chain = UART_RxISR_8BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback &rArr; Lin::composeMsgLin(unsigned char) &rArr; Lin::verifyInfoFrame(unsigned char) &rArr; Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
</UL>
<P><STRONG><a name="[66]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, stm32g4xx_hal_uart.o(.text.UART_RxISR_16BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 828 + Unknown Stack Size
<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback &rArr; Lin::composeMsgLin(unsigned char) &rArr; Lin::verifyInfoFrame(unsigned char) &rArr; Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
<LI> stm32g4xx_hal_uart.o(.text.UART_RxISR_16BIT_FIFOEN)
</UL>
<P><STRONG><a name="[67]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, stm32g4xx_hal_uart.o(.text.UART_RxISR_8BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 820 + Unknown Stack Size
<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback &rArr; Lin::composeMsgLin(unsigned char) &rArr; Lin::verifyInfoFrame(unsigned char) &rArr; Errors::getError() &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::push_back[abi:v16000](errors const&) &rArr; void std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__push_back_slow_path&lang;errors const&&rang;(errors const&) &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::__swap_out_circular_buffer(std::__2::__split_buffer&lang;errors, std::__2::allocator&lang;errors&rang;&&rang;&) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::__uninitialized_allocator_move_if_noexcept[abi:v16000]&lang;std::__2::allocator&lang;errors&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, errors, void&rang;(std::__2::allocator&lang;errors&rang;&, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::reverse_iterator&lang;errors*&rang; std::__2::move[abi:v16000]&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::enable_if&lang;is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value && is_copy_constructible&lang;std::__2::reverse_iterator&lang;errors*&rang;&rang;::value, std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;&rang;::type std::__2::__move[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors*, errors*, 0&rang;(std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;, std::__2::reverse_iterator&lang;errors*&rang;) &rArr; std::__2::pair&lang;errors*, errors*&rang; std::__2::__move_impl[abi:v16000]&lang;std::__2::_ClassicAlgPolicy, errors, errors, void&rang;(errors*, errors*, errors*) &rArr; std::__2::pair&lang;std::__2::__unwrap_ref_decay&lang;errors*&rang;::type, std::__2::__unwrap_ref_decay&lang;errors*&rang;::type&rang; std::__2::make_pair[abi:v16000]&lang;errors*, errors*&rang;(errors*&&, errors*&&) &rArr; std::__2::pair&lang;errors*, errors*&rang;::pair__sub_object[abi:v16000]&lang;errors*, errors*, (void*)0&rang;(errors*&&, errors*&&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32g4xx_hal_uart.o(.text.UART_Start_Receive_IT)
<LI> stm32g4xx_hal_uart.o(.text.UART_RxISR_8BIT_FIFOEN)
</UL>
<P><STRONG><a name="[65]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32g4xx_hal_uart.o(.text.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMAAbortOnError &rArr; HAL_UART_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32g4xx_hal_uart.o(.text.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[1c7]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32g4xx_hal_uart.o(.text.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[1be]"></a>UARTEx_SetNbDataToProcess</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32g4xx_hal_uart_ex.o(.text.UARTEx_SetNbDataToProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
</UL>

<P><STRONG><a name="[1e1]"></a>__cxx_global_var_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, canattender.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = __cxx_global_var_init &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::vector__sub_object[abi:v16000]()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_CanAttender.cpp
</UL>

<P><STRONG><a name="[cc]"></a>_GLOBAL__sub_I_CanAttender.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, canattender.o(.text._GLOBAL__sub_I_CanAttender.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _GLOBAL__sub_I_CanAttender.cpp &rArr; __cxx_global_var_init &rArr; std::__2::vector&lang;unsigned char*, std::__2::allocator&lang;unsigned char*&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;unsigned char**, std::__2::allocator&lang;unsigned char*&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;unsigned char*&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;unsigned char*&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;unsigned char*&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canattender.o(.init_array)
</UL>
<P><STRONG><a name="[1e2]"></a>__cxx_global_var_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, errormanager.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = __cxx_global_var_init &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::vector__sub_object[abi:v16000]()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_ErrorManager.cpp
</UL>

<P><STRONG><a name="[cd]"></a>_GLOBAL__sub_I_ErrorManager.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, errormanager.o(.text._GLOBAL__sub_I_ErrorManager.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _GLOBAL__sub_I_ErrorManager.cpp &rArr; __cxx_global_var_init &rArr; std::__2::vector&lang;errors, std::__2::allocator&lang;errors&rang;&rang;::vector__sub_object[abi:v16000]() &rArr; std::__2::__compressed_pair&lang;errors*, std::__2::allocator&lang;errors&rang;&rang;::__compressed_pair__sub_object[abi:v16000]&lang;std::nullptr_t, std::__2::__default_init_tag&rang;(std::nullptr_t&&, std::__2::__default_init_tag&&) &rArr; std::__2::__compressed_pair_elem&lang;std::__2::allocator&lang;errors&rang;, 1, true&rang;::__compressed_pair_elem__sub_object[abi:v16000](std::__2::__default_init_tag) &rArr; std::__2::allocator&lang;errors&rang;::allocator__sub_object[abi:v16000]() &rArr; std::__2::__non_trivial_if&lang;true, std::__2::allocator&lang;errors&rang;&rang;::__non_trivial_if__sub_object[abi:v16000]()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> errormanager.o(.init_array)
</UL>
<P><STRONG><a name="[60]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[132]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
